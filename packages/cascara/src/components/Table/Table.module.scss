$header-background: #eee;

.Table {
  border: 1px solid $header-background;
  display: inline-grid;
  grid-template-rows: auto;
  overflow: auto;
  max-width: 100%;
  width: 100%;
  margin: 1em 0;

  // This removes these markup elements from the flow of the
  // document so we can render all cells as part of the grid
  .HeadContainer,
  .BodyContainer,
  .FootContainer,
  .Row {
    display: contents;
  }

  .HeadCell,
  .Cell {
    text-align: left;
    padding: 0.5em;
    vertical-align: middle;
  }

  .HeadContainer {
    position: sticky;
    top: 0;
  }

  .HeadCell {
    font-size: 0.9em;
    background-color: $header-background;
  }

  .SortArrow {
    float: right;
    border-style: solid;
    content: ' ';
    margin: -1em 0.15em;
    border-width: 0.15em 0.15em 0 0;
    height: 0.45em;
    width: 0.45em;
  }

  .SortArrowUp::before {
    @extend .SortArrow;
    transform: rotate(-45deg);
  }

  .SortArrowDown::before {
    @extend .SortArrow;
    transform: rotate(135deg);
  }

  .SortInactive {
    color: #b3b3b3;
  }

  .SortInactive::before {
    @extend .SortArrow;
    color: #b3b3b3;
    transform: rotate(-45deg);
  }

  .Cell {
    padding-top: 0;
    padding-bottom: 0;
    display: flex;
    align-items: center;
  }

  .CellActions {
    @extend .Cell;

    position: sticky;
    right: 0;
    justify-content: flex-end;
    white-space: nowrap;

    &:before {
      pointer-events: none;
      position: absolute;
      content: ' ';
      width: 1em;
      height: 100%;
      left: -1em;
    }
  }

  // Even though this is display: contents, we can still use it
  // for css specificity
  .Row {
    &:nth-of-type(odd) {
      .Cell,
      .CellActions {
        background-color: #fff;
      }

      .CellActions {
        &:before {
          background-image: linear-gradient(to right, #ffffff00, #fff);
        }
      }
    }

    &:nth-of-type(even) {
      .Cell,
      .CellActions {
        background-color: #f2f2f2;
      }

      .CellActions {
        &:before {
          background-image: linear-gradient(to right, #f2f2f200, #f2f2f2);
        }
      }
    }
  }
}
