@use 'cascara';

:global html[data-layout='admin'] {
  // For performance reasons, we may want to consider importing and setting these
  // separately, maybe with some loading styles. Otherwise we will have a flash of
  // elements internally that do not have the data-layout attribute present yet
  // we have un-grid elements popping on the screen

  --document-background: #dddee0;
  --document-text: #1e262b;
  --brand-primary-color: purple;
  --brand-secondary-color: yellow;
  --color-transparent-grey: rgba(127, 127, 127, 0.375);

  @media (prefers-color-scheme: dark) {
    --document-background: #1e262b;
    --document-text: #dddee0;
    --brand-primary-color: red;
    --brand-secondary-color: orange;
  }

  --main-max-width: 60em;
  --drawer-max-width: 30em;
  --nav-max-width: 20em;

  & body,
  & #root,
  & #__next {
    color: var(--document-text);
    background-color: var(--document-background);
    height: 100%;
    overflow: hidden;
  }

  & #root,
  & #__next {
    display: grid;
    grid-template-columns: var(--nav-max-width) auto var(--drawer-max-width);
    grid-template-rows: 4em auto;
    grid-template-areas:
      'header header header'
      'nav main drawer';
  }
}

.Header {
  grid-area: header;
  box-shadow: inset 0 -1px var(--color-transparent-grey);
}

.Nav {
  @include cascara.scroll-vertical;
  grid-area: nav;
  box-shadow: inset -1px 0 var(--color-transparent-grey);
}

.Main {
  @include cascara.scroll-vertical;
  grid-area: main;
  justify-self: center;
  max-width: var(--main-max-width);

  &.no-drawer {
    justify-self: left;
    grid-column: span 2;
    max-width: calc(var(--main-max-width) + var(--drawer-max-width));
  }
}

.Drawer {
  @include cascara.scroll-vertical;
  grid-area: drawer;
  box-shadow: inset 1px 0 var(--color-transparent-grey);
}
