{"version":3,"sources":["webpack:///../README.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"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","file":"component---readme-md-0485f9965fdff651796a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/manuramirez/code/cascara/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"cascara\"\n    }}>{`Cascara`}</h1>\n    <p>{`Espressive's Functional Design System`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://app.circleci.com/pipelines/github/Espressive/cascara\"\n      }}><img alt=\"Espressive\" src=\"https://circleci.com/gh/Espressive/cascara.svg?style=svg\" /></a></p>\n    <h2 {...{\n      \"id\": \"yarn\"\n    }}>{`Yarn`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Set up separate workspaces for apps, ui, utils, etc`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Support for pnp and/or yarn 2.x`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"react-cosmos\"\n    }}>{`React Cosmos`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Create config that can be run at the monorepo root`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Create config that can be run in a package`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Centralize dependencies for both configs at application root`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Make any webpack overrides react to changes in cosmos.config or package.json`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"prettier\"\n    }}>{`Prettier`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Set up a prettier config for the monorepo that is portable to all workspaces`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Set up a precommit hook to always run prettier before commiting changes`}<ul parentName=\"li\" {...{\n          \"className\": \"contains-task-list\"\n        }}>\n          <li parentName=\"ul\" {...{\n            \"className\": \"task-list-item\"\n          }}><input parentName=\"li\" {...{\n              \"type\": \"checkbox\",\n              \"checked\": false,\n              \"disabled\": true\n            }}></input>{` `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/typicode/husky/issues/639\"\n            }}>{`Watch known issue for husky`}</a>{` that does not fire hooks in some GIT GUIs like Sourcetree or Tower`}</li>\n        </ul></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"vs-code\"\n    }}>{`VS Code`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Set up a workspace file with all recommended settings and plugins for the monorepo (probably will be more later)`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Auto lint and prettier on save 🙏🏽`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"docz\"\n    }}>{`Docz`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Set up documentation `}<a parentName=\"li\" {...{\n          \"href\": \"https://api.slack.com/docs/sign-in-with-slack\"\n        }}>{`Slack sign in`}</a>{` using `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.netlify.com/blog/2016/10/10/integrating-with-netlify-oauth2/\"\n        }}>{`oauth2 and Netlify`}</a></li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Set up Docz at root level to build from workspace readme.mdx files`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Define what views are needed for all documentation`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Add component/display support for all above views`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Add support to analyze component composition and link to atomic components in doc system`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Add support to link to component designs in Abstract`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Get the docs building and deploying to Netlify`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"rollup\"\n    }}>{`Rollup`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Set up Rollup to compile components consumed by apps`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Evaluate if Rollup is actually the best option for this`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`See if Rollup compilation can borrow all of the same babel configs from react-scripts`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Make sure tooling supports watch commands on these components once these packages become compiled dependencies`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Evaluate if we need to change the React Cosmos config for these packages to use a different configuration if the build system diverges too much from react-scripts so the DX is consistent with the output of the builds`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"framer-x\"\n    }}>{`Framer X`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Set up a library in Framer X and understand how we link our source components to exports for Framer`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Get components compiled so we can process using `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/framer/component-importer\"\n        }}><inlineCode parentName=\"a\">{`component-importer`}</inlineCode></a></li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`CSS Modules?`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Build system to deploy package updates to Framer components when made`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Determine if there is a consistent URL for library components on web that we could link to`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"abstractsketch\"\n    }}>{`Abstract/Sketch`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Figure out what our Abstract file links are for assets to add them as links to MDX`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"make\"\n    }}>{`Make`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Set up common commands and make recipes area to simplify tooling maintenance and process`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Reusable package-scoped commands with wildcards (start, build, etc)`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Doc generation and build/serve commands`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Centralized \"help\" available from all make command groups`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"testing\"\n    }}>{`Testing`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Set up testing and figure out how we set up coverage per package`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Cypress support for all UI tests as well`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"eslint\"\n    }}>{`Eslint`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Revise our exising eslint config to be a baseline of extending `}<inlineCode parentName=\"li\">{`react-scripts`}</inlineCode>{` config and adding our own on top`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Validate that none of the base config conflicts with Prettier`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Remove any of our current extending configs that conflict with Prettier`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Relax any of our existing rules that we are fighting or no longer best practice`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"husky\"\n    }}>{`Husky`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Set up Husky for git hooks`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`pre-commit should at least run prettier`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`pre-push should run tests, lint`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Lint on changed files MIGHT only be needed for FDS components since linting is built in to react-scripts... we might want to make sure that stays in the build pipeline once we have Rollup`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Enforce git-flow branching structure`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}