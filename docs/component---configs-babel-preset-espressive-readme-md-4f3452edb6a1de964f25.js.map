{"version":3,"sources":["webpack:///../configs/babel-preset-espressive/README.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uPAMaA,G,UAAe,S,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,2BADR,2BAGA,wDACA,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,uBADR,uBAGA,iHAAgG,0BAAYC,WAAW,KAAvB,iBAAhG,6EACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,iEAIL,iCAAgB,0BAAYA,WAAW,KAAvB,gBAAhB,KACA,iBAAQ,CACN,GAAM,2BADR,2BAGA,qBAAG,6BAAGA,WAAW,KAAQ,CACrB,KAAQ,uCADT,gEAAH,uQAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wCAIL,iBAAQ,CACN,GAAM,UADR,UAGA,sY,yNAKJJ,EAAWK,gBAAiB","file":"component---configs-babel-preset-espressive-readme-md-4f3452edb6a1de964f25.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/manuramirez/code/cascara/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"babel-preset-espressive\"\n    }}>{`babel-preset-espressive`}</h1>\n    <p>{`Babel preset used by Espressive`}</p>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <h4 {...{\n      \"id\": \"install-the-package\"\n    }}>{`Install The Package`}</h4>\n    <p>{`This Babel preset can be used at the root of a monorepo package. It should be added as a `}<inlineCode parentName=\"p\">{`devDependency`}</inlineCode>{`. Until this becomes a published package, this needs to be done manually.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"devDependencies\": {\n  \"babel-preset-espressive\": \"*\"\n},\n`}</code></pre>\n    <p>{`Then run `}<inlineCode parentName=\"p\">{`yarn install`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"add-the-preset-to-babel\"\n    }}>{`Add The Preset To Babel`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://babeljs.io/docs/en/presets\"\n      }}>{`Babel can be configured with presets in a few different ways`}</a>{` depending on how it is being run (CLI, Webpack, Rollup) so it is important to understand where this preset is being used in order to add it. Once the package has been installed, using the preset should be as simple as including it in the build configuration:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"presets\": [\"espressive\"]\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"future\"\n    }}>{`Future`}</h2>\n    <p>{`Currently this preset is only being used in Rollup for building runtimes. We may want to include a few other preset options in this package at a later date that make it easier to build runtimes optionally. This preset may also become packaged with a reusable Rollbar config at some point to make setting up new component packages easier to setup and maintain.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}