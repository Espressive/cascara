{"version":3,"sources":["webpack:///../configs/README.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uPAMaA,G,UAAe,S,mMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,WADR,WAGA,iLACA,iBAAQ,CACN,GAAM,4BACL,0BAAYC,WAAW,MAAvB,6BACH,uDACA,iBAAQ,CACN,GAAM,2BACL,0BAAYA,WAAW,MAAvB,4BACH,sDACA,iBAAQ,CACN,GAAM,2BACL,0BAAYA,WAAW,MAAvB,4BACH,uG,iMAKJJ,EAAWK,gBAAiB","file":"component---configs-readme-md-e69f07bdeba4a3992d73.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/manuramirez/code/cascara/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"configs\"\n    }}>{`Configs`}</h1>\n    <p>{`Eventually we will probably want to also make these configs into a separate repo where they can be built and deployed as semantically versioned packages`}</p>\n    <h2 {...{\n      \"id\": \"eslint-config-espressive\"\n    }}><inlineCode parentName=\"h2\">{`eslint-config-espressive`}</inlineCode></h2>\n    <p>{`Exportable configs for eslint.`}</p>\n    <h2 {...{\n      \"id\": \"babel-preset-espressive\"\n    }}><inlineCode parentName=\"h2\">{`babel-preset-espressive`}</inlineCode></h2>\n    <p>{`Exportable configs for babel.`}</p>\n    <h2 {...{\n      \"id\": \"cra-template-espressive\"\n    }}><inlineCode parentName=\"h2\">{`cra-template-espressive`}</inlineCode></h2>\n    <p>{`Create React App template for Espressive for use inside of our monorepo.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}