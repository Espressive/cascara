(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"7OsV":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return p}));var c=a("Fcif"),i=a("+I+c"),s=(a("mXGw"),a("/FXl")),b=a("TjRS"),l=(a("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"README.md"}});var n={_frontmatter:l},o=b.a;function p(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(s.b)(o,Object(c.a)({},n,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"cascara"},"Cascara"),Object(s.b)("p",null,"Espressive's Functional Design System"),Object(s.b)("p",null,Object(s.b)("a",Object(c.a)({parentName:"p"},{href:"https://app.circleci.com/pipelines/github/Espressive/cascara"}),Object(s.b)("img",{alt:"Espressive",src:"https://circleci.com/gh/Espressive/cascara.svg?style=svg"}))),Object(s.b)("h2",{id:"yarn"},"Yarn"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Set up separate workspaces for apps, ui, utils, etc"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Support for pnp and/or yarn 2.x")),Object(s.b)("h2",{id:"react-cosmos"},"React Cosmos"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Create config that can be run at the monorepo root"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Create config that can be run in a package"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Centralize dependencies for both configs at application root"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Make any webpack overrides react to changes in cosmos.config or package.json")),Object(s.b)("h2",{id:"prettier"},"Prettier"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Set up a prettier config for the monorepo that is portable to all workspaces"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Set up a precommit hook to always run prettier before commiting changes",Object(s.b)("ul",Object(c.a)({parentName:"li"},{className:"contains-task-list"}),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ",Object(s.b)("a",Object(c.a)({parentName:"li"},{href:"https://github.com/typicode/husky/issues/639"}),"Watch known issue for husky")," that does not fire hooks in some GIT GUIs like Sourcetree or Tower")))),Object(s.b)("h2",{id:"vs-code"},"VS Code"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Set up a workspace file with all recommended settings and plugins for the monorepo (probably will be more later)"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Auto lint and prettier on save üôèüèΩ")),Object(s.b)("h2",{id:"docz"},"Docz"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Set up documentation ",Object(s.b)("a",Object(c.a)({parentName:"li"},{href:"https://api.slack.com/docs/sign-in-with-slack"}),"Slack sign in")," using ",Object(s.b)("a",Object(c.a)({parentName:"li"},{href:"https://www.netlify.com/blog/2016/10/10/integrating-with-netlify-oauth2/"}),"oauth2 and Netlify")),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Set up Docz at root level to build from workspace readme.mdx files"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Define what views are needed for all documentation"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Add component/display support for all above views"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Add support to analyze component composition and link to atomic components in doc system"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Add support to link to component designs in Abstract"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Get the docs building and deploying to Netlify")),Object(s.b)("h2",{id:"rollup"},"Rollup"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Set up Rollup to compile components consumed by apps"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Evaluate if Rollup is actually the best option for this"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","See if Rollup compilation can borrow all of the same babel configs from react-scripts"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Make sure tooling supports watch commands on these components once these packages become compiled dependencies"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Evaluate if we need to change the React Cosmos config for these packages to use a different configuration if the build system diverges too much from react-scripts so the DX is consistent with the output of the builds")),Object(s.b)("h2",{id:"framer-x"},"Framer X"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Set up a library in Framer X and understand how we link our source components to exports for Framer"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Get components compiled so we can process using ",Object(s.b)("a",Object(c.a)({parentName:"li"},{href:"https://github.com/framer/component-importer"}),Object(s.b)("inlineCode",{parentName:"a"},"component-importer"))),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","CSS Modules?"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Build system to deploy package updates to Framer components when made"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Determine if there is a consistent URL for library components on web that we could link to")),Object(s.b)("h2",{id:"abstractsketch"},"Abstract/Sketch"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Figure out what our Abstract file links are for assets to add them as links to MDX")),Object(s.b)("h2",{id:"make"},"Make"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Set up common commands and make recipes area to simplify tooling maintenance and process"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Reusable package-scoped commands with wildcards (start, build, etc)"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Doc generation and build/serve commands"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ",'Centralized "help" available from all make command groups')),Object(s.b)("h2",{id:"testing"},"Testing"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Set up testing and figure out how we set up coverage per package"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Cypress support for all UI tests as well")),Object(s.b)("h2",{id:"eslint"},"Eslint"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Revise our exising eslint config to be a baseline of extending ",Object(s.b)("inlineCode",{parentName:"li"},"react-scripts")," config and adding our own on top"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Validate that none of the base config conflicts with Prettier"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Remove any of our current extending configs that conflict with Prettier"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Relax any of our existing rules that we are fighting or no longer best practice")),Object(s.b)("h2",{id:"husky"},"Husky"),Object(s.b)("ul",{className:"contains-task-list"},Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Set up Husky for git hooks"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","pre-commit should at least run prettier"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","pre-push should run tests, lint"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Lint on changed files MIGHT only be needed for FDS components since linting is built in to react-scripts... we might want to make sure that stays in the build pipeline once we have Rollup"),Object(s.b)("li",Object(c.a)({parentName:"ul"},{className:"task-list-item"}),Object(s.b)("input",Object(c.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Enforce git-flow branching structure")))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"README.md"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---readme-md-0485f9965fdff651796a.js.map