{"version":3,"sources":["webpack:///../design/ui/semantic-ui-css-custom/semantic/tasks/README.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAMaA,G,UAAe,S,2OAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIC,WAAW,MAAf,kDACA,kBAAIA,WAAW,MAAf,uCACA,kBAAIA,WAAW,MAAf,mCACA,kBAAIA,WAAW,MAAf,4CAEF,iBAAQ,CACN,GAAM,cADR,cAGA,8HACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,qG,yOAWTJ,EAAWK,gBAAiB","file":"component---design-ui-semantic-ui-css-custom-semantic-tasks-readme-md-d52cca1b0ecfbf045bfc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/manuramirez/code/cascara/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"tasks\"\n    }}>{`Tasks`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Watch - Compile only changed files from source`}</li>\n      <li parentName=\"ul\">{`Build - Build all files from source`}</li>\n      <li parentName=\"ul\">{`Version - Output version number`}</li>\n      <li parentName=\"ul\">{`Install - Run Installer to Set-up Paths`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"how-to-use\"\n    }}>{`How to use`}</h2>\n    <p>{`These tasks can be imported into your own gulpfile allowing you to avoid using Semantic's build tools`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var\n  watch = require('path/to/semantic/tasks/watch')\n;\ngulp.task('watch ui', watch);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}