{"version":3,"sources":["webpack:///../design/ui/button/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","EspButton","__position","__code","__scope","semanticUiCssOffline","Playground","Props","content","outcome","isMDXComponent"],"mappings":"4RASaA,G,UAAe,S,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,iTACA,wHACA,oDACA,iBAAQ,CACN,UAAa,sBAEb,8BAAIC,WAAW,MAAS,CACtB,UAAa,mBACZ,iCAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,mDAOA,8BAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,iCAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,qFAQF,YAAC,IAAD,CAAOC,GAAIC,YAAWH,QAAQ,UAC9B,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,oCAAuCC,SAAO,GAC/EP,QACAH,kBACAW,+BACAC,eACAC,UACAN,uBAN+E,gBAO/EP,IAP+E,EAQ/EH,eAR+E,GAS9EO,QAAQ,cACb,YAAC,YAAD,CAAWU,QAAQ,YAAYV,QAAQ,eAErC,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,sDAA2DC,SAAO,GACnGP,QACAH,kBACAW,+BACAC,eACAC,UACAN,uBANmG,gBAOnGP,IAPmG,EAQnGH,eARmG,GASlGO,QAAQ,cACb,YAAC,YAAD,CAAWU,QAAQ,WAAWC,QAAQ,WAAWX,QAAQ,qB,2MAM3DH,EAAWe,gBAAiB","file":"component---design-ui-button-readme-mdx-88430ce7080830ed36ad.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/manuramirez/code/cascara/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport semanticUiCssOffline from 'semantic-ui-css-offline';\nimport { Playground, Props } from 'docz';\nimport { EspButton } from './es';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`It feels like there is a lot of boilerplate for these MDX documents that we could definitely abstract out. Next steps will be to also make some display components to use in MDX like do/don't lists, etc. Page should probably automatically give the \"name\" without having to add it.`}</p>\n    <p>{`Will probably modify the Docz Props and Playground components to do a little more what we want.`}</p>\n    <p>{`Still to also explore here:`}</p>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Generate the playgrounds from fixture files`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`List any atomic components that the component might be built out of (if any)`}</li>\n    </ul>\n    <Props of={EspButton} mdxType=\"Props\" />\n    <Playground __position={1} __code={'<EspButton content=\\\"Docz Demo\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      semanticUiCssOffline,\n      Playground,\n      Props,\n      EspButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <EspButton content='Docz Demo' mdxType=\"EspButton\" />\n    </Playground>\n    <Playground __position={2} __code={'<EspButton content=\\\"Positive\\\" outcome=\\\"positive\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      semanticUiCssOffline,\n      Playground,\n      Props,\n      EspButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <EspButton content='Positive' outcome='positive' mdxType=\"EspButton\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}