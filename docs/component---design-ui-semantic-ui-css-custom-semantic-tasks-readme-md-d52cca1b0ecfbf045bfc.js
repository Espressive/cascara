(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"cMu/":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return r}));var a=n("Fcif"),i=n("+I+c"),s=(n("mXGw"),n("/FXl")),c=n("TjRS"),o=(n("aD51"),{});void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"design/ui/semantic-ui-css-custom/semantic/tasks/README.md"}});var l={_frontmatter:o},u=c.a;function r(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(s.b)(u,Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"tasks"},"Tasks"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Watch - Compile only changed files from source"),Object(s.b)("li",{parentName:"ul"},"Build - Build all files from source"),Object(s.b)("li",{parentName:"ul"},"Version - Output version number"),Object(s.b)("li",{parentName:"ul"},"Install - Run Installer to Set-up Paths")),Object(s.b)("h2",{id:"how-to-use"},"How to use"),Object(s.b)("p",null,"These tasks can be imported into your own gulpfile allowing you to avoid using Semantic's build tools"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"var\n  watch = require('path/to/semantic/tasks/watch')\n;\ngulp.task('watch ui', watch);\n")))}void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"design/ui/semantic-ui-css-custom/semantic/tasks/README.md"}}),r.isMDXComponent=!0}}]);
//# sourceMappingURL=component---design-ui-semantic-ui-css-custom-semantic-tasks-readme-md-d52cca1b0ecfbf045bfc.js.map