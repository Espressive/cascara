{"version":3,"sources":["keyboard-key/index.ts"],"names":["isObject","val","Array","isArray","getCode","eventOrKey","keyCode","which","keyboardKey","key","getKey","eventOrCode","isEvent","event","name","codes","shiftKey","code","hasOwnProperty","value","Number","i","length","SpacebarKey","Digit0Key","Digit1Key","Digit2Key","Digit3Key","Digit4Key","Digit5Key","Digit6Key","Digit7Key","Digit8Key","Digit9Key","TildeKey","GraveAccentKey","ExclamationPointKey","AtSignKey","PoundSignKey","PercentSignKey","CaretKey","AmpersandKey","PlusSignKey","MinusSignKey","EqualsSignKey","DivisionSignKey","MultiplicationSignKey","CommaKey","DecimalKey","ColonKey","SemicolonKey","PipeKey","BackSlashKey","QuestionMarkKey","SingleQuoteKey","DoubleQuoteKey","LeftCurlyBraceKey","RightCurlyBraceKey","LeftParenthesisKey","RightParenthesisKey","LeftAngleBracketKey","RightAngleBracketKey","LeftSquareBracketKey","RightSquareBracketKey","ArrowDownKey","ArrowDown","ArrowLeftKey","ArrowLeft","ArrowRightKey","ArrowRight","ArrowUpKey","ArrowUp","EndKey","End","EnterKey","Enter","HomeKey","Home","PageDownKey","PageDown","PageUpKey","PageUp","TabKey","Tab"],"mappings":"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","sourcesContent":["import { codes } from './codes';\n\nexport type KeyboardEventLike = Pick<KeyboardEvent, 'key' | 'keyCode' | 'which' | 'shiftKey'>;\n\nexport interface KeyNames {\n  Cancel: 3;\n  Help: 6;\n  Backspace: 8;\n  Tab: 9;\n  Clear: 12;\n  Enter: 13;\n  Shift: 16;\n  Control: 17;\n  Alt: 18;\n  Pause: 19;\n  CapsLock: 20;\n  Escape: 27;\n  Convert: 28;\n  NonConvert: 29;\n  Accept: 30;\n  ModeChange: 31;\n  ' ': 32;\n  PageUp: 33;\n  PageDown: 34;\n  End: 35;\n  Home: 36;\n  ArrowLeft: 37;\n  ArrowUp: 38;\n  ArrowRight: 39;\n  ArrowDown: 40;\n  Select: 41;\n  Print: 42;\n  Execute: 43;\n  PrintScreen: 44;\n  Insert: 45;\n  Delete: 46;\n  0: 48;\n  ')': 48;\n  1: 49;\n  '!': 49;\n  2: 50;\n  '@': 50;\n  3: 51;\n  '#': 51;\n  4: 52;\n  $: 52;\n  5: 53;\n  '%': 53;\n  6: 54;\n  '^': 54;\n  7: 55;\n  '&': 55;\n  8: 56;\n  '*': 56;\n  9: 57;\n  '(': 57;\n  a: 65;\n  A: 65;\n  b: 66;\n  B: 66;\n  c: 67;\n  C: 67;\n  d: 68;\n  D: 68;\n  e: 69;\n  E: 69;\n  f: 70;\n  F: 70;\n  g: 71;\n  G: 71;\n  h: 72;\n  H: 72;\n  i: 73;\n  I: 73;\n  j: 74;\n  J: 74;\n  k: 75;\n  K: 75;\n  l: 76;\n  L: 76;\n  m: 77;\n  M: 77;\n  n: 78;\n  N: 78;\n  o: 79;\n  O: 79;\n  p: 80;\n  P: 80;\n  q: 81;\n  Q: 81;\n  r: 82;\n  R: 82;\n  s: 83;\n  S: 83;\n  t: 84;\n  T: 84;\n  u: 85;\n  U: 85;\n  v: 86;\n  V: 86;\n  w: 87;\n  W: 87;\n  x: 88;\n  X: 88;\n  y: 89;\n  Y: 89;\n  z: 90;\n  Z: 90;\n  OS: 91;\n  ContextMenu: 93;\n  F1: 112;\n  F2: 113;\n  F3: 114;\n  F4: 115;\n  F5: 116;\n  F6: 117;\n  F7: 118;\n  F8: 119;\n  F9: 120;\n  F10: 121;\n  F11: 122;\n  F12: 123;\n  F13: 124;\n  F14: 125;\n  F15: 126;\n  F16: 127;\n  F17: 128;\n  F18: 129;\n  F19: 130;\n  F20: 131;\n  F21: 132;\n  F22: 133;\n  F23: 134;\n  F24: 135;\n  NumLock: 144;\n  ScrollLock: 145;\n  VolumeMute: 181;\n  VolumeDown: 182;\n  VolumeUp: 183;\n  ';': 186;\n  ':': 186;\n  '=': 187;\n  '+': 187;\n  ',': 188;\n  '<': 188;\n  '-': 189;\n  _: 189;\n  '.': 190;\n  '>': 190;\n  '/': 191;\n  '?': 191;\n  '`': 192;\n  '~': 192;\n  '[': 219;\n  '{': 219;\n  '\\\\': 220;\n  '|': 220;\n  ']': 221;\n  '}': 221;\n  \"'\": 222;\n  '\"': 222;\n  Meta: 224;\n  AltGraph: 225;\n  Attn: 246;\n  CrSel: 247;\n  ExSel: 248;\n  EraseEof: 249;\n  Play: 250;\n  ZoomOut: 251;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (val: any): val is KeyboardEventLike => {\n  return val !== null && !Array.isArray(val) && typeof val === 'object';\n};\n\n/**\n * Get the `keyCode` or `which` value from a keyboard event or `key` name.\n * If an object is provided, the precedence of properties is `keyCode`, `which`, `key`.\n * @param eventOrKey - A keyboard event-like object or `key` name. If an object, at least one of\n * `key`, `keyCode`, or `which` must be defined.\n */\nexport function getCode(eventOrKey: Partial<KeyboardEventLike> | string): number | undefined {\n  if (isObject(eventOrKey)) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return eventOrKey.keyCode || eventOrKey.which || (keyboardKey as any)[eventOrKey.key as string];\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (keyboardKey as any)[eventOrKey as string];\n}\n\n/**\n * Get the key name from a keyboard event, `keyCode`, or `which` value.\n * If an object is provided, the precedence of properties is `key`, `keyCode`, `which`.\n * @param eventOrCode - A keyboard event-like object or key code. If an object, at least one of\n * `key`, `keyCode`, or `which` must be defined.\n */\nexport function getKey(eventOrCode: Partial<KeyboardEventLike> | number): string | undefined {\n  const isEvent = isObject(eventOrCode);\n  const event = eventOrCode as KeyboardEventLike;\n\n  // handle events with a `key` already defined\n  if (isEvent && event.key) {\n    return event.key;\n  }\n\n  let name = codes[(isEvent ? event.keyCode || event.which : eventOrCode) as number];\n\n  if (Array.isArray(name)) {\n    if (isEvent) {\n      name = name[event.shiftKey ? 1 : 0];\n    } else {\n      name = name[0];\n    }\n  }\n\n  return name;\n}\n\n/**\n * Mapping of keyboard keys with aliases and codes.\n */\nexport const keyboardKey = {} as KeyNames;\n\n// Populate names on keyboardKey.\nfor (const code in codes) {\n  if (codes.hasOwnProperty(code)) {\n    const value = codes[code];\n    if (typeof value === 'string') {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (keyboardKey as any)[value] = Number(code);\n    } else {\n      // Array of valid values which map to the same code.\n      for (let i = 0; i < value.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (keyboardKey as any)[value[i]] = Number(code);\n      }\n    }\n  }\n}\n\n// As single exports for keys that normally have special functionality attached to them.\nexport const SpacebarKey = keyboardKey[' '];\nexport const Digit0Key = keyboardKey['0'];\nexport const Digit1Key = keyboardKey['1'];\nexport const Digit2Key = keyboardKey['2'];\nexport const Digit3Key = keyboardKey['3'];\nexport const Digit4Key = keyboardKey['4'];\nexport const Digit5Key = keyboardKey['5'];\nexport const Digit6Key = keyboardKey['6'];\nexport const Digit7Key = keyboardKey['7'];\nexport const Digit8Key = keyboardKey['8'];\nexport const Digit9Key = keyboardKey['9'];\nexport const TildeKey = keyboardKey['~'];\nexport const GraveAccentKey = keyboardKey['`'];\nexport const ExclamationPointKey = keyboardKey['!'];\nexport const AtSignKey = keyboardKey['@'];\nexport const PoundSignKey = keyboardKey['#'];\nexport const PercentSignKey = keyboardKey['%'];\nexport const CaretKey = keyboardKey['^'];\nexport const AmpersandKey = keyboardKey['&'];\nexport const PlusSignKey = keyboardKey['+'];\nexport const MinusSignKey = keyboardKey['-'];\nexport const EqualsSignKey = keyboardKey['='];\nexport const DivisionSignKey = keyboardKey['/'];\nexport const MultiplicationSignKey = keyboardKey['*'];\nexport const CommaKey = keyboardKey[','];\nexport const DecimalKey = keyboardKey['.'];\nexport const ColonKey = keyboardKey[':'];\nexport const SemicolonKey = keyboardKey[';'];\nexport const PipeKey = keyboardKey['|'];\nexport const BackSlashKey = keyboardKey['\\\\'];\nexport const QuestionMarkKey = keyboardKey['?'];\nexport const SingleQuoteKey = keyboardKey[\"'\"];\nexport const DoubleQuoteKey = keyboardKey['\"'];\nexport const LeftCurlyBraceKey = keyboardKey['{'];\nexport const RightCurlyBraceKey = keyboardKey['}'];\nexport const LeftParenthesisKey = keyboardKey['('];\nexport const RightParenthesisKey = keyboardKey[')'];\nexport const LeftAngleBracketKey = keyboardKey['<'];\nexport const RightAngleBracketKey = keyboardKey['>'];\nexport const LeftSquareBracketKey = keyboardKey['['];\nexport const RightSquareBracketKey = keyboardKey[']'];\nexport const ArrowDownKey = keyboardKey.ArrowDown;\nexport const ArrowLeftKey = keyboardKey.ArrowLeft;\nexport const ArrowRightKey = keyboardKey.ArrowRight;\nexport const ArrowUpKey = keyboardKey.ArrowUp;\nexport const EndKey = keyboardKey.End;\nexport const EnterKey = keyboardKey.Enter;\nexport const HomeKey = keyboardKey.Home;\nexport const PageDownKey = keyboardKey.PageDown;\nexport const PageUpKey = keyboardKey.PageUp;\nexport const TabKey = keyboardKey.Tab;\n"],"file":"index.js"}