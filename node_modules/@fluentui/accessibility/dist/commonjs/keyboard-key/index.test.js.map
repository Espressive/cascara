{"version":3,"sources":["keyboard-key/index.test.ts"],"names":["describe","it","Object","keys","codes","forEach","code","name","Number","Array","isArray","expect","String","keyboardKey","toEqual","getCode","toBeInstanceOf","Function","_code","key0","key","which","keyCode","shiftKey","key1","getKey","keyName"],"mappings":"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","sourcesContent":["import { codes } from './codes';\nimport { getCode, getKey, keyboardKey } from './index';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\ndescribe('keyboardKey', () => {\n  it('has a key/value for every value/key in codes', () => {\n    Object.keys(codes).forEach(code => {\n      const name = codes[Number(code)];\n\n      if (Array.isArray(name)) {\n        expect(String((keyboardKey as any)[name[0]])).toEqual(code);\n        expect(String((keyboardKey as any)[name[1]])).toEqual(code);\n      } else {\n        expect(String((keyboardKey as any)[name])).toEqual(code);\n      }\n    });\n  });\n\n  describe('getCode', () => {\n    it('is a function', () => {\n      expect(getCode).toBeInstanceOf(Function);\n    });\n    it('returns the code for a given key name', () => {\n      expect(getCode('Enter')).toEqual(13);\n    });\n    it('handles all key names in codes', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const _code = Number(code);\n\n        if (Array.isArray(name)) {\n          expect(getCode(name[0])).toEqual(_code);\n          expect(getCode(name[1])).toEqual(_code);\n        } else {\n          expect(getCode(name)).toEqual(_code);\n        }\n      });\n    });\n\n    it('handles event like objects with `key` prop', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const _code = Number(code);\n\n        if (Array.isArray(name)) {\n          const key0 = { key: name[0], which: _code, keyCode: _code, shiftKey: false };\n          const key1 = { key: name[1], which: _code, keyCode: _code, shiftKey: false };\n\n          expect(getCode(key0)).toEqual(_code);\n          expect(getCode(key1)).toEqual(_code);\n        } else {\n          const key = { key: name, which: _code, keyCode: _code, shiftKey: false };\n          expect(getCode(key)).toEqual(_code);\n        }\n      });\n    });\n  });\n\n  describe('getKey', () => {\n    it('is a function', () => {\n      expect(getKey).toBeInstanceOf(Function);\n    });\n    it('returns the code for a given key name', () => {\n      expect(getKey(13)).toEqual('Enter');\n    });\n    it('handles all codes', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const keyName = getKey(Number(code));\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[0]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like object: { keyCode: code, shiftKey: false }`', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const _code = Number(code);\n        const keyName = getKey({ which: _code, keyCode: _code, shiftKey: false });\n\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[0]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like object: { keyCode: code, shiftKey: true }`', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const keyName = getKey({ keyCode: Number(code), shiftKey: true });\n\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[1]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like object: { which: code, shiftKey: false }', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const keyName = getKey({ which: Number(code), shiftKey: false });\n\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[0]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like object: { which: code, shiftKey: true }', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const keyName = getKey({ which: Number(code), shiftKey: true });\n\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[1]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like objects with a `key` property', () => {\n      const keyName = getKey({ key: '/' });\n      expect(keyName).toEqual('/');\n    });\n  });\n});\n"],"file":"index.test.js"}