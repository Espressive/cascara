{"version":3,"sources":["behaviors/Radio/radioGroupBehavior.ts"],"names":["radioGroupBehavior","attributes","root","role","keyActions","nextItem","keyCombinations","keyCode","keyboardKey","ArrowDown","ArrowRight","prevItem","ArrowUp","ArrowLeft"],"mappings":";;;;;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,kBAA0D,GAAG,SAA7DA,kBAA6D;AAAA,SAAO;AAC/EC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KADmE;AAO/EC,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,EAAE;AACJG,QAAAA,QAAQ,EAAE;AACRC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,yBAAYC;AAAvB,WAAD,EAAqC;AAAEF,YAAAA,OAAO,EAAEC,yBAAYE;AAAvB,WAArC;AADT,SADN;AAIJC,QAAAA,QAAQ,EAAE;AACRL,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,yBAAYI;AAAvB,WAAD,EAAmC;AAAEL,YAAAA,OAAO,EAAEC,yBAAYK;AAAvB,WAAnC;AADT;AAJN;AADI;AAPmE,GAAP;AAAA,CAAnE","sourcesContent":["import { keyboardKey } from '../../keyboard-key';\nimport { Accessibility } from '../../types';\n\n/**\n * @description\n * Implements ARIA Radio Group design pattern.\n * @specification\n *  Adds role='radiogroup'. This allows screen readers to handle the component as a radio group.\n *  Triggers 'nextItem' action with 'ArrowDown' or 'ArrowRight' on 'root'.\n *  Triggers 'prevItem' action with 'ArrowUp' or 'ArrowLeft' on 'root'.\n */\nexport const radioGroupBehavior: Accessibility<RadioGroupBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'radiogroup',\n    },\n  },\n\n  keyActions: {\n    root: {\n      nextItem: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowDown }, { keyCode: keyboardKey.ArrowRight }],\n      },\n      prevItem: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowUp }, { keyCode: keyboardKey.ArrowLeft }],\n      },\n    },\n  },\n});\n\nexport type RadioGroupBehaviorProps = never;\n"],"file":"radioGroupBehavior.js"}