"use strict";

exports.__esModule = true;
exports.radioGroupItemBehavior = void 0;

var _keyboardKey = require("../../keyboard-key");

var _attributes = require("../../attributes");

/**
 * @description
 * Provides navigation inside the inner focus zone using Tab key
 * @specification
 *  Adds role='radio'. This allows screen readers to handle the component as a radio button.
 *  Adds attribute 'aria-checked=true' based on the property 'checked'.
 *  Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.
 *  Adds attribute 'data-is-focusable=true' based on the property 'checked'.
 *  Triggers 'performClick' action with 'Spacebar' on 'root'.
 *  Implements roving tabIndex.
 */
var radioGroupItemBehavior = function radioGroupItemBehavior(props) {
  var _ref;

  return {
    attributes: {
      root: Object.assign({
        role: 'radio',
        tabIndex: props.checked ? 0 : -1
      }, props.checked && (_ref = {}, _ref[_attributes.IS_FOCUSABLE_ATTRIBUTE] = true, _ref), {
        'aria-checked': props.checked,
        'aria-disabled': props.disabled
      })
    },
    keyActions: {
      root: {
        performClick: {
          keyCombinations: [{
            keyCode: _keyboardKey.SpacebarKey
          }]
        }
      }
    }
  };
};

exports.radioGroupItemBehavior = radioGroupItemBehavior;
//# sourceMappingURL=radioGroupItemBehavior.js.map
