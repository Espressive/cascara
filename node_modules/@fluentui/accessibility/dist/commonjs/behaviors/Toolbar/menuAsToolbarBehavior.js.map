{"version":3,"sources":["behaviors/Toolbar/menuAsToolbarBehavior.ts"],"names":["menuAsToolbarBehavior","attributes","root","role","focusZone","props","shouldFocusInnerElementWhenReceivedFocus","direction","FocusZoneDirection","bidirectionalDomOrder","childBehaviors","item","menuItemAsToolbarButtonBehavior"],"mappings":";;;;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,qBAAgE,GAAG,SAAnEA,qBAAmE;AAAA,SAAO;AACrFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KADyE;AAMrFC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,wCAAwC,EAAE,IADrC;AAELC,QAAAA,SAAS,EAAEC,0BAAmBC;AAFzB;AADE,KAN0E;AAYrFC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEC;AADQ;AAZqE,GAAP;AAAA,CAAzE","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { menuItemAsToolbarButtonBehavior } from './menuItemAsToolbarButtonBehavior';\n\n/**\n * @description\n * Implements ARIA Toolbar design pattern.\n * Child item components need to have menuItemAsToolbarButtonBehavior assigned.\n * @specification\n * Adds role 'toolbar' to 'root' slot.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\nexport const menuAsToolbarBehavior: Accessibility<MenuAsToolbarBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'toolbar',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n  childBehaviors: {\n    item: menuItemAsToolbarButtonBehavior,\n  },\n});\n\nexport type MenuAsToolbarBehaviorProps = never;\n"],"file":"menuAsToolbarBehavior.js"}