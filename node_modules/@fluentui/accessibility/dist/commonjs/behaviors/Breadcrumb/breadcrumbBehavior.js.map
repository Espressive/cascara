{"version":3,"sources":["behaviors/Breadcrumb/breadcrumbBehavior.ts"],"names":["breadcrumbBehavior","attributes","container","role","focusZone","props","shouldFocusInnerElementWhenReceivedFocus","direction","FocusZoneDirection","bidirectional","isCircularNavigation"],"mappings":";;;;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,kBAA0D,GAAG,SAA7DA,kBAA6D;AAAA,SAAO;AAC/EC,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE;AADG;AADD,KADmE;AAM/EC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,wCAAwC,EAAE,IADrC;AAELC,QAAAA,SAAS,EAAEC,0BAAmBC,aAFzB;AAGLC,QAAAA,oBAAoB,EAAE;AAHjB;AADE;AANoE,GAAP;AAAA,CAAnE","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\n\n/**\n * @description\n * Implements arrow key navigation for breadcrumb\n * @specification\n * Adds attribute 'role=list' to 'container' slot.\n * Provides arrow key navigation in bidirectional direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\nexport const breadcrumbBehavior: Accessibility<BreadcrumbBehaviorProps> = () => ({\n  attributes: {\n    container: {\n      role: 'list',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectional,\n      isCircularNavigation: false,\n    },\n  },\n});\n\nexport type BreadcrumbBehaviorProps = never;\n"],"file":"breadcrumbBehavior.js"}