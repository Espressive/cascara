{"version":3,"sources":["behaviors/Loader/loaderBehavior.ts"],"names":["loaderBehavior","props","attributes","root","role","getDefaultAriaLabelledBy","undefined","labelId"],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,cAAkD,GAAG,SAArDA,cAAqD,CAAAC,KAAK,EAAI;AACzE,SAAO;AACLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,aADF;AAEJ,2BAAmBC,wBAAwB,CAACJ,KAAD;AAFvC;AADI;AADP,GAAP;AAQD,CATM;;;;AAgBP;AACA;AACA;AACA;AACA,IAAMI,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACJ,KAAD,EAAgC;AAC/D,MAAIA,KAAK,CAAC,YAAD,CAAL,IAAuBA,KAAK,CAAC,iBAAD,CAAhC,EAAqD;AACnD,WAAOK,SAAP;AACD;;AACD,SAAOL,KAAK,CAAC,UAAD,CAAL,KAAsBK,SAAtB,GAAkCA,SAAlC,GAA8CL,KAAK,CAACM,OAA3D;AACD,CALD","sourcesContent":["import { Accessibility } from '../../types';\n\n/**\n * @description\n * Loader is usually an element that displays the progress status for a task that take a long time or consists of several steps.\n * Adds attribute 'aria-labelledby' on 'root' when loader has 'tabIndex' prop. This can be overriden by providing 'aria-labelledby' or 'aria-label' property directly to the component.\n *\n * @specification\n * Adds role 'progressbar' to 'root' slot.\n */\nexport const loaderBehavior: Accessibility<LoaderBehaviorProps> = props => {\n  return {\n    attributes: {\n      root: {\n        role: 'progressbar',\n        'aria-labelledby': getDefaultAriaLabelledBy(props),\n      },\n    },\n  };\n};\n\nexport type LoaderBehaviorProps = {\n  /** id of the loader label element. */\n  labelId?: string;\n};\n\n/**\n * Returns the id of the loader label if user provide tabIndex prop. It is used when user does not provide aria-label or\n * aria-labelledby as prop.\n */\nconst getDefaultAriaLabelledBy = (props: LoaderBehaviorProps) => {\n  if (props['aria-label'] || props['aria-labelledby']) {\n    return undefined;\n  }\n  return props['tabIndex'] === undefined ? undefined : props.labelId;\n};\n"],"file":"loaderBehavior.js"}