{"version":3,"sources":["behaviors/Form/formFieldBehavior.tsx"],"names":["formFieldBehavior","props","definition","attributes","root","control","hasErrorMessage","labelId","messageId","message","role"],"mappings":";;;;;AAEA;AACA;AACA;AACO,IAAMA,iBAAwD,GAAG,SAA3DA,iBAA2D,CAAAC,KAAK,EAAI;AAC/E,MAAMC,UAAmC,GAAG;AAC1CC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,EADI;AAEVC,MAAAA,OAAO,oBACDJ,KAAK,CAACK,eAAN,IAAyB;AAAE,wBAAgB;AAAlB,OADxB;AAEL,gCAAsBL,KAAK,CAACM;AAFvB,SAGDN,KAAK,CAACO,SAAN,IAAmB;AAAE,2BAAsBP,KAAK,CAACM,OAA5B,SAAuCN,KAAK,CAACO;AAA/C,OAHlB,CAFG;AAOVC,MAAAA,OAAO,oBACDR,KAAK,CAACK,eAAN,IAAyB;AAAEI,QAAAA,IAAI,EAAE;AAAR,OADxB;AAPG;AAD8B,GAA5C;AAcA,SAAOR,UAAP;AACD,CAhBM","sourcesContent":["import { Accessibility, AccessibilityDefinition } from '../../types';\n\n/**\n * @specification\n */\nexport const formFieldBehavior: Accessibility<FormFieldBehaviorProps> = props => {\n  const definition: AccessibilityDefinition = {\n    attributes: {\n      root: {},\n      control: {\n        ...(props.hasErrorMessage && { 'aria-invalid': true }),\n        'aria-labelledby': `${props.labelId}`,\n        ...(props.messageId && { 'aria-labelledby': `${props.labelId} ${props.messageId}` }),\n      },\n      message: {\n        ...(props.hasErrorMessage && { role: 'alert' }),\n      },\n    },\n  };\n\n  return definition;\n};\n\nexport type FormFieldBehaviorProps = {\n  /** Field has error message */\n  hasErrorMessage?: boolean;\n\n  /** Field message have a id */\n  messageId?: string;\n\n  labelId?: string;\n};\n"],"file":"formFieldBehavior.js"}