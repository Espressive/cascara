"use strict";

exports.__esModule = true;
exports.menuBehavior = void 0;

var _types = require("../../focusZone/types");

var _menuItemBehavior = require("./menuItemBehavior");

var _menuDividerBehavior = require("./menuDividerBehavior");

/**
 * @description
 * Implements ARIA Menu design pattern.
 * The 'menu' role is used to identify an element that creates a list of common actions or functions that a user can invoke.
 *
 * @specification
 * Adds role='menu'.
 * Provides arrow key navigation in horizontal direction.
 * When 'vertical' prop is used, provides keyboard navigation in vertical direction.
 * Keyboard navigation is circular.
 */
var menuBehavior = function menuBehavior(props) {
  return {
    attributes: {
      root: {
        role: 'menu'
      }
    },
    focusZone: {
      props: {
        isCircularNavigation: true,
        shouldFocusInnerElementWhenReceivedFocus: true,
        direction: props.vertical ? _types.FocusZoneDirection.vertical : _types.FocusZoneDirection.horizontal
      }
    },
    childBehaviors: {
      item: _menuItemBehavior.menuItemBehavior,
      divider: _menuDividerBehavior.menuDividerBehavior
    }
  };
};

exports.menuBehavior = menuBehavior;
//# sourceMappingURL=menuBehavior.js.map
