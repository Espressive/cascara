{"version":3,"sources":["behaviors/Tree/treeAsListBehavior.ts"],"names":["treeAsListBehavior","props","behavior","definition","attributes","root","role","keyActions","focusZone","childBehaviors","item","treeItemAsListItemBehavior","process","env","NODE_ENV"],"mappings":";;;;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACO,IAAMA,kBAAoD,GAAG,SAAvDA,kBAAuD,CAAAC,KAAK,EAAI;AAC3E,MAAMC,QAAQ,GAAG,gCAAaD,KAAb,CAAjB;AACA,MAAME,UAAU,GAAG;AACjBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,oBACCH,QAAQ,CAACE,UAAT,CAAoBC,IADrB;AAEFC,QAAAA,IAAI,EAAE;AAFJ;AADM,KADK;AAOjBC,IAAAA,UAAU,EAAEL,QAAQ,CAACK,UAPJ;AAQjBC,IAAAA,SAAS,EAAEN,QAAQ,CAACM,SARH;AASjBC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEC;AADQ;AATC,GAAnB;;AAcA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCX,IAAAA,UAAU,CAACC,UAAX,CAAsBC,IAAtB,CAA2B,eAA3B,IAA8C,UAA9C;AACD;;AACD,SAAOF,UAAP;AACD,CApBM","sourcesContent":["import { Accessibility, AriaRole } from '../../types';\nimport { treeBehavior, TreeBehaviorProps } from './treeBehavior';\nimport { treeItemAsListItemBehavior } from './treeItemAsListItemBehavior';\n\n/**\n * @specification\n * Adds role 'list' to 'root' slot.\n */\nexport const treeAsListBehavior: Accessibility<TreeBehaviorProps> = props => {\n  const behavior = treeBehavior(props);\n  const definition = {\n    attributes: {\n      root: {\n        ...behavior.attributes.root,\n        role: 'list' as AriaRole,\n      },\n    },\n    keyActions: behavior.keyActions,\n    focusZone: behavior.focusZone,\n    childBehaviors: {\n      item: treeItemAsListItemBehavior,\n    },\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    definition.attributes.root['data-aa-class'] = 'TreeList';\n  }\n  return definition;\n};\n"],"file":"treeAsListBehavior.js"}