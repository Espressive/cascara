"use strict";

exports.__esModule = true;
exports.accordionTitleBehavior = void 0;

var _keyboardKey = require("../../keyboard-key");

/**
 * @description
 * Adds accessibility attributed to implement the Accordion design pattern.
 * Adds 'aria-disabled' to the 'content' slot with a value based on disabled, active and canBeCollapsed props.
 * Adds role='heading' and aria-level='3' if the element type is not a header.
 *
 * @specification
 * Adds attribute 'role=button' to 'content' slot.
 * Adds attribute 'tabIndex=0' to 'content' slot.
 * Adds attribute 'aria-expanded=true' based on the property 'active' to 'content' slot.
 * Adds attribute 'aria-controls=content-id' based on the property 'accordionContentId' to 'content' slot.
 * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'content'.
 */
var accordionTitleBehavior = function accordionTitleBehavior(props) {
  var isHeading = /(h\d{1})$/.test(props.as);
  var forcedOpen = props.active && !props.canBeCollapsed;
  return {
    attributes: {
      root: {
        role: isHeading ? undefined : 'heading',
        'aria-level': isHeading ? undefined : 3
      },
      content: {
        'aria-expanded': !!props.active,
        'aria-disabled': !!(forcedOpen || props.disabled),
        'aria-controls': props.accordionContentId,
        role: 'button',
        tabIndex: 0
      }
    },
    keyActions: {
      content: {
        performClick: {
          keyCombinations: [{
            keyCode: _keyboardKey.keyboardKey.Enter
          }, {
            keyCode: _keyboardKey.SpacebarKey
          }]
        }
      }
    }
  };
};

exports.accordionTitleBehavior = accordionTitleBehavior;
//# sourceMappingURL=accordionTitleBehavior.js.map
