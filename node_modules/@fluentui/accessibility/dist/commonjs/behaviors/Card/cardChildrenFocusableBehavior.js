"use strict";

exports.__esModule = true;
exports.cardChildrenFocusableBehavior = void 0;

var _attributes = require("../../attributes");

var _types = require("../../focusZone/types");

var _keyboardKey = require("../../keyboard-key");

/**
 * @description
 * Behavior for a card component with multiple focusable child elements.
 * @specification
 * Adds role='group'.
 * Adds attribute 'aria-disabled=true' based on the property 'disabled'.
 * Adds attribute 'tabIndex=0' to 'root' slot.
 * Adds attribute 'data-is-focusable=true' to 'root' slot.
 * Triggers 'focusCard' action with 'Escape' on 'root'.
 */
var cardChildrenFocusableBehavior = function cardChildrenFocusableBehavior(props) {
  var _root;

  return {
    attributes: {
      root: (_root = {
        role: 'group',
        tabIndex: 0
      }, _root[_attributes.IS_FOCUSABLE_ATTRIBUTE] = true, _root['aria-disabled'] = props.disabled, _root)
    },
    focusZone: {
      props: {
        handleTabKey: _types.FocusZoneTabbableElements.all,
        isCircularNavigation: true
      }
    },
    keyActions: {
      root: {
        focusCard: {
          keyCombinations: [{
            keyCode: _keyboardKey.keyboardKey.Escape
          }]
        }
      }
    }
  };
};

exports.cardChildrenFocusableBehavior = cardChildrenFocusableBehavior;
//# sourceMappingURL=cardChildrenFocusableBehavior.js.map
