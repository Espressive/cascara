{"version":3,"sources":["behaviors/Tree/treeBehavior.ts"],"names":["keyboardKey","FocusZoneDirection","treeItemBehavior","treeBehavior","props","attributes","root","role","tabIndex","selectable","keyActions","expandSiblings","keyCombinations","keyCode","focusZone","direction","vertical","shouldFocusInnerElementWhenReceivedFocus","childBehaviors","item"],"mappings":"AAAA,SAASA,WAAT,QAA4B,oBAA5B;AAGA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,YAA8C,GAAG,SAAjDA,YAAiD,CAAAC,KAAK,EAAI;AACrE,SAAO;AACLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI;AACFC,QAAAA,IAAI,EAAE,MADJ;AAEF,2BAAmBH,KAAK,CAAC,iBAAD,CAFtB;AAGFI,QAAAA,QAAQ,EAAE,CAAC;AAHT,SAIEJ,KAAK,CAACK,UAAN,IAAoB;AACtB,gCAAwB;AADF,OAJtB;AADM,KADP;AAWLC,IAAAA,UAAU,EAAE;AACVJ,MAAAA,IAAI,EAAE;AACJK,QAAAA,cAAc,EAAE;AACdC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEb,WAAW,CAAC,GAAD;AAAtB,WAAD;AADH;AADZ;AADI,KAXP;AAkBLc,IAAAA,SAAS,EAAE;AACTV,MAAAA,KAAK,EAAE;AACLW,QAAAA,SAAS,EAAEd,kBAAkB,CAACe,QADzB;AAELC,QAAAA,wCAAwC,EAAE;AAFrC;AADE,KAlBN;AAwBLC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEjB;AADQ;AAxBX,GAAP;AA4BD,CA7BM","sourcesContent":["import { keyboardKey } from '../../keyboard-key';\n\nimport { Accessibility, AccessibilityAttributes } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { treeItemBehavior } from './treeItemBehavior';\n\n/**\n * @specification\n * Adds role 'tree' to 'root' slot.\n * Adds attribute 'tabIndex=-1' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Provides arrow key navigation in vertical direction.\n * Triggers 'expandSiblings' action with '*' on 'root'.\n * Adds attribute 'aria-multiselectable=true' to 'root' slot if 'selectable' property is true. Does not set the attribute otherwise.\n */\nexport const treeBehavior: Accessibility<TreeBehaviorProps> = props => {\n  return {\n    attributes: {\n      root: {\n        role: 'tree',\n        'aria-labelledby': props['aria-labelledby'],\n        tabIndex: -1,\n        ...(props.selectable && {\n          'aria-multiselectable': true,\n        }),\n      },\n    },\n    keyActions: {\n      root: {\n        expandSiblings: {\n          keyCombinations: [{ keyCode: keyboardKey['*'] }],\n        },\n      },\n    },\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.vertical,\n        shouldFocusInnerElementWhenReceivedFocus: true,\n      },\n    },\n    childBehaviors: {\n      item: treeItemBehavior,\n    },\n  };\n};\n\nexport type TreeBehaviorProps = Pick<AccessibilityAttributes, 'aria-labelledby'> & {\n  /** Whether or not tree items are selectable. */\n  selectable?: boolean;\n};\n"],"file":"treeBehavior.js"}