{"version":3,"sources":["behaviors/Slider/sliderBehavior.ts"],"names":["sliderBehavior","props","attributes","root","disabled","input","vertical","min","max","value","getA11yValueMessageOnChange"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,cAAkD,GAAG,SAArDA,cAAqD,CAAAC,KAAK;AAAA,SAAK;AAC1EC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJ,yBAAiBF,KAAK,CAACG;AADnB,OADI;AAIVC,MAAAA,KAAK,EAAE;AACL,4BAAoBJ,KAAK,CAACK,QAAN,GAAiB,UAAjB,GAA8B,YAD7C;AAEL,yBAAiBL,KAAK,CAACM,GAFlB;AAGL,yBAAiBN,KAAK,CAACO,GAHlB;AAIL,yBAAiBP,KAAK,CAACQ,KAJlB;AAKL,0BAAkBR,KAAK,CAACS,2BAAN,CAAkCT,KAAlC;AALb;AAJG;AAD8D,GAAL;AAAA,CAAhE","sourcesContent":["import { Accessibility } from '../../types';\n\n/**\n * @description\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n * Adds attribute 'aria-orientation=vertical' or 'horizontal' based on the property 'vertical'.\n * Adds attribute 'aria-valuemin' with value based on the property 'min'.\n * Adds attribute 'aria-valuemax' with value based on the property 'max'.\n * Adds attribute 'aria-valuenow' with value based on the property 'value'.\n * Adds attribute 'aria-valuetext' with value based on the callback function 'getA11yValueMessageOnChange'.\n */\nexport const sliderBehavior: Accessibility<SliderBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      'aria-disabled': props.disabled,\n    },\n    input: {\n      'aria-orientation': props.vertical ? 'vertical' : 'horizontal',\n      'aria-valuemin': props.min,\n      'aria-valuemax': props.max,\n      'aria-valuenow': props.value,\n      'aria-valuetext': props.getA11yValueMessageOnChange(props),\n    },\n  },\n});\n\nexport type SliderBehaviorProps = {\n  disabled?: boolean;\n  min?: number;\n  max?: number;\n  value?: number;\n  vertical?: boolean;\n  getA11yValueMessageOnChange?: (props: SliderBehaviorProps) => string;\n};\n"],"file":"sliderBehavior.js"}