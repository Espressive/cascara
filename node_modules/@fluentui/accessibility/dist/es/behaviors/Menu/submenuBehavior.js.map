{"version":3,"sources":["behaviors/Menu/submenuBehavior.ts"],"names":["FocusZoneDirection","menuItemBehavior","submenuBehavior","attributes","root","role","focusZone","props","isCircularNavigation","shouldFocusOnMount","direction","vertical","childBehaviors","item"],"mappings":"AACA,SAASA,kBAAT,QAAmC,uBAAnC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,eAAoD,GAAG,SAAvDA,eAAuD;AAAA,SAAO;AACzEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD6D;AAMzEC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,oBAAoB,EAAE,IADjB;AAELC,QAAAA,kBAAkB,EAAE,IAFf;AAGLC,QAAAA,SAAS,EAAEV,kBAAkB,CAACW;AAHzB;AADE,KAN8D;AAazEC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,IAAI,EAAEZ;AAAR;AAbyD,GAAP;AAAA,CAA7D","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { menuItemBehavior } from './menuItemBehavior';\n\n/**\n * @description\n * The 'menu' role is used to identify an element that creates a list of common actions or functions that a user can invoke.\n *\n * @specification\n * Adds role='menu'.\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Component will get focus when mounted.\n */\nexport const submenuBehavior: Accessibility<SubmenuBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'menu',\n    },\n  },\n  focusZone: {\n    props: {\n      isCircularNavigation: true,\n      shouldFocusOnMount: true,\n      direction: FocusZoneDirection.vertical,\n    },\n  },\n  childBehaviors: { item: menuItemBehavior },\n});\n\nexport type SubmenuBehaviorProps = never;\n"],"file":"submenuBehavior.js"}