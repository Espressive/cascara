{"version":3,"sources":["behaviors/MenuButton/menuButtonBehavior.ts"],"names":["keyboardKey","popupBehavior","menuButtonBehavior","props","behavior","inline","contextMenu","attributes","trigger","open","menuId","undefined","id","triggerId","tabIndex","menu","keyActions","root","closeMenu","keyCombinations","keyCode","Tab","shiftKey","on","openAndFocusFirst","ArrowDown","openAndFocusLast","ArrowUp"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,oBAA5B;AAIA,SAASC,aAAT,QAAkD,wBAAlD;AAEA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,kBAA0D,GAAG,SAA7DA,kBAA6D,CAAAC,KAAK,EAAI;AACjF,MAAMC,QAAQ,GAAGH,aAAa,mBAAME,KAAN;AAAaE,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACG;AAA5B,KAA9B;AAEA,SAAO,OAAQF,QAAR,EAAkB;AACvBG,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO;AACL,yBAAiBL,KAAK,CAACM,IAAN,GAAaN,KAAK,CAACO,MAAnB,GAA4BC,SADxC;AAEL,yBAAkBR,KAAK,CAACM,IAAN,IAAc,CAACN,KAAK,CAACG,WAAtB,IAAsCK,SAFlD;AAGL,yBAAiBR,KAAK,CAACG,WAAN,GAAoBK,SAApB,GAAgC,MAH5C;AAILC,QAAAA,EAAE,EAAET,KAAK,CAACU;AAJL,SAKD,CAACV,KAAK,CAACG,WAAP,IAAsBH,KAAK,CAACM,IAA5B,IAAoC;AAAEK,QAAAA,QAAQ,EAAE,CAAC;AAAb,OALnC,CADG;AASVC,MAAAA,IAAI,EAAE;AACJ,2BAAmBZ,KAAK,CAACU,SADrB;AAEJD,QAAAA,EAAE,EAAET,KAAK,CAACO;AAFN;AATI,KADW;AAevBM,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,oBACEd,KAAK,CAACM,IAAN,GACA;AACES,QAAAA,SAAS,EAAE;AACTC,UAAAA,eAAe,EAAE,CACf;AAAEC,YAAAA,OAAO,EAAEpB,WAAW,CAACqB,GAAvB;AAA4BC,YAAAA,QAAQ,EAAE;AAAtC,WADe,EAEf;AAAEF,YAAAA,OAAO,EAAEpB,WAAW,CAACqB,GAAvB;AAA4BC,YAAAA,QAAQ,EAAE;AAAtC,WAFe;AADR;AADb,OADA,GASA,UAAWnB,KAAK,CAACoB,EAAjB,EAAqB,OAArB,KAAiC;AAC/BC,QAAAA,iBAAiB,EAAE;AACjBL,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEpB,WAAW,CAACyB;AAAvB,WAAD;AADA,SADY;AAI/BC,QAAAA,gBAAgB,EAAE;AAChBP,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEpB,WAAW,CAAC2B;AAAvB,WAAD;AADD;AAJa,OAVnC;AADM;AAfW,GAAlB,CAAP;AAqCD,CAxCM","sourcesContent":["import { keyboardKey } from '../../keyboard-key';\nimport * as _ from 'lodash';\n\nimport { Accessibility } from '../../types';\nimport { popupBehavior, PopupBehaviorProps } from '../Popup/popupBehavior';\n\n/**\n * @description\n * Implements ARIA [MenuButton](https://www.w3.org/TR/wai-aria-practices/#menubutton) design pattern.\n */\nexport const menuButtonBehavior: Accessibility<MenuButtonBehaviorProps> = props => {\n  const behavior = popupBehavior({ ...props, inline: !props.contextMenu });\n\n  return _.merge(behavior, {\n    attributes: {\n      trigger: {\n        'aria-controls': props.open ? props.menuId : undefined,\n        'aria-expanded': (props.open && !props.contextMenu) || undefined,\n        'aria-haspopup': props.contextMenu ? undefined : 'true',\n        id: props.triggerId,\n        ...(!props.contextMenu && props.open && { tabIndex: -1 }),\n      },\n\n      menu: {\n        'aria-labelledby': props.triggerId,\n        id: props.menuId,\n      },\n    },\n    keyActions: {\n      root: {\n        ...(props.open\n          ? {\n              closeMenu: {\n                keyCombinations: [\n                  { keyCode: keyboardKey.Tab, shiftKey: false },\n                  { keyCode: keyboardKey.Tab, shiftKey: true },\n                ],\n              },\n            }\n          : _.includes(props.on, 'click') && {\n              openAndFocusFirst: {\n                keyCombinations: [{ keyCode: keyboardKey.ArrowDown }],\n              },\n              openAndFocusLast: {\n                keyCombinations: [{ keyCode: keyboardKey.ArrowUp }],\n              },\n            }),\n      },\n    },\n  });\n};\n\nexport interface MenuButtonBehaviorProps extends PopupBehaviorProps {\n  /** Indicates if dialogs's trigger is disabled. */\n  disabled?: boolean;\n  /** Defines ID of the menu element. */\n  menuId?: string;\n  /** Defines ID of the trigger element. */\n  triggerId?: string;\n  /** Defines whether popup is displayed. */\n  open?: boolean;\n  /** Determines if the MenuButton behaves as context menu */\n  contextMenu?: boolean;\n}\n"],"file":"menuButtonBehavior.js"}