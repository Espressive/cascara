{"version":3,"sources":["behaviors/Input/inputBehavior.ts"],"names":["keyboardKey","inputBehavior","props","attributes","input","disabled","required","error","keyActions","clear","keyCombinations","keyCode","Escape"],"mappings":"AACA,SAASA,WAAT,QAA4B,oBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,aAAgD,GAAG,SAAnDA,aAAmD,CAAAC,KAAK;AAAA,SAAK;AACxEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK;AACH,yBAAiBF,KAAK,CAACG;AADpB,SAECH,KAAK,CAACI,QAAN,IAAkB;AAAE,yBAAiB;AAAnB,OAFnB,EAGCJ,KAAK,CAACK,KAAN,IAAe;AAAE,wBAAgB;AAAlB,OAHhB;AADK,KAD4D;AAQxEC,IAAAA,UAAU,EAAE;AACVJ,MAAAA,KAAK,EAAE;AACLK,QAAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEX,WAAW,CAACY;AAAvB,WAAD;AADZ;AADF;AADG;AAR4D,GAAL;AAAA,CAA9D","sourcesContent":["import { Accessibility } from '../../types';\nimport { keyboardKey } from '../../keyboard-key';\n\n/**\n * @specification\n * Adds attribute 'aria-disabled=true' based on the property 'disabled' to 'input' slot.\n * Adds attribute 'aria-required=true' based on the property 'required' to 'input' slot.\n * Adds attribute 'aria-invalid=true' based on the property 'error' to 'input' slot.\n * Triggers 'clear' action with 'Escape' on 'input'.\n */\nexport const inputBehavior: Accessibility<InputBehaviorProps> = props => ({\n  attributes: {\n    input: {\n      'aria-disabled': props.disabled,\n      ...(props.required && { 'aria-required': true }),\n      ...(props.error && { 'aria-invalid': true }),\n    },\n  },\n  keyActions: {\n    input: {\n      clear: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport type InputBehaviorProps = {\n  disabled?: boolean;\n  required?: boolean;\n  error?: boolean;\n};\n"],"file":"inputBehavior.js"}