import { keyboardKey, SpacebarKey } from '../../keyboard-key';
export var buttonBehavior = function buttonBehavior(props) {
  var definition = {
    attributes: {
      root: {
        role: props.as === 'button' ? undefined : 'button',
        tabIndex: props.as === 'button' || props.disabled ? undefined : 0,
        disabled: props.as === 'button' ? props.disabled : undefined,
        'aria-disabled': props.disabledFocusable
      }
    },
    keyActions: {
      root: Object.assign({}, props.as !== 'button' && props.as !== 'a' && {
        performClick: {
          keyCombinations: [{
            keyCode: keyboardKey.Enter
          }, {
            keyCode: SpacebarKey
          }]
        }
      })
    }
  };

  if (process.env.NODE_ENV !== 'production') {
    // Override the default trigger's accessibility schema class.
    if (props.disabledFocusable) {
      definition.attributes.root['data-aa-class'] = 'DisabledFocusableButton';
    }
  }

  return definition;
};
//# sourceMappingURL=buttonBehavior.js.map
