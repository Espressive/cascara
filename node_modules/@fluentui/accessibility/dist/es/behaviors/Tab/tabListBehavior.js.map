{"version":3,"sources":["behaviors/Tab/tabListBehavior.ts"],"names":["FocusZoneDirection","tabBehavior","tabListBehavior","attributes","root","role","focusZone","props","shouldFocusInnerElementWhenReceivedFocus","direction","bidirectionalDomOrder","childBehaviors","item"],"mappings":"AACA,SAASA,kBAAT,QAAmC,uBAAnC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,eAAoD,GAAG,SAAvDA,eAAuD;AAAA,SAAO;AACzEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD6D;AAMzEC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,wCAAwC,EAAE,IADrC;AAELC,QAAAA,SAAS,EAAET,kBAAkB,CAACU;AAFzB;AADE,KAN8D;AAYzEC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEX;AADQ;AAZyD,GAAP;AAAA,CAA7D","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { tabBehavior } from './tabBehavior';\n\n/**\n * @description\n * Implements ARIA Tabs design pattern.\n * Child item components need to have tabBehavior assigned.\n * @specification\n * Adds role 'tablist' to 'root' slot.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\nexport const tabListBehavior: Accessibility<TabListBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'tablist',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n  childBehaviors: {\n    item: tabBehavior,\n  },\n});\n\nexport type TabListBehaviorProps = never;\n"],"file":"tabListBehavior.js"}