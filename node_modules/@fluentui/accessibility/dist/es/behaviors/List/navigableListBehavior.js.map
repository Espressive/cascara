{"version":3,"sources":["behaviors/List/navigableListBehavior.ts"],"names":["FocusZoneDirection","navigableListBehavior","props","attributes","root","role","focusZone","shouldFocusInnerElementWhenReceivedFocus","direction","bidirectionalDomOrder"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,uBAAnC;;AAIA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,qBAAuD,GAAG,SAA1DA,qBAA0D,CAAAC,KAAK;AAAA,SAAK;AAC/EC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KADmE;AAM/EC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,KAAK,EAAE;AACLK,QAAAA,wCAAwC,EAAE,IADrC;AAELC,QAAAA,SAAS,EAAER,kBAAkB,CAACS;AAFzB;AADE;AANoE,GAAL;AAAA,CAArE","sourcesContent":["import { FocusZoneDirection } from '../../focusZone/types';\nimport { Accessibility } from '../../types';\nimport { ListBehaviorProps } from './listBehavior';\n\n/**\n * @specification\n * Adds role='menu'.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n */\nexport const navigableListBehavior: Accessibility<ListBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'menu',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n});\n"],"file":"navigableListBehavior.js"}