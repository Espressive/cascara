{"version":3,"sources":["behaviors/Carousel/carouselBehavior.ts"],"names":["keyboardKey","SpacebarKey","carouselBehavior","props","attributes","root","navigation","role","ariaRoleDescription","ariaLabel","itemsContainerWrapper","ariaLiveOn","itemsContainer","tabIndex","paddleNext","paddlePrevious","keyActions","showNextSlideByKeyboardNavigation","keyCombinations","keyCode","ArrowRight","showPreviousSlideByKeyboardNavigation","ArrowLeft","showNextSlideByPaddlePress","Enter","showPreviousSlideByPaddlePress"],"mappings":"AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,oBAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,gBAAsD,GAAG,SAAzDA,gBAAyD,CAAAC,KAAK;AAAA,SAAK;AAC9EC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,oBACE,CAACF,KAAK,CAACG,UAAP,IAAqB;AACvBC,QAAAA,IAAI,EAAE,QADiB;AAEvB,gCAAwBJ,KAAK,CAACK,mBAFP;AAGvB,sBAAcL,KAAK,CAACM;AAHG,OADvB,CADM;AAQVC,MAAAA,qBAAqB,EAAE;AACrB,qBAAaP,KAAK,CAACQ,UAAN,GAAmB,QAAnB,GAA8B;AADtB,OARb;AAWVC,MAAAA,cAAc,oBACRT,KAAK,CAACG,UAAN,GACA;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkB,gCAAwBJ,KAAK,CAACK,mBAAhD;AAAqE,sBAAcL,KAAK,CAACM;AAAzF,OADA,GAEA;AAAEI,QAAAA,QAAQ,EAAE,CAAC,CAAb;AAAgBN,QAAAA,IAAI,EAAE;AAAtB,OAHQ,CAXJ;AAiBVO,MAAAA,UAAU,oBACJX,KAAK,CAACG,UAAN,IAAoB;AACtBO,QAAAA,QAAQ,EAAE,CAAC,CADW;AAEtB,uBAAe;AAFO,OADhB,CAjBA;AAuBVE,MAAAA,cAAc,oBACRZ,KAAK,CAACG,UAAN,IAAoB;AACtBO,QAAAA,QAAQ,EAAE,CAAC,CADW;AAEtB,uBAAe;AAFO,OADZ;AAvBJ,KADkE;AAgC9EG,IAAAA,UAAU,EAAE;AACVJ,MAAAA,cAAc,EAAE;AACdK,QAAAA,iCAAiC,EAAE;AACjCC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEnB,WAAW,CAACoB;AAAvB,WAAD;AADgB,SADrB;AAIdC,QAAAA,qCAAqC,EAAE;AACrCH,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEnB,WAAW,CAACsB;AAAvB,WAAD;AADoB;AAJzB,OADN;AASVR,MAAAA,UAAU,EAAE;AACVS,QAAAA,0BAA0B,EAAE;AAC1BL,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEnB,WAAW,CAACwB;AAAvB,WAAD,EAAiC;AAAEL,YAAAA,OAAO,EAAElB;AAAX,WAAjC;AADS;AADlB,OATF;AAcVc,MAAAA,cAAc,EAAE;AACdU,QAAAA,8BAA8B,EAAE;AAC9BP,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEnB,WAAW,CAACwB;AAAvB,WAAD,EAAiC;AAAEL,YAAAA,OAAO,EAAElB;AAAX,WAAjC;AADa;AADlB;AAdN;AAhCkE,GAAL;AAAA,CAApE","sourcesContent":["import { Accessibility } from '../../types';\nimport { keyboardKey, SpacebarKey } from '../../keyboard-key';\n\n/**\n * @description\n * Adds attribute 'role=region' to 'root' slot if 'navigation' property is false. Does not set the attribute otherwise.\n * Adds attribute 'aria-roledescription' to 'root' slot if 'navigation' property is false. Does not set the attribute otherwise.\n * Adds attribute 'aria-label' to 'root' slot if 'navigation' property is false. Does not set the attribute otherwise.\n * Adds attribute 'aria-roledescription' to 'itemsContainer' slot if 'navigation' property is true. Does not set the attribute otherwise.\n * Adds attribute 'aria-label' to 'itemsContainer' slot if 'navigation' property is true. Does not set the attribute otherwise.\n * Adds attribute 'role=region' to 'itemsContainer' slot if 'navigation' property is true.  Set 'role=none' otherwise.\n * Adds attribute 'tabIndex=-1' to 'itemsContainer' slot if 'navigation' property is false. Does not set the attribute otherwise.\n * @specification\n * Adds attribute 'role=region' to 'root' slot.\n * Adds attribute 'aria-live=polite' to 'itemsContainerWrapper' slot if 'ariaLiveOn' property is true. Sets the attribute to 'off' otherwise.\n * Adds attribute 'aria-hidden=true' to 'paddleNext' slot if 'navigation' property is true. Does not set the attribute otherwise.\n * Adds attribute 'aria-hidden=true' to 'paddlePrevious' slot if 'navigation' property is true. Does not set the attribute otherwise.\n * Adds attribute 'tabIndex=-1' to 'paddlePrevious' slot if 'navigation' property is true. Does not set the attribute otherwise.\n * Adds attribute 'tabIndex=-1' to 'paddlePrevious' slot if 'navigation' property is true. Does not set the attribute otherwise.\n * Triggers 'showNextSlideByKeyboardNavigation' action with 'ArrowRight' on 'itemsContainer'.\n * Triggers 'showPreviousSlideByKeyboardNavigation' action with 'ArrowLeft' on 'itemsContainer'.\n * Triggers 'showNextSlideByPaddlePress' action with 'Enter' or 'Spacebar' on 'paddleNext'.\n * Triggers 'showPreviousSlideByPaddlePress' action with 'Enter' or 'Spacebar' on 'paddlePrevious'.\n */\nexport const carouselBehavior: Accessibility<CarouselBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      ...(!props.navigation && {\n        role: 'region',\n        'aria-roledescription': props.ariaRoleDescription,\n        'aria-label': props.ariaLabel,\n      }),\n    },\n    itemsContainerWrapper: {\n      'aria-live': props.ariaLiveOn ? 'polite' : 'off',\n    },\n    itemsContainer: {\n      ...(props.navigation\n        ? { role: 'region', 'aria-roledescription': props.ariaRoleDescription, 'aria-label': props.ariaLabel }\n        : { tabIndex: -1, role: 'none' }),\n    },\n\n    paddleNext: {\n      ...(props.navigation && {\n        tabIndex: -1,\n        'aria-hidden': 'true',\n      }),\n    },\n    paddlePrevious: {\n      ...(props.navigation && {\n        tabIndex: -1,\n        'aria-hidden': 'true',\n      }),\n    },\n  },\n\n  keyActions: {\n    itemsContainer: {\n      showNextSlideByKeyboardNavigation: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowRight }],\n      },\n      showPreviousSlideByKeyboardNavigation: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowLeft }],\n      },\n    },\n    paddleNext: {\n      showNextSlideByPaddlePress: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n    paddlePrevious: {\n      showPreviousSlideByPaddlePress: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n  },\n});\n\nexport type CarouselBehaviorProps = {\n  /** Element type. */\n  navigation: Object | Object[];\n  ariaLiveOn: boolean;\n  ariaRoleDescription?: string;\n  ariaLabel?: string;\n};\n"],"file":"carouselBehavior.js"}