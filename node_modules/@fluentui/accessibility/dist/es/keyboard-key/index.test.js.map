{"version":3,"sources":["keyboard-key/index.test.ts"],"names":["codes","getCode","getKey","keyboardKey","describe","it","Object","keys","forEach","code","name","Number","Array","isArray","expect","String","toEqual","toBeInstanceOf","Function","_code","key0","key","which","keyCode","shiftKey","key1","keyName"],"mappings":"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","sourcesContent":["import { codes } from './codes';\nimport { getCode, getKey, keyboardKey } from './index';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\ndescribe('keyboardKey', () => {\n  it('has a key/value for every value/key in codes', () => {\n    Object.keys(codes).forEach(code => {\n      const name = codes[Number(code)];\n\n      if (Array.isArray(name)) {\n        expect(String((keyboardKey as any)[name[0]])).toEqual(code);\n        expect(String((keyboardKey as any)[name[1]])).toEqual(code);\n      } else {\n        expect(String((keyboardKey as any)[name])).toEqual(code);\n      }\n    });\n  });\n\n  describe('getCode', () => {\n    it('is a function', () => {\n      expect(getCode).toBeInstanceOf(Function);\n    });\n    it('returns the code for a given key name', () => {\n      expect(getCode('Enter')).toEqual(13);\n    });\n    it('handles all key names in codes', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const _code = Number(code);\n\n        if (Array.isArray(name)) {\n          expect(getCode(name[0])).toEqual(_code);\n          expect(getCode(name[1])).toEqual(_code);\n        } else {\n          expect(getCode(name)).toEqual(_code);\n        }\n      });\n    });\n\n    it('handles event like objects with `key` prop', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const _code = Number(code);\n\n        if (Array.isArray(name)) {\n          const key0 = { key: name[0], which: _code, keyCode: _code, shiftKey: false };\n          const key1 = { key: name[1], which: _code, keyCode: _code, shiftKey: false };\n\n          expect(getCode(key0)).toEqual(_code);\n          expect(getCode(key1)).toEqual(_code);\n        } else {\n          const key = { key: name, which: _code, keyCode: _code, shiftKey: false };\n          expect(getCode(key)).toEqual(_code);\n        }\n      });\n    });\n  });\n\n  describe('getKey', () => {\n    it('is a function', () => {\n      expect(getKey).toBeInstanceOf(Function);\n    });\n    it('returns the code for a given key name', () => {\n      expect(getKey(13)).toEqual('Enter');\n    });\n    it('handles all codes', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const keyName = getKey(Number(code));\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[0]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like object: { keyCode: code, shiftKey: false }`', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const _code = Number(code);\n        const keyName = getKey({ which: _code, keyCode: _code, shiftKey: false });\n\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[0]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like object: { keyCode: code, shiftKey: true }`', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const keyName = getKey({ keyCode: Number(code), shiftKey: true });\n\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[1]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like object: { which: code, shiftKey: false }', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const keyName = getKey({ which: Number(code), shiftKey: false });\n\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[0]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like object: { which: code, shiftKey: true }', () => {\n      Object.keys(codes).forEach(code => {\n        const name = codes[code];\n        const keyName = getKey({ which: Number(code), shiftKey: true });\n\n        if (Array.isArray(name)) {\n          expect(keyName).toEqual(name[1]);\n        } else {\n          expect(keyName).toEqual(name);\n        }\n      });\n    });\n    it('handles event like objects with a `key` property', () => {\n      const keyName = getKey({ key: '/' });\n      expect(keyName).toEqual('/');\n    });\n  });\n});\n"],"file":"index.test.js"}