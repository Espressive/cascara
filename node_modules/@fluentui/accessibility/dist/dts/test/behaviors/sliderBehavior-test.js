"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var accessibility_1 = require("@fluentui/accessibility");
function generatePropertyTest(_a) {
    var result = _a.result, attrName = _a.attrName, propName = _a.propName, propValue = _a.propValue, slotName = _a.slotName;
    test(attrName + " is set based on property " + propName + ":" + propValue, function () {
        var _a;
        var resultValue = result || propValue;
        var props = (_a = {},
            _a[propName] = propValue,
            _a.getA11yValueMessageOnChange = function () {
                return undefined;
            },
            _a);
        var expectedResult = accessibility_1.sliderBehavior(props);
        expect(expectedResult.attributes[slotName][attrName]).toEqual(resultValue);
    });
}
describe('SliderBehavior.ts', function () {
    generatePropertyTest({
        propName: 'disabled',
        propValue: true,
        slotName: 'root',
        attrName: 'aria-disabled',
    });
    generatePropertyTest({
        propName: 'min',
        propValue: 0,
        slotName: 'input',
        attrName: 'aria-valuemin',
    });
    generatePropertyTest({
        propName: 'max',
        propValue: 0,
        slotName: 'input',
        attrName: 'aria-valuemax',
    });
    generatePropertyTest({
        propName: 'value',
        propValue: 0,
        slotName: 'input',
        attrName: 'aria-valuenow',
    });
    generatePropertyTest({
        propName: 'vertical',
        propValue: true,
        slotName: 'input',
        attrName: 'aria-orientation',
        result: 'vertical',
    });
    generatePropertyTest({
        propName: 'vertical',
        propValue: false,
        slotName: 'input',
        attrName: 'aria-orientation',
        result: 'horizontal',
    });
    test('aria-valuetext is set based on the property getA11yValueMessageOnChange', function () {
        var ariaValueText = 'custom aria value text';
        var customAriaValueText = function () {
            return ariaValueText;
        };
        var property = {
            getA11yValueMessageOnChange: customAriaValueText,
        };
        var expectedResult = accessibility_1.sliderBehavior(property);
        expect(expectedResult.attributes.input['aria-valuetext']).toEqual(ariaValueText);
    });
});
