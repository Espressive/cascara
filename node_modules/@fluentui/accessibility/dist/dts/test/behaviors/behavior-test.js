"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Behavior-test use 'docs\src\behaviorMenu.json' file as source of strings to parse.
// The json file is generated by task 'build:docs:component-menu-behaviors'. The task will generate json file from the behaviors description.
// If you change behavior description, then you need to run:
//  - 'gulp build:docs:component-menu-behaviors' in order to get json file generated
//  OR
//  - 'yarn test' which has creating json file predefined in "pretest" step
var accessibility_1 = require("@fluentui/accessibility");
var testHelper_1 = require("./testHelper");
var testDefinitions_1 = require("./testDefinitions");
var behaviorMenuItems = require('../../../docs/src/behaviorMenu');
var testHelper = new testHelper_1.TestHelper();
testHelper.addTests(testDefinitions_1.definitions);
testHelper.addBehavior('attachmentBehavior', accessibility_1.attachmentBehavior);
testHelper.addBehavior('basicListBehavior', accessibility_1.basicListBehavior);
testHelper.addBehavior('basicListItemBehavior', accessibility_1.basicListItemBehavior);
testHelper.addBehavior('buttonBehavior', accessibility_1.buttonBehavior);
testHelper.addBehavior('buttonGroupBehavior', accessibility_1.buttonGroupBehavior);
testHelper.addBehavior('checkboxBehavior', accessibility_1.checkboxBehavior);
testHelper.addBehavior('embedBehavior', accessibility_1.embedBehavior);
testHelper.addBehavior('iconBehavior', accessibility_1.iconBehavior);
testHelper.addBehavior('inputBehavior', accessibility_1.inputBehavior);
testHelper.addBehavior('imageBehavior', accessibility_1.imageBehavior);
testHelper.addBehavior('indicatorBehavior', accessibility_1.indicatorBehavior);
testHelper.addBehavior('loaderBehavior', accessibility_1.loaderBehavior);
testHelper.addBehavior('menuBehavior', accessibility_1.menuBehavior);
testHelper.addBehavior('menuItemBehavior', accessibility_1.menuItemBehavior);
testHelper.addBehavior('menuDividerBehavior', accessibility_1.menuDividerBehavior);
testHelper.addBehavior('menuButtonBehavior', accessibility_1.menuButtonBehavior);
testHelper.addBehavior('submenuBehavior', accessibility_1.submenuBehavior);
testHelper.addBehavior('popupBehavior', accessibility_1.popupBehavior);
testHelper.addBehavior('radioGroupBehavior', accessibility_1.radioGroupBehavior);
testHelper.addBehavior('radioGroupItemBehavior', accessibility_1.radioGroupItemBehavior);
testHelper.addBehavior('navigableListBehavior', accessibility_1.navigableListBehavior);
testHelper.addBehavior('navigableListItemBehavior', accessibility_1.navigableListItemBehavior);
testHelper.addBehavior('selectableListBehavior', accessibility_1.selectableListBehavior);
testHelper.addBehavior('selectableListItemBehavior', accessibility_1.selectableListItemBehavior);
testHelper.addBehavior('sliderBehavior', accessibility_1.sliderBehavior);
testHelper.addBehavior('tabBehavior', accessibility_1.tabBehavior);
testHelper.addBehavior('tabListBehavior', accessibility_1.tabListBehavior);
testHelper.addBehavior('menuAsToolbarBehavior', accessibility_1.menuAsToolbarBehavior);
testHelper.addBehavior('toggleButtonBehavior', accessibility_1.toggleButtonBehavior);
testHelper.addBehavior('menuItemAsToolbarButtonBehavior', accessibility_1.menuItemAsToolbarButtonBehavior);
testHelper.addBehavior('gridBehavior', accessibility_1.gridBehavior);
testHelper.addBehavior('gridHorizontalBehavior', accessibility_1.gridHorizontalBehavior);
testHelper.addBehavior('dialogBehavior', accessibility_1.dialogBehavior);
testHelper.addBehavior('statusBehavior', accessibility_1.statusBehavior);
testHelper.addBehavior('alertWarningBehavior', accessibility_1.alertWarningBehavior);
testHelper.addBehavior('alertBaseBehavior', accessibility_1.alertBaseBehavior);
testHelper.addBehavior('accordionBehavior', accessibility_1.accordionBehavior);
testHelper.addBehavior('accordionTitleBehavior', accessibility_1.accordionTitleBehavior);
testHelper.addBehavior('accordionContentBehavior', accessibility_1.accordionContentBehavior);
testHelper.addBehavior('chatBehavior', accessibility_1.chatBehavior);
testHelper.addBehavior('chatMessageBehavior', accessibility_1.chatMessageBehavior);
testHelper.addBehavior('toolbarBehavior', accessibility_1.toolbarBehavior);
testHelper.addBehavior('toolbarItemBehavior', accessibility_1.toolbarItemBehavior);
testHelper.addBehavior('toolbarMenuBehavior', accessibility_1.toolbarMenuBehavior);
testHelper.addBehavior('toolbarMenuItemBehavior', accessibility_1.toolbarMenuItemBehavior);
testHelper.addBehavior('toolbarMenuItemCheckboxBehavior', accessibility_1.toolbarMenuItemCheckboxBehavior);
testHelper.addBehavior('toolbarMenuItemRadioBehavior', accessibility_1.toolbarMenuItemRadioBehavior);
testHelper.addBehavior('toolbarMenuDividerBehavior', accessibility_1.toolbarMenuDividerBehavior);
testHelper.addBehavior('toolbarMenuRadioGroupBehavior', accessibility_1.toolbarMenuRadioGroupBehavior);
testHelper.addBehavior('toolbarMenuRadioGroupWrapperBehavior', accessibility_1.toolbarMenuRadioGroupWrapperBehavior);
testHelper.addBehavior('toolbarRadioGroupBehavior', accessibility_1.toolbarRadioGroupBehavior);
testHelper.addBehavior('toolbarRadioGroupItemBehavior', accessibility_1.toolbarRadioGroupItemBehavior);
testHelper.addBehavior('tooltipAsDescriptionBehavior', accessibility_1.tooltipAsDescriptionBehavior);
testHelper.addBehavior('tooltipAsLabelBehavior', accessibility_1.tooltipAsLabelBehavior);
testHelper.addBehavior('splitButtonBehavior', accessibility_1.splitButtonBehavior);
testHelper.addBehavior('treeBehavior', accessibility_1.treeBehavior);
testHelper.addBehavior('treeItemBehavior', accessibility_1.treeItemBehavior);
testHelper.addBehavior('treeTitleBehavior', accessibility_1.treeTitleBehavior);
testHelper.addBehavior('textAreaBehavior', accessibility_1.textAreaBehavior);
testHelper.addBehavior('treeAsListBehavior', accessibility_1.treeAsListBehavior);
testHelper.addBehavior('treeItemAsListItemBehavior', accessibility_1.treeItemAsListItemBehavior);
testHelper.addBehavior('treeTitleAsListItemTitleBehavior', accessibility_1.treeTitleAsListItemTitleBehavior);
testHelper.addBehavior('treeAsListboxBehavior', accessibility_1.treeAsListboxBehavior);
testHelper.addBehavior('treeItemAsOptionBehavior', accessibility_1.treeItemAsOptionBehavior);
testHelper.addBehavior('treeTitleAsOptionBehavior', accessibility_1.treeTitleAsOptionBehavior);
testHelper.addBehavior('carouselItemBehavior', accessibility_1.carouselItemBehavior);
testHelper.addBehavior('carouselBehavior', accessibility_1.carouselBehavior);
testHelper.addBehavior('tableBehavior', accessibility_1.tableBehavior);
testHelper.addBehavior('tableCellBehavior', accessibility_1.tableCellBehavior);
testHelper.addBehavior('tableHeaderCellBehavior', accessibility_1.tableHeaderCellBehavior);
testHelper.addBehavior('tableRowBehavior', accessibility_1.tableRowBehavior);
testHelper.addBehavior('gridNestedBehavior', accessibility_1.gridNestedBehavior);
testHelper.addBehavior('gridHeaderRowBehavior', accessibility_1.gridHeaderRowBehavior);
testHelper.addBehavior('gridHeaderCellBehavior', accessibility_1.gridHeaderCellBehavior);
testHelper.addBehavior('gridRowNestedBehavior', accessibility_1.gridRowNestedBehavior);
testHelper.addBehavior('gridCellBehavior', accessibility_1.gridCellBehavior);
testHelper.addBehavior('gridCellMultipleFocusableBehavior', accessibility_1.gridCellMultipleFocusableBehavior);
testHelper.addBehavior('gridCellWithFocusableElementBehavior', accessibility_1.gridCellWithFocusableElementBehavior);
testHelper.addBehavior('cardBehavior', accessibility_1.cardBehavior);
testHelper.addBehavior('cardFocusableBehavior', accessibility_1.cardFocusableBehavior);
testHelper.addBehavior('cardChildrenFocusableBehavior', accessibility_1.cardChildrenFocusableBehavior);
testHelper.addBehavior('cardsContainerBehavior', accessibility_1.cardsContainerBehavior);
testHelper.addBehavior('videoBehavior', accessibility_1.videoBehavior);
testHelper.addBehavior('hiddenComponentBehavior', accessibility_1.hiddenComponentBehavior);
testHelper.addBehavior('cardSelectableBehavior', accessibility_1.cardSelectableBehavior);
testHelper.addBehavior('dropdownSelectedItemBehavior', accessibility_1.dropdownSelectedItemBehavior);
testHelper.addBehavior('datepickerBehavior', accessibility_1.datepickerBehavior);
testHelper.addBehavior('datepickerCalendarBehavior', accessibility_1.datepickerCalendarBehavior);
testHelper.addBehavior('datepickerCalendarHeaderBehavior', accessibility_1.datepickerCalendarHeaderBehavior);
testHelper.addBehavior('datepickerCalendarGridBehavior', accessibility_1.datepickerCalendarGridBehavior);
testHelper.addBehavior('datepickerCalendarGridRowBehavior', accessibility_1.datepickerCalendarGridRowBehavior);
testHelper.addBehavior('datepickerCalendarCellBehavior', accessibility_1.datepickerCalendarCellBehavior);
testHelper.addBehavior('datepickerCalendarCellButtonBehavior', accessibility_1.datepickerCalendarCellButtonBehavior);
testHelper.addBehavior('breadcrumbBehavior', accessibility_1.breadcrumbBehavior);
testHelper.addBehavior('breadcrumbItemBehavior', accessibility_1.breadcrumbItemBehavior);
testHelper.addBehavior('breadcrumbDividerBehavior', accessibility_1.breadcrumbDividerBehavior);
testHelper.addBehavior('pillBehavior', accessibility_1.pillBehavior);
testHelper.addBehavior('pillActionBehavior', accessibility_1.pillActionBehavior);
testHelper.run(behaviorMenuItems);
