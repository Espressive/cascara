"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var accessibility_1 = require("@fluentui/accessibility");
describe('AccordionTitleBehavior.ts', function () {
    test('adds role and aria-level attribute if as prop is not a heading', function () {
        for (var index = 1; index <= 6; index++) {
            var expectedResult = accessibility_1.accordionTitleBehavior({ as: "h" + index });
            expect(expectedResult.attributes.root.role).toBeUndefined();
            expect(expectedResult.attributes.root['aria-level']).toBeUndefined();
        }
    });
    test('adds role and aria-level attribute if as prop is not a heading', function () {
        var expectedResult = accessibility_1.accordionTitleBehavior({ as: 'div' });
        expect(expectedResult.attributes.root.role).toEqual('heading');
        expect(expectedResult.attributes.root['aria-level']).toEqual(3);
    });
    test('adds aria-disabled="true" attribute if active="true" and canBeCollapsed="false"', function () {
        var expectedResult = accessibility_1.accordionTitleBehavior({ active: true, canBeCollapsed: false });
        expect(expectedResult.attributes.content['aria-disabled']).toEqual(true);
    });
    test('adds aria-disabled="false" attribute if active="true" and canBeCollapsed="true"', function () {
        var expectedResult = accessibility_1.accordionTitleBehavior({ active: true, canBeCollapsed: true });
        expect(expectedResult.attributes.content['aria-disabled']).toEqual(false);
    });
    test('adds aria-disabled="false" attribute if active="false"', function () {
        var expectedResult = accessibility_1.accordionTitleBehavior({ active: false });
        expect(expectedResult.attributes.content['aria-disabled']).toEqual(false);
    });
});
