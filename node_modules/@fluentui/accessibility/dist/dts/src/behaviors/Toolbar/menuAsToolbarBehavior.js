"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.menuAsToolbarBehavior = void 0;
var types_1 = require("../../focusZone/types");
var menuItemAsToolbarButtonBehavior_1 = require("./menuItemAsToolbarButtonBehavior");
/**
 * @description
 * Implements ARIA Toolbar design pattern.
 * Child item components need to have menuItemAsToolbarButtonBehavior assigned.
 * @specification
 * Adds role 'toolbar' to 'root' slot.
 * Provides arrow key navigation in bidirectionalDomOrder direction.
 * When component's container element receives focus, focus will be set to the default focusable child element of the component.
 */
var menuAsToolbarBehavior = function () { return ({
    attributes: {
        root: {
            role: 'toolbar',
        },
    },
    focusZone: {
        props: {
            shouldFocusInnerElementWhenReceivedFocus: true,
            direction: types_1.FocusZoneDirection.bidirectionalDomOrder,
        },
    },
    childBehaviors: {
        item: menuItemAsToolbarButtonBehavior_1.menuItemAsToolbarButtonBehavior,
    },
}); };
exports.menuAsToolbarBehavior = menuAsToolbarBehavior;
