"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.datepickerCalendarBehavior = void 0;
var datepickerCalendarGridBehavior_1 = require("./datepickerCalendarGridBehavior");
var datepickerCalendarGridRowBehavior_1 = require("./datepickerCalendarGridRowBehavior");
var keyboard_key_1 = require("../../keyboard-key");
/**
 * @description
 * Behavior for a datepicked calendar component
 * @specification
 * Applies 'datepickerCalendarGridBehavior' for 'calendarGrid' child component.
 */
var datepickerCalendarBehavior = function () { return ({
    childBehaviors: {
        calendarGrid: datepickerCalendarGridBehavior_1.datepickerCalendarGridBehavior,
        calendarGridRow: datepickerCalendarGridRowBehavior_1.datepickerCalendarGridRowBehavior,
    },
    keyActions: {
        calendarCell: {
            addWeek: {
                keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey.ArrowDown }],
            },
            subtractWeek: {
                keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey.ArrowUp }],
            },
            addDay: {
                keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey.ArrowRight }],
            },
            subtractDay: {
                keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey.ArrowLeft }],
            },
            moveToStartOfWeek: {
                keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey.Home, ctrlKey: false }],
            },
            moveToEndOfWeek: {
                keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey.End, ctrlKey: false }],
            },
            moveToStartOfColumn: {
                keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey.PageUp }],
            },
            moveToEndOfColumn: {
                keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey.PageDown }],
            },
        },
    },
}); };
exports.datepickerCalendarBehavior = datepickerCalendarBehavior;
