"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cardChildrenFocusableBehavior = void 0;
var attributes_1 = require("../../attributes");
var types_1 = require("../../focusZone/types");
var keyboard_key_1 = require("../../keyboard-key");
/**
 * @description
 * Behavior for a card component with multiple focusable child elements.
 * @specification
 * Adds role='group'.
 * Adds attribute 'aria-disabled=true' based on the property 'disabled'.
 * Adds attribute 'tabIndex=0' to 'root' slot.
 * Adds attribute 'data-is-focusable=true' to 'root' slot.
 * Triggers 'focusCard' action with 'Escape' on 'root'.
 */
var cardChildrenFocusableBehavior = function (props) {
    var _a;
    return ({
        attributes: {
            root: (_a = {
                    role: 'group',
                    tabIndex: 0
                },
                _a[attributes_1.IS_FOCUSABLE_ATTRIBUTE] = true,
                _a['aria-disabled'] = props.disabled,
                _a),
        },
        focusZone: {
            props: {
                handleTabKey: types_1.FocusZoneTabbableElements.all,
                isCircularNavigation: true,
            },
        },
        keyActions: {
            root: {
                focusCard: {
                    keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey.Escape }],
                },
            },
        },
    });
};
exports.cardChildrenFocusableBehavior = cardChildrenFocusableBehavior;
