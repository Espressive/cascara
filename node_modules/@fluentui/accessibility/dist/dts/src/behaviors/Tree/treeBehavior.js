"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.treeBehavior = void 0;
var tslib_1 = require("tslib");
var keyboard_key_1 = require("../../keyboard-key");
var types_1 = require("../../focusZone/types");
var treeItemBehavior_1 = require("./treeItemBehavior");
/**
 * @specification
 * Adds role 'tree' to 'root' slot.
 * Adds attribute 'tabIndex=-1' to 'root' slot.
 * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.
 * Provides arrow key navigation in vertical direction.
 * Triggers 'expandSiblings' action with '*' on 'root'.
 * Adds attribute 'aria-multiselectable=true' to 'root' slot if 'selectable' property is true. Does not set the attribute otherwise.
 */
var treeBehavior = function (props) {
    return {
        attributes: {
            root: tslib_1.__assign({ role: 'tree', 'aria-labelledby': props['aria-labelledby'], tabIndex: -1 }, (props.selectable && {
                'aria-multiselectable': true,
            })),
        },
        keyActions: {
            root: {
                expandSiblings: {
                    keyCombinations: [{ keyCode: keyboard_key_1.keyboardKey['*'] }],
                },
            },
        },
        focusZone: {
            props: {
                direction: types_1.FocusZoneDirection.vertical,
                shouldFocusInnerElementWhenReceivedFocus: true,
            },
        },
        childBehaviors: {
            item: treeItemBehavior_1.treeItemBehavior,
        },
    };
};
exports.treeBehavior = treeBehavior;
