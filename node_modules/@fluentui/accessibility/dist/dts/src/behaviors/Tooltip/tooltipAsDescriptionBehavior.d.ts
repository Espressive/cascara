import { Accessibility, AccessibilityAttributes } from '../../types';
/**
 * @description
 * Implements ARIA Tooltip design pattern.
 *
 * @specification
 * Adds attribute 'role=tooltip' to 'tooltip' slot.
 * Adds attribute 'aria-hidden=false' to 'tooltip' slot if 'open' property is true. Sets the attribute to 'true' otherwise.
 * Adds attribute 'aria-describedby' based on the property 'contentId' to 'trigger' slot. This can be overriden by providing 'aria-describedby' property directly to the component.
 * Triggers 'close' action with 'Escape' on 'trigger'.
 */
export declare const tooltipAsDescriptionBehavior: Accessibility<TooltipBehaviorProps>;
export declare type TooltipBehaviorProps = {
    /** If tooltip is visible. */
    open: boolean;
    /** Tooltip's container id. */
    contentId: string;
    /** aria-label from trigger shorthand. */
    triggerAriaLabel: string;
} & Pick<AccessibilityAttributes, 'aria-label' | 'aria-labelledby' | 'aria-describedby'>;
