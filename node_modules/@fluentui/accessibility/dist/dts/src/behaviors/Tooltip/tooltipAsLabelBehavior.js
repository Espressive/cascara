"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tooltipAsLabelBehavior = void 0;
var tslib_1 = require("tslib");
var tooltipAsDescriptionBehavior_1 = require("./tooltipAsDescriptionBehavior");
/**
 * @description
 * Implements ARIA Tooltip design pattern.
 * Adds 'aria-label' to the button if passed as a prop to root or trigger instead of aria-labelledby pointing to the content id.
 *
 * @specification
 * Adds attribute 'role=tooltip' to 'tooltip' slot.
 * Adds attribute 'aria-hidden=false' to 'tooltip' slot if 'open' property is true. Sets the attribute to 'true' otherwise.
 * Adds attribute 'aria-labelledby' based on the property 'contentId' to 'trigger' slot. This can be overriden by providing 'aria-labelledby' property directly to the component.
 * Triggers 'close' action with 'Escape' on 'trigger'.
 */
var tooltipAsLabelBehavior = function (props) {
    var behaviorData = tooltipAsDescriptionBehavior_1.tooltipAsDescriptionBehavior(props);
    var triggerAriaLabel = props.triggerAriaLabel;
    behaviorData.attributes = {
        trigger: tslib_1.__assign({}, (triggerAriaLabel
            ? { 'aria-label': triggerAriaLabel }
            : { 'aria-labelledby': props['aria-labelledby'] || props.contentId })),
        tooltip: tslib_1.__assign(tslib_1.__assign({}, behaviorData.attributes.tooltip), (!triggerAriaLabel && !props['aria-labelledby'] && { id: props.contentId })),
    };
    return behaviorData;
};
exports.tooltipAsLabelBehavior = tooltipAsLabelBehavior;
