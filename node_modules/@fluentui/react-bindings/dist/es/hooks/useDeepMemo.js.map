{"version":3,"sources":["hooks/useDeepMemo.ts"],"names":["React","useDeepMemo","memoFn","key","ref","useRef","current","value"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAT,CAAmCC,MAAnC,EAAyDC,GAAzD,EAA4E;AACjF,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,EAAZ;;AAEA,MAAI,CAACD,GAAG,CAACE,OAAL,IAAgB,CAAC,SAAUH,GAAV,EAAeC,GAAG,CAACE,OAAJ,CAAYH,GAA3B,CAArB,EAAsD;AACpDC,IAAAA,GAAG,CAACE,OAAJ,GAAc;AAAEH,MAAAA,GAAG,EAAHA,GAAF;AAAOI,MAAAA,KAAK,EAAEL,MAAM;AAApB,KAAd;AACD;;AAED,SAAOE,GAAG,CAACE,OAAJ,CAAYC,KAAnB;AACD","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n *\n * Copied from https://github.com/apollographql/react-apollo/blob/master/packages/hooks/src/utils/useDeepMemo.ts.\n */\nexport function useDeepMemo<TKey, TValue>(memoFn: () => TValue, key: TKey): TValue {\n  const ref = React.useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !_.isEqual(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n"],"file":"useDeepMemo.js"}