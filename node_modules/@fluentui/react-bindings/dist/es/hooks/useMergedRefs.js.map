{"version":3,"sources":["hooks/useMergedRefs.ts"],"names":["React","useMergedRefs","refs","mergedCallback","useCallback","value","current","ref"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAT,GAAuF;AAAA,oCAA1DC,IAA0D;AAA1DA,IAAAA,IAA0D;AAAA;;AAC5F,MAAMC,cAAoC,GAAIH,KAAK,CAACI,WAAN,CAC5C,UAACC,KAAD,EAAc;AACZ;AACEF,IAAAA,cAAF,CAA2DG,OAA3D,GAAqED,KAArE;;AAEA,yDAAkBH,IAAlB,wCAAwB;AAAA,UAAbK,GAAa;;AACtB,UAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,QAAAA,GAAG,CAACF,KAAD,CAAH;AACD,OAFD,MAEO,IAAIE,GAAJ,EAAS;AACd;AACEA,QAAAA,GAAF,CAAgDD,OAAhD,GAA0DD,KAA1D;AACD;AACF;AACF,GAb2C,EAc5C;AAd4C,YAexCH,IAfwC,EAA9C;AAkBA,SAAOC,cAAP;AACD","sourcesContent":["import * as React from 'react';\n\n/**\n * A Ref function which can be treated like a ref object in that it has an attached\n * current property, which will be updated as the ref is evaluated.\n */\nexport type RefObjectFunction<T> = React.RefObject<T> & ((value: T) => void);\n\n/**\n * React hook to merge multiple React refs (either MutableRefObjects or ref callbacks) into a single ref callback that\n * updates all provided refs\n * @param refs - Refs to collectively update with one ref value.\n * @returns A function with an attached \"current\" prop, so that it can be treated like a RefObject.\n */\nexport function useMergedRefs<T>(...refs: (React.Ref<T> | undefined)[]): RefObjectFunction<T> {\n  const mergedCallback: RefObjectFunction<T> = (React.useCallback(\n    (value: T) => {\n      // Update the \"current\" prop hanging on the function.\n      ((mergedCallback as unknown) as React.MutableRefObject<T>).current = value;\n\n      for (const ref of refs) {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref) {\n          // work around the immutability of the React.Ref type\n          ((ref as unknown) as React.MutableRefObject<T>).current = value;\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- already exhaustive\n    [...refs],\n  ) as unknown) as RefObjectFunction<T>;\n\n  return mergedCallback;\n}\n"],"file":"useMergedRefs.js"}