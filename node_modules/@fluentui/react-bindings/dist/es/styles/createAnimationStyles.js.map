{"version":3,"sources":["styles/createAnimationStyles.tsx"],"names":["createAnimationStyles","animation","theme","animationCSSProp","animations","animationName","name","keyframe","duration","delay","direction","fillMode","iterationCount","playState","timingFunction","keyframeParams","animationThemeKeyframeParams","animationPropKeyframeParams","mergedKeyframeParams","keyframeDefinition","params","animationDelay","animationDirection","animationDuration","animationFillMode","animationIterationCount","animationPlayState","animationTimingFunction"],"mappings":"AAGA;AACA;AACA,OAAO,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,SAAD,EAAoCC,KAApC,EAA6D;AAChG,MAAIC,gBAAJ;AADgG,0BAGpED,KAHoE,CAGxFE,UAHwF;AAAA,MAGxFA,UAHwF,kCAG3E,EAH2E;AAIhG,MAAMC,aAAa,GAAGJ,SAAS,CAACK,IAAhC;;AAEA,MAAIF,UAAU,CAACC,aAAD,CAAd,EAA+B;AAAA,gCAWzBD,UAAU,CAACC,aAAD,CAXe;AAAA,QAE3BE,QAF2B,yBAE3BA,QAF2B;AAAA,QAG3BC,QAH2B,yBAG3BA,QAH2B;AAAA,QAI3BC,KAJ2B,yBAI3BA,KAJ2B;AAAA,QAK3BC,SAL2B,yBAK3BA,SAL2B;AAAA,QAM3BC,QAN2B,yBAM3BA,QAN2B;AAAA,QAO3BC,cAP2B,yBAO3BA,cAP2B;AAAA,QAQ3BC,SAR2B,yBAQ3BA,SAR2B;AAAA,QAS3BC,cAT2B,yBAS3BA,cAT2B;AAAA,QAU3BC,cAV2B,yBAU3BA,cAV2B;AAa7B,QAAMC,4BAA4B,GAAGD,cAAc,IAAI,EAAvD;AACA,QAAME,2BAA2B,GAAGhB,SAAS,CAACc,cAA9C;AAEA,QAAMG,oBAAoB,GAAGD,2BAA2B,qBAC/CD,4BAD+C,EACbC,2BAA2B,IAAI,EADlB,IAEpDD,4BAFJ;AAIA,QAAMG,kBAAkB,GACtB,OAAOZ,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA2C;AAAEA,MAAAA,QAAQ,EAARA,QAAF;AAAYa,MAAAA,MAAM,EAAEF;AAApB,KAD7C;AAGAf,IAAAA,gBAAgB,GAAG;AACjBE,MAAAA,aAAa,EAAEc,kBADE;AAEjBE,MAAAA,cAAc,EAAEpB,SAAS,CAACQ,KAAV,IAAmBA,KAFlB;AAGjBa,MAAAA,kBAAkB,EAAErB,SAAS,CAACS,SAAV,IAAuBA,SAH1B;AAIjBa,MAAAA,iBAAiB,EAAEtB,SAAS,CAACO,QAAV,IAAsBA,QAJxB;AAKjBgB,MAAAA,iBAAiB,EAAEvB,SAAS,CAACU,QAAV,IAAsBA,QALxB;AAMjBc,MAAAA,uBAAuB,EAAExB,SAAS,CAACW,cAAV,IAA4BA,cANpC;AAOjBc,MAAAA,kBAAkB,EAAEzB,SAAS,CAACY,SAAV,IAAuBA,SAP1B;AAQjBc,MAAAA,uBAAuB,EAAE1B,SAAS,CAACa,cAAV,IAA4BA;AARpC,KAAnB;AAUD,GAjCD,MAiCO;AACL;AAEAX,IAAAA,gBAAgB;AACdE,MAAAA,aAAa,EAAEJ,SAAS,CAACK;AADX,OAEVL,SAAS,CAACQ,KAAV,IAAmB;AAAEY,MAAAA,cAAc,EAAEpB,SAAS,CAACQ;AAA5B,KAFT,EAGVR,SAAS,CAACS,SAAV,IAAuB;AAAEY,MAAAA,kBAAkB,EAAErB,SAAS,CAACS;AAAhC,KAHb,EAIVT,SAAS,CAACO,QAAV,IAAsB;AAAEe,MAAAA,iBAAiB,EAAEtB,SAAS,CAACO;AAA/B,KAJZ,EAKVP,SAAS,CAACU,QAAV,IAAsB;AAAEa,MAAAA,iBAAiB,EAAEvB,SAAS,CAACU;AAA/B,KALZ,EAMVV,SAAS,CAACW,cAAV,IAA4B;AAC9Ba,MAAAA,uBAAuB,EAAExB,SAAS,CAACW;AADL,KANlB,EASVX,SAAS,CAACY,SAAV,IAAuB;AAAEa,MAAAA,kBAAkB,EAAEzB,SAAS,CAACY;AAAhC,KATb,EAUVZ,SAAS,CAACa,cAAV,IAA4B;AAC9Ba,MAAAA,uBAAuB,EAAE1B,SAAS,CAACa;AADL,KAVlB,CAAhB;AAcD;;AAED,SAAOX,gBAAP;AACD,CA3DM","sourcesContent":["import { ICSSInJSStyle, ThemePrepared } from '@fluentui/styles';\nimport { ComponentAnimationProp } from '../styles/types';\n\n// Notice:\n// This temporary lives here, will be remove once `animation` prop will be dropped\nexport const createAnimationStyles = (animation: ComponentAnimationProp, theme: ThemePrepared) => {\n  let animationCSSProp: ICSSInJSStyle;\n\n  const { animations = {} } = theme;\n  const animationName = animation.name;\n\n  if (animations[animationName]) {\n    const {\n      keyframe,\n      duration,\n      delay,\n      direction,\n      fillMode,\n      iterationCount,\n      playState,\n      timingFunction,\n      keyframeParams,\n    } = animations[animationName];\n\n    const animationThemeKeyframeParams = keyframeParams || {};\n    const animationPropKeyframeParams = animation.keyframeParams;\n\n    const mergedKeyframeParams = animationPropKeyframeParams\n      ? { ...animationThemeKeyframeParams, ...(animationPropKeyframeParams || {}) }\n      : animationThemeKeyframeParams;\n\n    const keyframeDefinition =\n      typeof keyframe === 'string' ? keyframe : ({ keyframe, params: mergedKeyframeParams } as any);\n\n    animationCSSProp = {\n      animationName: keyframeDefinition,\n      animationDelay: animation.delay || delay,\n      animationDirection: animation.direction || direction,\n      animationDuration: animation.duration || duration,\n      animationFillMode: animation.fillMode || fillMode,\n      animationIterationCount: animation.iterationCount || iterationCount,\n      animationPlayState: animation.playState || playState,\n      animationTimingFunction: animation.timingFunction || timingFunction,\n    };\n  } else {\n    // animations was not found in the theme object\n\n    animationCSSProp = {\n      animationName: animation.name,\n      ...(animation.delay && { animationDelay: animation.delay }),\n      ...(animation.direction && { animationDirection: animation.direction }),\n      ...(animation.duration && { animationDuration: animation.duration }),\n      ...(animation.fillMode && { animationFillMode: animation.fillMode }),\n      ...(animation.iterationCount && {\n        animationIterationCount: animation.iterationCount,\n      }),\n      ...(animation.playState && { animationPlayState: animation.playState }),\n      ...(animation.timingFunction && {\n        animationTimingFunction: animation.timingFunction,\n      }),\n    };\n  }\n\n  return animationCSSProp;\n};\n"],"file":"createAnimationStyles.js"}