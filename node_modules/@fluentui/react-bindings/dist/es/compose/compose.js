import * as React from 'react';
import { wasComposedPreviously } from './wasComposedPreviously';
import { mergeComposeOptions } from './mergeComposeOptions';

function compose(input, inputOptions) {
  if (inputOptions === void 0) {
    inputOptions = {};
  }

  var composeOptions = mergeComposeOptions(input, inputOptions, wasComposedPreviously(input) ? input.fluentComposeConfig : undefined);
  var Component = /*#__PURE__*/React.forwardRef(function (props, ref) {
    return composeOptions.render(props, ref, Object.assign({}, composeOptions, {
      state: composeOptions.state(props, ref, composeOptions),
      slots: Object.assign({}, composeOptions.slots, {
        __self: Component
      })
    }));
  });
  Component.displayName = composeOptions.displayName;

  if (input.defaultProps) {
    Component.defaultProps = input.defaultProps;
  }

  Component.fluentComposeConfig = composeOptions;
  return Component;
} // eslint-disable-next-line import/no-default-export


export default compose;
//# sourceMappingURL=compose.js.map
