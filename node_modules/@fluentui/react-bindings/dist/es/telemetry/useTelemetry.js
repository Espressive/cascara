import * as React from 'react';
export var getTelemetry = function getTelemetry(displayName, telemetry, isFirstRenderRef) {
  var start = -1;
  var end = -1;

  var setStart = function setStart() {
    if (telemetry != null && telemetry.enabled) {
      start = performance.now();

      if (!telemetry.performance[displayName]) {
        telemetry.performance[displayName] = {
          instances: 0,
          renders: 0,
          msTotal: 0,
          msMin: Number.MAX_SAFE_INTEGER,
          msMax: 0,
          msResolveVariablesTotal: 0,
          msResolveStylesTotal: 0,
          msRenderStylesTotal: 0,
          stylesRootCacheHits: 0,
          stylesSlotsCacheHits: 0
        };
      }
    }
  };

  var setEnd = function setEnd() {
    if (telemetry != null && telemetry.enabled && start !== -1) {
      end = performance.now();
      var duration = end - start;
      telemetry.performance[displayName].instances += Number(isFirstRenderRef.current);
      telemetry.performance[displayName].renders++;
      telemetry.performance[displayName].msTotal += duration;
      telemetry.performance[displayName].msMin = Math.min(duration, telemetry.performance[displayName].msMin);
      telemetry.performance[displayName].msMax = Math.max(duration, telemetry.performance[displayName].msMax);
      isFirstRenderRef.current = false;
    }
  };

  return {
    setStart: setStart,
    setEnd: setEnd
  };
};
export var useTelemetry = function useTelemetry(displayName, telemetry) {
  var isFirstRenderRef = React.useRef(true);
  return getTelemetry(displayName, telemetry, isFirstRenderRef);
};
//# sourceMappingURL=useTelemetry.js.map
