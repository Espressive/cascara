{"version":3,"sources":["telemetry/useTelemetry.ts"],"names":["React","getTelemetry","displayName","telemetry","isFirstRenderRef","start","end","setStart","enabled","performance","now","instances","renders","msTotal","msMin","Number","MAX_SAFE_INTEGER","msMax","msResolveVariablesTotal","msResolveStylesTotal","msRenderStylesTotal","stylesRootCacheHits","stylesSlotsCacheHits","setEnd","duration","current","Math","min","max","useTelemetry","useRef"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAC1BC,WAD0B,EAE1BC,SAF0B,EAG1BC,gBAH0B,EAIH;AACvB,MAAIC,KAAa,GAAG,CAAC,CAArB;AACA,MAAIC,GAAW,GAAG,CAAC,CAAnB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIJ,SAAJ,YAAIA,SAAS,CAAEK,OAAf,EAAwB;AACtBH,MAAAA,KAAK,GAAGI,WAAW,CAACC,GAAZ,EAAR;;AAEA,UAAI,CAACP,SAAS,CAACM,WAAV,CAAsBP,WAAtB,CAAL,EAAyC;AACvCC,QAAAA,SAAS,CAACM,WAAV,CAAsBP,WAAtB,IAAqC;AACnCS,UAAAA,SAAS,EAAE,CADwB;AAEnCC,UAAAA,OAAO,EAAE,CAF0B;AAInCC,UAAAA,OAAO,EAAE,CAJ0B;AAKnCC,UAAAA,KAAK,EAAEC,MAAM,CAACC,gBALqB;AAMnCC,UAAAA,KAAK,EAAE,CAN4B;AAQnCC,UAAAA,uBAAuB,EAAE,CARU;AASnCC,UAAAA,oBAAoB,EAAE,CATa;AAUnCC,UAAAA,mBAAmB,EAAE,CAVc;AAYnCC,UAAAA,mBAAmB,EAAE,CAZc;AAanCC,UAAAA,oBAAoB,EAAE;AAba,SAArC;AAeD;AACF;AACF,GAtBD;;AAwBA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIpB,SAAS,QAAT,IAAAA,SAAS,CAAEK,OAAX,IAAsBH,KAAK,KAAK,CAAC,CAArC,EAAwC;AACtCC,MAAAA,GAAG,GAAGG,WAAW,CAACC,GAAZ,EAAN;AAEA,UAAMc,QAAQ,GAAGlB,GAAG,GAAGD,KAAvB;AAEAF,MAAAA,SAAS,CAACM,WAAV,CAAsBP,WAAtB,EAAmCS,SAAnC,IAAgDI,MAAM,CAACX,gBAAgB,CAACqB,OAAlB,CAAtD;AACAtB,MAAAA,SAAS,CAACM,WAAV,CAAsBP,WAAtB,EAAmCU,OAAnC;AAEAT,MAAAA,SAAS,CAACM,WAAV,CAAsBP,WAAtB,EAAmCW,OAAnC,IAA8CW,QAA9C;AACArB,MAAAA,SAAS,CAACM,WAAV,CAAsBP,WAAtB,EAAmCY,KAAnC,GAA2CY,IAAI,CAACC,GAAL,CAASH,QAAT,EAAmBrB,SAAS,CAACM,WAAV,CAAsBP,WAAtB,EAAmCY,KAAtD,CAA3C;AACAX,MAAAA,SAAS,CAACM,WAAV,CAAsBP,WAAtB,EAAmCe,KAAnC,GAA2CS,IAAI,CAACE,GAAL,CAASJ,QAAT,EAAmBrB,SAAS,CAACM,WAAV,CAAsBP,WAAtB,EAAmCe,KAAtD,CAA3C;AAEAb,MAAAA,gBAAgB,CAACqB,OAAjB,GAA2B,KAA3B;AACD;AACF,GAfD;;AAiBA,SAAO;AAAElB,IAAAA,QAAQ,EAARA,QAAF;AAAYgB,IAAAA,MAAM,EAANA;AAAZ,GAAP;AACD,CAlDM;AAoDP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAAC3B,WAAD,EAAsBC,SAAtB,EAA+E;AACzG,MAAMC,gBAAgB,GAAGJ,KAAK,CAAC8B,MAAN,CAAsB,IAAtB,CAAzB;AAEA,SAAO7B,YAAY,CAACC,WAAD,EAAcC,SAAd,EAAyBC,gBAAzB,CAAnB;AACD,CAJM","sourcesContent":["import * as React from 'react';\nimport { Telemetry, UseTelemetryResult } from './types';\n\nexport const getTelemetry = (\n  displayName: string,\n  telemetry: Telemetry | undefined,\n  isFirstRenderRef: React.MutableRefObject<boolean>,\n): UseTelemetryResult => {\n  let start: number = -1;\n  let end: number = -1;\n\n  const setStart = () => {\n    if (telemetry?.enabled) {\n      start = performance.now();\n\n      if (!telemetry.performance[displayName]) {\n        telemetry.performance[displayName] = {\n          instances: 0,\n          renders: 0,\n\n          msTotal: 0,\n          msMin: Number.MAX_SAFE_INTEGER,\n          msMax: 0,\n\n          msResolveVariablesTotal: 0,\n          msResolveStylesTotal: 0,\n          msRenderStylesTotal: 0,\n\n          stylesRootCacheHits: 0,\n          stylesSlotsCacheHits: 0,\n        };\n      }\n    }\n  };\n\n  const setEnd = () => {\n    if (telemetry?.enabled && start !== -1) {\n      end = performance.now();\n\n      const duration = end - start;\n\n      telemetry.performance[displayName].instances += Number(isFirstRenderRef.current);\n      telemetry.performance[displayName].renders++;\n\n      telemetry.performance[displayName].msTotal += duration;\n      telemetry.performance[displayName].msMin = Math.min(duration, telemetry.performance[displayName].msMin);\n      telemetry.performance[displayName].msMax = Math.max(duration, telemetry.performance[displayName].msMax);\n\n      isFirstRenderRef.current = false;\n    }\n  };\n\n  return { setStart, setEnd };\n};\n\nexport const useTelemetry = (displayName: string, telemetry: Telemetry | undefined): UseTelemetryResult => {\n  const isFirstRenderRef = React.useRef<boolean>(true);\n\n  return getTelemetry(displayName, telemetry, isFirstRenderRef);\n};\n"],"file":"useTelemetry.js"}