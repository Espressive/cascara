{"version":3,"sources":["context-selector/useContextSelector.ts"],"names":["React","useIsomorphicLayoutEffect","useContextSelector","context","selector","contextValue","useContext","value","current","version","listeners","selected","useReducer","prevState","payload","Object","is","nextSelected","e","state","dispatch","undefined","push","index","indexOf","splice"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,SAASC,yBAAT,QAA0C,SAA1C;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAChCC,OADgC,EAEhCC,QAFgC,EAGd;AAClB,MAAMC,YAAY,GAAGL,KAAK,CAACM,UAAN,CAAkBH,OAAlB,CAArB;AADkB,MAIEI,KAJF,GAOdF,YAPc,CAIhBE,KAJgB,CAIPC,OAJO;AAAA,MAKIC,OALJ,GAOdJ,YAPc,CAKhBI,OALgB,CAKLD,OALK;AAAA,MAMhBE,SANgB,GAOdL,YAPc,CAMhBK,SANgB;AAQlB,MAAMC,QAAQ,GAAGP,QAAQ,CAACG,KAAD,CAAzB;;AARkB,0BAUQP,KAAK,CAACY,UAAN,CACxB,UACEC,SADF,EAEEC,OAFF,EAIwC;AACnC;AACH,QAAI,CAACA,OAAL,EAAc;AACZ;AACA,aAAO,CAACP,KAAD,EAAQI,QAAR,CAAP;AACD;;AAED,QAAIG,OAAO,CAAC,CAAD,CAAP,IAAcL,OAAlB,EAA2B;AACzB,UAAIM,MAAM,CAACC,EAAP,CAAUH,SAAS,CAAC,CAAD,CAAnB,EAAwBF,QAAxB,CAAJ,EAAuC;AACrC,eAAOE,SAAP,CADqC,CACnB;AACnB;;AAED,aAAO,CAACN,KAAD,EAAQI,QAAR,CAAP;AACD;;AAED,QAAI;AACF,UAAII,MAAM,CAACC,EAAP,CAAUH,SAAS,CAAC,CAAD,CAAnB,EAAwBC,OAAO,CAAC,CAAD,CAA/B,CAAJ,EAAyC;AACvC,eAAOD,SAAP,CADuC,CACrB;AACnB;;AAED,UAAMI,YAAY,GAAGb,QAAQ,CAACU,OAAO,CAAC,CAAD,CAAR,CAA7B;;AAEA,UAAIC,MAAM,CAACC,EAAP,CAAUH,SAAS,CAAC,CAAD,CAAnB,EAAwBI,YAAxB,CAAJ,EAA2C;AACzC,eAAOJ,SAAP,CADyC,CACvB;AACnB;;AAED,aAAO,CAACC,OAAO,CAAC,CAAD,CAAR,EAAaG,YAAb,CAAP;AACD,KAZD,CAYE,OAAOC,CAAP,EAAU,CACV;AACD;;AACD,qBAAWL,SAAX,EA7BG,CA6B6B;AACjC,GApCuB,EAqCxB,CAACN,KAAD,EAAQI,QAAR,CArCwB,CAVR;AAAA,MAUXQ,KAVW;AAAA,MAUJC,QAVI;;AAkDlB,MAAI,CAACL,MAAM,CAACC,EAAP,CAAUG,KAAK,CAAC,CAAD,CAAf,EAAoBR,QAApB,CAAL,EAAoC;AAClC;AACA;AACAS,IAAAA,QAAQ,CAACC,SAAD,CAAR;AACD;;AAEDpB,EAAAA,yBAAyB,CAAC,YAAM;AAC9BS,IAAAA,SAAS,CAACY,IAAV,CAAeF,QAAf;AAEA,WAAO,YAAM;AACX,UAAMG,KAAK,GAAGb,SAAS,CAACc,OAAV,CAAkBJ,QAAlB,CAAd;AACAV,MAAAA,SAAS,CAACe,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACD,KAHD;AAID,GAPwB,EAOtB,CAACb,SAAD,CAPsB,CAAzB;AASA,SAAOS,KAAK,CAAC,CAAD,CAAZ;AACD,CArEM","sourcesContent":["import * as React from 'react';\n\nimport { Context, ContextSelector, ContextValue, ContextVersion } from './types';\nimport { useIsomorphicLayoutEffect } from './utils';\n\n/**\n * This hook returns context selected value by selector.\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referencially changed.\n */\nexport const useContextSelector = <Value, SelectedValue>(\n  context: Context<Value>,\n  selector: ContextSelector<Value, SelectedValue>,\n): SelectedValue => {\n  const contextValue = React.useContext((context as unknown) as Context<ContextValue<Value>>);\n\n  const {\n    value: { current: value },\n    version: { current: version },\n    listeners,\n  } = contextValue;\n  const selected = selector(value);\n\n  const [state, dispatch] = React.useReducer(\n    (\n      prevState: readonly [Value /* contextValue */, SelectedValue /* selector(value) */],\n      payload:\n        | undefined // undefined from render below\n        | readonly [ContextVersion, Value], // from provider effect\n    ) => {\n      if (!payload) {\n        // early bail out when is dispatched during render\n        return [value, selected] as const;\n      }\n\n      if (payload[0] <= version) {\n        if (Object.is(prevState[1], selected)) {\n          return prevState; // bail out\n        }\n\n        return [value, selected] as const;\n      }\n\n      try {\n        if (Object.is(prevState[0], payload[1])) {\n          return prevState; // do not update\n        }\n\n        const nextSelected = selector(payload[1]);\n\n        if (Object.is(prevState[1], nextSelected)) {\n          return prevState; // do not update\n        }\n\n        return [payload[1], nextSelected] as const;\n      } catch (e) {\n        // ignored (stale props or some other reason)\n      }\n      return [...prevState] as const; // schedule update\n    },\n    [value, selected] as const,\n  );\n\n  if (!Object.is(state[1], selected)) {\n    // schedule re-render\n    // this is safe because it's self contained\n    dispatch(undefined);\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    listeners.push(dispatch);\n\n    return () => {\n      const index = listeners.indexOf(dispatch);\n      listeners.splice(index, 1);\n    };\n  }, [listeners]);\n\n  return state[1] as SelectedValue;\n};\n"],"file":"useContextSelector.js"}