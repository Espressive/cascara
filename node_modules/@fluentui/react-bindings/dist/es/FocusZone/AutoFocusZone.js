import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import _keys from "lodash/keys";
import { Ref } from '@fluentui/react-component-ref';
import { callable } from '@fluentui/styles';
import * as React from 'react';
import * as PropTypes from 'prop-types';
import { getElementType } from '../utils/getElementType';
import { getUnhandledProps } from '../utils/getUnhandledProps';
import { getNextElement, focusAsync } from './focusUtilities';
/** AutoFocusZone is used to focus inner element on mount. */

export var AutoFocusZone = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(AutoFocusZone, _React$Component);

  function AutoFocusZone() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.root = /*#__PURE__*/React.createRef();

    _this.findElementAndFocusAsync = function () {
      if (!_this.root.current) return;
      var firstFocusableSelector = _this.props.firstFocusableSelector;
      var focusSelector = callable(firstFocusableSelector)();
      var firstFocusableChild = focusSelector ? _this.root.current.querySelector(focusSelector) : getNextElement(_this.root.current, _this.root.current.firstChild, true, false, false, true);
      firstFocusableChild && focusAsync(firstFocusableChild);
    };

    return _this;
  }

  var _proto = AutoFocusZone.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.findElementAndFocusAsync();
  };

  _proto.render = function render() {
    var unhandledProps = getUnhandledProps(AutoFocusZone.handledProps, this.props);
    var ElementType = getElementType(this.props);
    return /*#__PURE__*/React.createElement(Ref, {
      innerRef: this.root
    }, /*#__PURE__*/React.createElement(ElementType, unhandledProps, this.props.children));
  };

  return AutoFocusZone;
}(React.Component);
AutoFocusZone.propTypes = {
  as: PropTypes.elementType,
  firstFocusableSelector: PropTypes.oneOfType([PropTypes.func, PropTypes.string])
};
AutoFocusZone.handledProps = _keys(AutoFocusZone.propTypes);
//# sourceMappingURL=AutoFocusZone.js.map
