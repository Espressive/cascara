{"version":3,"sources":["hooks/useTriggerElement.tsx"],"names":["isDisabledInteractive","node","nodeName","disabled","isInteractiveFilter","NodeFilter","FILTER_ACCEPT","FILTER_SKIP","useTriggerElement","props","trigger","children","element","React","Children","only","process","env","NODE_ENV","ReactIs","isFragment","Error","ref","useRef","useEffect","current","console","warn","join","treeWalker","ownerDocument","createTreeWalker","SHOW_ELEMENT","acceptNode","nextNode","currentNode","nodeStyles","defaultView","getComputedStyle","pointerEvents"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAOA;AACA,SAASA,qBAAT,CAA+BC,IAA/B,EAAoD;AAClD,SACE,CAACA,IAAI,CAACC,QAAL,KAAkB,QAAlB,IACCD,IAAI,CAACC,QAAL,KAAkB,OADnB,IAECD,IAAI,CAACC,QAAL,KAAkB,QAFnB,IAGCD,IAAI,CAACC,QAAL,KAAkB,UAHpB,KAICD,IAAD,CAA4BE,QAL9B;AAOD;;AAED,SAASC,mBAAT,CAA6BH,IAA7B,EAAyC;AACvC,SAAOD,qBAAqB,CAACC,IAAD,CAArB,GAA8BI,UAAU,CAACC,aAAzC,GAAyDD,UAAU,CAACE,WAA3E;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASC,iBAAT,CAA2BC,KAA3B,EAAuF;AAC5F,MAAMC,OAAO,GAAG,kCAAcD,KAAK,CAACE,QAApB,IAAgCF,KAAK,CAACE,QAAtC,GAAiDF,KAAK,CAACC,OAAvE;AACA,MAAME,OAAO,GAAGF,OAAO,GAAIG,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBL,OAApB,CAAJ,GAA0D,IAAjF,CAF4F,CAI5F;;AACA,MAAIM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAtE,EAA8E;AAC5E,QAAIC,OAAO,CAACC,UAAR,CAAmBR,OAAnB,CAAJ,EAAiC;AAC/B,YAAM,IAAIS,KAAJ,CACJ,sHADI,CAAN;AAGD,KAL2E,CAO5E;;AACA;;;AAEA,QAAMC,GAAG,GAAGT,KAAK,CAACU,MAAN,EAAZ;AAEAV,IAAAA,KAAK,CAACW,SAAN,CAAgB,YAAM;AACpB,UAAIF,GAAG,CAACG,OAAR,EAAiB;AAAA;;AACf,YAAIzB,qBAAqB,CAACsB,GAAG,CAACG,OAAL,CAAzB,EAAwC;AACtC;AACAC,UAAAA,OAAO,CAACC,IAAR,CACE,CACE,iGADF,EAEE,yGAFF,EAGE,oGAHF,EAIE,+BAJF,EAKE,kGALF,EAMEC,IANF,CAMO,GANP,CADF;AASD;;AAED,YAAMC,UAAU,4BAAGP,GAAG,CAACG,OAAJ,CAAYK,aAAf,qBAAG,sBAA2BC,gBAA3B,CAA4CT,GAAG,CAACG,OAAhD,EAAyDpB,UAAU,CAAC2B,YAApE,EAAkF;AACnGC,UAAAA,UAAU,EAAE7B;AADuF,SAAlF,CAAnB;;AAGA,eAAOyB,UAAP,YAAOA,UAAU,CAAEK,QAAZ,EAAP,EAA+B;AAAA;;AAC7B,cAAMjC,IAAI,GAAG4B,UAAU,CAACM,WAAxB;AACA,cAAMC,UAAU,0BAAGnC,IAAI,CAAC6B,aAAR,8CAAG,oBAAoBO,WAAvB,qBAAG,sBAAiCC,gBAAjC,CAAkDrC,IAAlD,CAAnB;;AAEA,cAAI,CAAAmC,UAAU,QAAV,YAAAA,UAAU,CAAEG,aAAZ,MAA8B,MAAlC,EAA0C;AACxC,kBAAM,IAAIlB,KAAJ,CACJ,CACE,oGADF,EAEE,gEAFF,EAGE,gDAHF,EAIEO,IAJF,CAIO,GAJP,CADI,CAAN;AAOD;AACF;AACF;AACF,KAjCD,EAiCG,EAjCH;AAmCA,WAAOhB,OAAO;AAAA;;AACZ;AACA,wBAAC,sBAAD,6BAAUA,OAAD,CAAgCH,KAAzC;AAAgD,MAAA,QAAQ,EAAEa;AAA1D,QACGV,OADH,CAFY,GAKV,IALJ;AAMD;;AAED,SAAOA,OAAP;AACD","sourcesContent":["import { Ref } from '@fluentui/react-component-ref';\nimport * as React from 'react';\nimport * as ReactIs from 'react-is';\n\nimport { childrenExist } from '../utils/childrenExist';\n\ntype UseTriggerElementOptions = {\n  children?: React.ReactNode;\n  trigger?: React.ReactElement;\n};\n\n// https://github.com/facebook/react/blob/c4e0768d7487a9359b74986e3b07841d2520f593/packages/react-dom/src/events/getListener.js#L15-L22\nfunction isDisabledInteractive(node: Node): boolean {\n  return (\n    (node.nodeName === 'BUTTON' ||\n      node.nodeName === 'INPUT' ||\n      node.nodeName === 'SELECT' ||\n      node.nodeName === 'TEXTAREA') &&\n    (node as HTMLButtonElement).disabled\n  );\n}\n\nfunction isInteractiveFilter(node: Node) {\n  return isDisabledInteractive(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n}\n\n/**\n * Performs consistent checks for components that are using `trigger` pattern (`Tooltip`, `Popup`). Ensures that\n * `children` or `trigger` props will always pass a valid React element to what additional props and handlers can\n * be applied.\n */\nexport function useTriggerElement(props: UseTriggerElementOptions): React.ReactElement | null {\n  const trigger = childrenExist(props.children) ? props.children : props.trigger;\n  const element = trigger ? (React.Children.only(trigger) as React.ReactElement) : null;\n\n  // An exception should not be thrown in tests as components might be rendered without styles\n  if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n    if (ReactIs.isFragment(element)) {\n      throw new Error(\n        'useTriggerElement(): A \"React.Fragment\" cannot be used as a \"trigger\" as it will be impossible to spread props on it',\n      );\n    }\n\n    // Hooks are used only for dev mode validations and will be removed in production builds\n    /* eslint-disable react-hooks/rules-of-hooks */\n\n    const ref = React.useRef<HTMLElement>() as React.RefObject<HTMLElement | HTMLButtonElement>;\n\n    React.useEffect(() => {\n      if (ref.current) {\n        if (isDisabledInteractive(ref.current)) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            [\n              'useTriggerElement(): Disabled elements should used as a \"trigger\" accurately as it may lead to ',\n              'unexpected behavior as pointer events are ignored on disabled elements. Please wrap your \"trigger\" with',\n              'an additional element like a \"div\" if you need to show tooltips or popups on disabled elements, an',\n              'example is available in docs:',\n              'https://fluentsite.z22.web.core.windows.net/components/tooltip/definition#usage-disabled-trigger',\n            ].join(' '),\n          );\n        }\n\n        const treeWalker = ref.current.ownerDocument?.createTreeWalker(ref.current, NodeFilter.SHOW_ELEMENT, {\n          acceptNode: isInteractiveFilter,\n        });\n        while (treeWalker?.nextNode()) {\n          const node = treeWalker.currentNode;\n          const nodeStyles = node.ownerDocument?.defaultView?.getComputedStyle(node as Element);\n\n          if (nodeStyles?.pointerEvents !== 'none') {\n            throw new Error(\n              [\n                'useTriggerElement(): A disabled element should have explicit \"pointer-events: \"none\" in its styles',\n                'due a bug in Chrome that breaks \"onMouseLeave\" event in React:',\n                'https://github.com/facebook/react/issues/19692',\n              ].join(' '),\n            );\n          }\n        }\n      }\n    }, []);\n\n    return element ? (\n      /* Required as components may call handlers via `trigger.props`, Ref will pass unhandled props down */\n      <Ref {...(element as React.ReactElement).props} innerRef={ref}>\n        {element}\n      </Ref>\n    ) : null;\n  }\n\n  return element;\n}\n"],"file":"useTriggerElement.js"}