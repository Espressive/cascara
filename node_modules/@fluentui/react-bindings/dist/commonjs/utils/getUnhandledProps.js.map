{"version":3,"sources":["utils/getUnhandledProps.ts"],"names":["getUnhandledProps","handledProps","props","Object","keys","reduce","acc","prop","indexOf"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,iBAAT,CAA0DC,YAA1D,EAAqFC,KAArF,EAA2G;AAChH,SAAOC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAAsC,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC1D,QAAIN,YAAY,CAACO,OAAb,CAAqBD,IAArB,MAA+B,CAAC,CAApC,EAAwCD,GAAD,CAAaC,IAAb,IAAqBL,KAAK,CAACK,IAAD,CAA1B;AAEvC,WAAOD,GAAP;AACD,GAJM,EAIJ,EAJI,CAAP;AAKD","sourcesContent":["/**\n * Returns an object consisting of props beyond the scope of the Component.\n * Useful for getting and spreading unknown props from the user.\n *\n * @param handledProps - An array with names of props\n * @param props - A ReactElement props object\n * @returns A shallow copy of the prop object\n */\nexport function getUnhandledProps<P extends Record<string, any>>(handledProps: (keyof P)[], props: P): Partial<P> {\n  return Object.keys(props).reduce<Partial<P>>((acc, prop) => {\n    if (handledProps.indexOf(prop) === -1) (acc as any)[prop] = props[prop];\n\n    return acc;\n  }, {});\n}\n"],"file":"getUnhandledProps.js"}