{"version":3,"sources":["accessibility/getAccessibility.ts"],"names":["emptyBehavior","attributes","keyHandlers","getAccessibility","displayName","behavior","behaviorProps","isRtlEnabled","actionHandlers","undefined","definition","keyActions","focusZone","props","preventFocusRestoration","process","env","NODE_ENV","Object","keys","forEach","slotName","validatorName"],"mappings":";;;;;AAOA;;AAGA,IAAMA,aAAyC,GAAG;AAChDC,EAAAA,UAAU,EAAE,EADoC;AAEhDC,EAAAA,WAAW,EAAE;AAFmC,CAAlD;;AAKO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC9BC,WAD8B,EAE9BC,QAF8B,EAG9BC,aAH8B,EAI9BC,YAJ8B,EAK9BC,cAL8B,EAMC;AAC/B,MAAIH,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAKI,SAAtC,EAAiD;AAC/C,WAAOT,aAAP;AACD;;AAED,MAAMU,UAAmC,GAAGL,QAAQ,CAACC,aAAD,CAApD;AACA,MAAMJ,WAAW,GACfM,cAAc,IAAIE,UAAU,CAACC,UAA7B,GACI,4CAAmBH,cAAnB,EAAmCE,UAAU,CAACC,UAA9C,EAA0DJ,YAA1D,CADJ,GAEI,EAHN;;AAKA,MAAIG,UAAU,CAACE,SAAf,EAA0B;AACxBF,IAAAA,UAAU,CAACE,SAAX,CAAqBC,KAArB;AACE;AACAC,MAAAA,uBAAuB,EAAE;AAF3B,OAGKJ,UAAU,CAACE,SAAX,CAAqBC,KAH1B;AAKD;;AAED,MAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA;AACA;AACA,QAAIP,UAAU,CAACT,UAAf,EAA2B;AACzBiB,MAAAA,MAAM,CAACC,IAAP,CAAYT,UAAU,CAACT,UAAvB,EAAmCmB,OAAnC,CAA2C,UAAAC,QAAQ,EAAI;AACrD,YAAMC,aAAa,GAChBZ,UAAU,CAACT,UAAZ,CAAyDoB,QAAzD,EAAmE,eAAnE,UACGjB,WADH,IACiBiB,QAAQ,KAAK,MAAb,GAAsB,EAAtB,UAAgCA,QADjD,CADF;;AAIA,YAAI,CAAEX,UAAU,CAACT,UAAZ,CAAyDoB,QAAzD,CAAL,EAAyE;AACtEX,UAAAA,UAAU,CAACT,UAAZ,CAAyDoB,QAAzD,IAAqE,EAArE;AACD;;AAEAX,QAAAA,UAAU,CAACT,UAAZ,CAAyDoB,QAAzD,EAAmE,eAAnE,IAAsFC,aAAtF;AACD,OAVD;AAWD;AACF;;AAED,2BACKtB,aADL,EAEKU,UAFL;AAGER,IAAAA,WAAW,EAAXA;AAHF;AAKD,CAjDM","sourcesContent":["import {\n  Accessibility,\n  AccessibilityAttributes,\n  AccessibilityAttributesBySlot,\n  AccessibilityDefinition,\n} from '@fluentui/accessibility';\n\nimport { getKeyDownHandlers } from './getKeyDownHandlers';\nimport { AccessibilityActionHandlers, ReactAccessibilityBehavior } from './types';\n\nconst emptyBehavior: ReactAccessibilityBehavior = {\n  attributes: {},\n  keyHandlers: {},\n};\n\nexport const getAccessibility = <Props extends Record<string, any>>(\n  displayName: string,\n  behavior: Accessibility<Props>,\n  behaviorProps: Props,\n  isRtlEnabled: boolean,\n  actionHandlers?: AccessibilityActionHandlers,\n): ReactAccessibilityBehavior => {\n  if (behavior === null || behavior === undefined) {\n    return emptyBehavior;\n  }\n\n  const definition: AccessibilityDefinition = behavior(behaviorProps);\n  const keyHandlers =\n    actionHandlers && definition.keyActions\n      ? getKeyDownHandlers(actionHandlers, definition.keyActions, isRtlEnabled)\n      : {};\n\n  if (definition.focusZone) {\n    definition.focusZone.props = {\n      // maintain behavior of focus zone in v7 behaviors\n      preventFocusRestoration: true,\n      ...definition.focusZone.props,\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // For the non-production builds we enable the runtime accessibility attributes validator.\n    // We're adding the data-aa-class attribute which is being consumed by the validator, the\n    // schema is located in @fluentui/ability-attributes package.\n    if (definition.attributes) {\n      Object.keys(definition.attributes).forEach(slotName => {\n        const validatorName =\n          (definition.attributes as AccessibilityAttributesBySlot)[slotName]['data-aa-class'] ||\n          `${displayName}${slotName === 'root' ? '' : `__${slotName}`}`;\n\n        if (!(definition.attributes as AccessibilityAttributesBySlot)[slotName]) {\n          (definition.attributes as AccessibilityAttributesBySlot)[slotName] = {} as AccessibilityAttributes;\n        }\n\n        (definition.attributes as AccessibilityAttributesBySlot)[slotName]['data-aa-class'] = validatorName;\n      });\n    }\n  }\n\n  return {\n    ...emptyBehavior,\n    ...definition,\n    keyHandlers,\n  };\n};\n"],"file":"getAccessibility.js"}