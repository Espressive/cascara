"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.AutoFocusZone = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _keys2 = _interopRequireDefault(require("lodash/keys"));

var _reactComponentRef = require("@fluentui/react-component-ref");

var _styles = require("@fluentui/styles");

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _getElementType = require("../utils/getElementType");

var _getUnhandledProps = require("../utils/getUnhandledProps");

var _focusUtilities = require("./focusUtilities");

/** AutoFocusZone is used to focus inner element on mount. */
var AutoFocusZone = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(AutoFocusZone, _React$Component);

  function AutoFocusZone() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.root = /*#__PURE__*/React.createRef();

    _this.findElementAndFocusAsync = function () {
      if (!_this.root.current) return;
      var firstFocusableSelector = _this.props.firstFocusableSelector;
      var focusSelector = (0, _styles.callable)(firstFocusableSelector)();
      var firstFocusableChild = focusSelector ? _this.root.current.querySelector(focusSelector) : (0, _focusUtilities.getNextElement)(_this.root.current, _this.root.current.firstChild, true, false, false, true);
      firstFocusableChild && (0, _focusUtilities.focusAsync)(firstFocusableChild);
    };

    return _this;
  }

  var _proto = AutoFocusZone.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.findElementAndFocusAsync();
  };

  _proto.render = function render() {
    var unhandledProps = (0, _getUnhandledProps.getUnhandledProps)(AutoFocusZone.handledProps, this.props);
    var ElementType = (0, _getElementType.getElementType)(this.props);
    return /*#__PURE__*/React.createElement(_reactComponentRef.Ref, {
      innerRef: this.root
    }, /*#__PURE__*/React.createElement(ElementType, unhandledProps, this.props.children));
  };

  return AutoFocusZone;
}(React.Component);

exports.AutoFocusZone = AutoFocusZone;
AutoFocusZone.propTypes = {
  as: PropTypes.elementType,
  firstFocusableSelector: PropTypes.oneOfType([PropTypes.func, PropTypes.string])
};
AutoFocusZone.handledProps = (0, _keys2.default)(AutoFocusZone.propTypes);
//# sourceMappingURL=AutoFocusZone.js.map
