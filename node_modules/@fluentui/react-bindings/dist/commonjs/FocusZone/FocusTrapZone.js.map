{"version":3,"sources":["FocusZone/FocusTrapZone.tsx"],"names":["FocusTrapZone","_root","current","_previouslyFocusedElementOutsideTrapZone","_previouslyFocusedElementInTrapZone","_firstBumper","React","createRef","_lastBumper","_hasFocus","windowRef","elem","ReactDOM","findDOMNode","shouldHandleOutsideClick","props","isClickableOutsideFocusTrap","focusTriggerOnOutsideClick","_onRootFocus","ev","onFocus","_onRootBlur","onBlur","relatedTarget","doc","activeElement","contains","_onFirstBumperFocus","_onBumperFocus","_onLastBumperFocus","isFirstBumper","currentBumper","nextFocusable","_isBumper","_findElementAndFocusAsync","focus","_enableFocusTrapZone","disabled","_focusStack","push","_bringFocusIntoZone","_hideContentFromAccessibilityTree","disableFirstFocus","_getPreviouslyFocusedElementOutsideTrapZone","_releaseFocusTrapZone","ignoreExternalFocusing","filter","value","body","_focusAsync","lastActiveFocusTrap","length","_showContentInAccessibilityTree","hasAttribute","HIDDEN_FROM_ACC_TREE","removeAttribute","focusPreviouslyFocusedInnerElement","firstFocusableSelector","focusSelector","firstFocusableChild","querySelector","firstChild","_onFocusCapture","onFocusCapture","target","currentTarget","_forceFocusInTrap","triggeredElement","preventDefault","stopPropagation","_handleOutsideFocus","focusedElement","_handleOutsideClick","clickedElement","isOutsideFocusTrapZone","isOutsideTriggerElement","_onKeyboardHandler","onKeyDown","elementToFocusOnDismiss","previouslyFocusedElement","bodyChildren","children","console","warn","index","currentChild","isOrHasFocusTrapZone","isAriaLiveRegion","getAttribute","setAttribute","hiddenElements","querySelectorAll","element","componentDidMount","componentDidUpdate","prevProps","forceFocusInsideTrapOnComponentUpdate","forceFocusInsideTrapOnOutsideFocus","prevForceFocusInsideTrap","undefined","newForceFocusInsideTrap","prevDisabled","newDisabled","componentWillUnmount","render","className","ariaLabelledBy","unhandledProps","propTypes","ElementType","bumperProps","style","pointerEvents","position","tabIndex","Component","as","PropTypes","elementType","string","object","bool","defaultProps"],"mappings":"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","sourcesContent":["import { EventListener } from '@fluentui/react-component-event-listener';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport { getElementType } from '../utils/getElementType';\nimport { getUnhandledProps } from '../utils/getUnhandledProps';\nimport {\n  getNextElement,\n  getFirstTabbable,\n  getLastTabbable,\n  getWindow,\n  getDocument,\n  focusAsync,\n  HIDDEN_FROM_ACC_TREE,\n} from './focusUtilities';\nimport { FocusTrapZoneProps } from './FocusTrapZone.types';\n\n/** FocusTrapZone is used to trap the focus in any html element placed in body\n *  and hide other elements outside of Focus Trap Zone from accessibility tree.\n *  Pressing tab will circle focus within the inner focusable elements of the FocusTrapZone. */\nexport class FocusTrapZone extends React.Component<FocusTrapZoneProps, {}> {\n  static _focusStack: FocusTrapZone[] = [];\n\n  _root: { current: HTMLElement | null } = { current: null };\n\n  _previouslyFocusedElementOutsideTrapZone?: HTMLElement;\n  _previouslyFocusedElementInTrapZone?: HTMLElement;\n\n  _firstBumper = React.createRef<HTMLDivElement>();\n  _lastBumper = React.createRef<HTMLDivElement>();\n  _hasFocus: boolean = false;\n\n  windowRef = React.createRef<Window>() as React.MutableRefObject<Window>;\n\n  // @ts-ignore\n  createRef = elem => {\n    this._root.current = ReactDOM.findDOMNode(elem) as HTMLElement;\n    // @ts-ignore\n    this.windowRef.current = getWindow(this._root.current);\n  };\n\n  shouldHandleOutsideClick = () => !this.props.isClickableOutsideFocusTrap || !this.props.focusTriggerOnOutsideClick;\n\n  static propTypes = {\n    as: PropTypes.elementType,\n    className: PropTypes.string,\n    elementToFocusOnDismiss: PropTypes.object,\n    ariaLabelledBy: PropTypes.string,\n    isClickableOutsideFocusTrap: PropTypes.bool,\n    ignoreExternalFocusing: PropTypes.bool,\n    forceFocusInsideTrapOnOutsideFocus: PropTypes.bool,\n    forceFocusInsideTrapOnComponentUpdate: PropTypes.bool,\n    firstFocusableSelector: PropTypes.string,\n    disableFirstFocus: PropTypes.bool,\n    focusPreviouslyFocusedInnerElement: PropTypes.bool,\n    focusTriggerOnOutsideClick: PropTypes.bool,\n  };\n\n  static defaultProps: FocusTrapZoneProps = {\n    as: 'div',\n    isClickableOutsideFocusTrap: true,\n    forceFocusInsideTrapOnOutsideFocus: false,\n  };\n\n  componentDidMount(): void {\n    this._enableFocusTrapZone();\n  }\n\n  componentDidUpdate(prevProps: FocusTrapZoneProps): void {\n    const { forceFocusInsideTrapOnComponentUpdate, forceFocusInsideTrapOnOutsideFocus, disabled } = this.props;\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const activeElement = doc.activeElement as HTMLElement;\n\n    // if after componentDidUpdate focus is not inside the focus trap, bring it back\n    if (\n      !disabled &&\n      // @ts-ignore\n      !this._root.current.contains(activeElement) &&\n      forceFocusInsideTrapOnComponentUpdate\n    ) {\n      this._bringFocusIntoZone();\n      return;\n    }\n\n    const prevForceFocusInsideTrap =\n      prevProps.forceFocusInsideTrapOnOutsideFocus !== undefined ? prevProps.forceFocusInsideTrapOnOutsideFocus : true;\n    const newForceFocusInsideTrap =\n      forceFocusInsideTrapOnOutsideFocus !== undefined ? forceFocusInsideTrapOnOutsideFocus : true;\n    const prevDisabled = prevProps.disabled !== undefined ? prevProps.disabled : false;\n    const newDisabled = disabled !== undefined ? disabled : false;\n\n    if ((!prevForceFocusInsideTrap && newForceFocusInsideTrap) || (prevDisabled && !newDisabled)) {\n      // Transition from forceFocusInsideTrap / FTZ disabled to enabled.\n      // Emulate what happens when a FocusTrapZone gets mounted.\n      this._enableFocusTrapZone();\n    } else if ((prevForceFocusInsideTrap && !newForceFocusInsideTrap) || (!prevDisabled && newDisabled)) {\n      // Transition from forceFocusInsideTrap / FTZ enabled to disabled.\n      // Emulate what happens when a FocusTrapZone gets unmounted.\n      this._releaseFocusTrapZone();\n    }\n  }\n\n  componentWillUnmount(): void {\n    // don't handle return focus unless forceFocusInsideTrapOnOutsideFocus is true or focus is still within FocusTrapZone\n    const doc = getDocument(this._root.current);\n    if (\n      !this.props.disabled ||\n      this.props.forceFocusInsideTrapOnOutsideFocus ||\n      // @ts-ignore\n      !this._root.current.contains(doc.activeElement as HTMLElement)\n    ) {\n      this._releaseFocusTrapZone();\n    }\n\n    // Dispose of element references so the DOM Nodes can be garbage-collected\n    delete this._previouslyFocusedElementInTrapZone;\n    delete this._previouslyFocusedElementOutsideTrapZone;\n  }\n\n  render(): JSX.Element {\n    const { className, forceFocusInsideTrapOnOutsideFocus, ariaLabelledBy, disabled = false } = this.props;\n    const unhandledProps = getUnhandledProps(_.keys(FocusTrapZone.propTypes) as any, this.props);\n    const ElementType = getElementType(this.props);\n\n    const bumperProps = {\n      'aria-hidden': true,\n      style: {\n        pointerEvents: 'none',\n        position: 'fixed', // 'fixed' prevents browsers from scrolling to bumpers when viewport does not contain them\n      },\n      tabIndex: disabled ? -1 : 0, // make bumpers tabbable only when enabled\n      'data-is-visible': true,\n    } as React.HTMLAttributes<HTMLDivElement>;\n\n    return (\n      <>\n        <ElementType\n          {...unhandledProps}\n          className={className}\n          ref={this.createRef}\n          aria-labelledby={ariaLabelledBy}\n          onKeyDown={this._onKeyboardHandler}\n          onFocusCapture={this._onFocusCapture}\n          onFocus={this._onRootFocus}\n          onBlur={this._onRootBlur}\n        >\n          <div {...bumperProps} ref={this._firstBumper} onFocus={this._onFirstBumperFocus} />\n          {this.props.children}\n          <div {...bumperProps} ref={this._lastBumper} onFocus={this._onLastBumperFocus} />\n        </ElementType>\n\n        {forceFocusInsideTrapOnOutsideFocus && (\n          <EventListener capture listener={this._handleOutsideFocus} targetRef={this.windowRef} type=\"focus\" />\n        )}\n        {this.shouldHandleOutsideClick() && (\n          <EventListener capture listener={this._handleOutsideClick} targetRef={this.windowRef} type=\"click\" />\n        )}\n      </>\n    );\n  }\n\n  _onRootFocus = (ev: React.FocusEvent<HTMLDivElement>) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n\n    this._hasFocus = true;\n  };\n\n  _onRootBlur = (ev: React.FocusEvent<HTMLDivElement>) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n\n    let relatedTarget = ev.relatedTarget;\n    if (ev.relatedTarget === null) {\n      // In IE11, due to lack of support, event.relatedTarget is always\n      // null making every onBlur call to be \"outside\" of the ComboBox\n      // even when it's not. Using document.activeElement is another way\n      // for us to be able to get what the relatedTarget without relying\n      // on the event\n      const doc = getDocument(this._root.current);\n      // @ts-ignore\n      relatedTarget = doc.activeElement as Element;\n    }\n\n    // @ts-ignore\n    if (!this._root.current.contains(relatedTarget as HTMLElement)) {\n      this._hasFocus = false;\n    }\n  };\n\n  _onFirstBumperFocus = () => {\n    this._onBumperFocus(true);\n  };\n\n  _onLastBumperFocus = () => {\n    this._onBumperFocus(false);\n  };\n\n  _isBumper(element: HTMLElement): boolean {\n    return element === this._firstBumper.current || element === this._lastBumper.current;\n  }\n\n  _onBumperFocus = (isFirstBumper: boolean) => {\n    if (!this._root.current) {\n      return;\n    }\n\n    const currentBumper = (isFirstBumper === this._hasFocus\n      ? this._lastBumper.current\n      : this._firstBumper.current) as HTMLElement;\n\n    const nextFocusable =\n      isFirstBumper === this._hasFocus\n        ? getLastTabbable(this._root.current, currentBumper, true, false)\n        : getFirstTabbable(this._root.current, currentBumper, true, false);\n\n    if (nextFocusable) {\n      if (this._isBumper(nextFocusable)) {\n        // This can happen when FTZ contains no tabbable elements. Focus will take care of finding a focusable element in FTZ.\n        this._findElementAndFocusAsync();\n      } else {\n        nextFocusable.focus();\n      }\n    }\n  };\n\n  _focusAsync(element: HTMLElement): void {\n    if (!this._isBumper(element)) {\n      focusAsync(element);\n    }\n  }\n\n  _enableFocusTrapZone = () => {\n    const { disabled = false } = this.props;\n    if (disabled) {\n      return;\n    }\n\n    FocusTrapZone._focusStack.push(this);\n\n    this._bringFocusIntoZone();\n    this._hideContentFromAccessibilityTree();\n  };\n\n  _bringFocusIntoZone = () => {\n    const { disableFirstFocus = false } = this.props;\n\n    this._previouslyFocusedElementOutsideTrapZone = this._getPreviouslyFocusedElementOutsideTrapZone();\n\n    if (\n      // @ts-ignore\n      !this._root.current.contains(this._previouslyFocusedElementOutsideTrapZone) &&\n      !disableFirstFocus\n    ) {\n      this._findElementAndFocusAsync();\n    }\n  };\n\n  _releaseFocusTrapZone = () => {\n    const { ignoreExternalFocusing } = this.props;\n\n    FocusTrapZone._focusStack = FocusTrapZone._focusStack.filter((value: FocusTrapZone) => {\n      return this !== value;\n    });\n\n    // try to focus element which triggered FocusTrapZone - prviously focused element outside trap zone\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const activeElement = doc.activeElement as HTMLElement;\n    if (\n      !ignoreExternalFocusing &&\n      this._previouslyFocusedElementOutsideTrapZone &&\n      // @ts-ignore\n      (this._root.current.contains(activeElement) || activeElement === doc.body)\n    ) {\n      this._focusAsync(this._previouslyFocusedElementOutsideTrapZone);\n    }\n\n    // if last active focus trap zone is going to be released - show previously hidden content in accessibility tree\n    const lastActiveFocusTrap =\n      FocusTrapZone._focusStack.length && FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1];\n\n    if (!lastActiveFocusTrap) {\n      this._showContentInAccessibilityTree();\n    } else if (\n      lastActiveFocusTrap._root.current &&\n      lastActiveFocusTrap._root.current.hasAttribute(HIDDEN_FROM_ACC_TREE)\n    ) {\n      lastActiveFocusTrap._root.current.removeAttribute(HIDDEN_FROM_ACC_TREE);\n      lastActiveFocusTrap._root.current.removeAttribute('aria-hidden');\n    }\n  };\n\n  _findElementAndFocusAsync = () => {\n    if (!this._root.current) {\n      return;\n    }\n\n    const { focusPreviouslyFocusedInnerElement, firstFocusableSelector } = this.props;\n\n    if (\n      focusPreviouslyFocusedInnerElement &&\n      this._previouslyFocusedElementInTrapZone &&\n      this._root.current.contains(this._previouslyFocusedElementInTrapZone)\n    ) {\n      // focus on the last item that had focus in the zone before we left the zone\n      this._focusAsync(this._previouslyFocusedElementInTrapZone);\n      return;\n    }\n\n    const focusSelector =\n      firstFocusableSelector &&\n      (typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector());\n\n    let firstFocusableChild: HTMLElement | null = null;\n\n    if (focusSelector) {\n      firstFocusableChild = this._root.current.querySelector(focusSelector);\n    }\n\n    // Fall back to first element if query selector did not match any elements.\n    if (!firstFocusableChild) {\n      firstFocusableChild = getNextElement(\n        this._root.current,\n        this._root.current.firstChild as HTMLElement,\n        false,\n        false,\n        false,\n        true,\n      );\n    }\n\n    firstFocusableChild && this._focusAsync(firstFocusableChild);\n  };\n\n  _onFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    this.props.onFocusCapture && this.props.onFocusCapture(ev);\n    if (ev.target !== ev.currentTarget && !this._isBumper(ev.target)) {\n      // every time focus changes within the trap zone, remember the focused element so that\n      // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\n      this._previouslyFocusedElementInTrapZone = ev.target as HTMLElement;\n    }\n  };\n\n  _forceFocusInTrap = (ev: Event, triggeredElement: HTMLElement) => {\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\n      // @ts-ignore\n      if (!this._root.current.contains(triggeredElement)) {\n        this._findElementAndFocusAsync();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  _handleOutsideFocus = (ev: FocusEvent): void => {\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const focusedElement = doc.activeElement as HTMLElement;\n    focusedElement && this._forceFocusInTrap(ev, focusedElement);\n  };\n\n  _handleOutsideClick = (ev: MouseEvent): void => {\n    const clickedElement = ev.target as HTMLElement;\n    const { isClickableOutsideFocusTrap, focusTriggerOnOutsideClick } = this.props;\n\n    if (!isClickableOutsideFocusTrap) {\n      clickedElement && this._forceFocusInTrap(ev, clickedElement);\n    } else if (!focusTriggerOnOutsideClick) {\n      const isOutsideFocusTrapZone = this._root.current && !this._root.current.contains(clickedElement);\n      const isOutsideTriggerElement =\n        this._previouslyFocusedElementOutsideTrapZone &&\n        !this._previouslyFocusedElementOutsideTrapZone.contains(clickedElement);\n      if (isOutsideFocusTrapZone && isOutsideTriggerElement) {\n        // set it to NULL, so the trigger will not be focused on componentWillUnmount\n        // @ts-ignore\n        this._previouslyFocusedElementOutsideTrapZone = null;\n      }\n    }\n  };\n\n  _onKeyboardHandler = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // do not propogate keyboard events outside focus trap zone\n    // https://github.com/microsoft/fluent-ui-react/pull/1180\n    ev.stopPropagation();\n  };\n\n  _getPreviouslyFocusedElementOutsideTrapZone = () => {\n    const { elementToFocusOnDismiss } = this.props;\n    let previouslyFocusedElement = this._previouslyFocusedElementOutsideTrapZone;\n\n    if (elementToFocusOnDismiss && previouslyFocusedElement !== elementToFocusOnDismiss) {\n      previouslyFocusedElement = elementToFocusOnDismiss;\n    } else if (!previouslyFocusedElement) {\n      const doc = getDocument(this._root.current);\n      // @ts-ignore\n      previouslyFocusedElement = doc.activeElement as HTMLElement;\n    }\n\n    return previouslyFocusedElement;\n  };\n\n  _hideContentFromAccessibilityTree = () => {\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const bodyChildren = (doc.body && doc.body.children) || [];\n\n    // @ts-ignore\n    if (bodyChildren.length && !doc.body.contains(this._root.current)) {\n      // In case popup render options will change\n      /* eslint-disable-next-line no-console */\n      console.warn(\n        'Body element does not contain trap zone element. Please, ensure the trap zone element is placed inside body, so it will work properly.',\n      );\n    }\n\n    for (let index = 0; index < bodyChildren.length; index++) {\n      const currentChild = bodyChildren[index] as HTMLElement;\n      const isOrHasFocusTrapZone = currentChild === this._root.current || currentChild.contains(this._root.current);\n      const isAriaLiveRegion = currentChild.hasAttribute('aria-live');\n\n      if (!isOrHasFocusTrapZone && !isAriaLiveRegion && currentChild.getAttribute('aria-hidden') !== 'true') {\n        currentChild.setAttribute('aria-hidden', 'true');\n        currentChild.setAttribute(HIDDEN_FROM_ACC_TREE, 'true');\n      }\n    }\n  };\n\n  _showContentInAccessibilityTree = () => {\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const hiddenElements = doc.querySelectorAll(`[${HIDDEN_FROM_ACC_TREE}=\"true\"]`);\n    for (let index = 0; index < hiddenElements.length; index++) {\n      const element = hiddenElements[index];\n      element.removeAttribute('aria-hidden');\n      element.removeAttribute(HIDDEN_FROM_ACC_TREE);\n    }\n  };\n}\n"],"file":"FocusTrapZone.js"}