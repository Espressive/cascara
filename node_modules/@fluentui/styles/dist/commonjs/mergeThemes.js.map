{"version":3,"sources":["mergeThemes.ts"],"names":["emptyTheme","siteVariables","fontSizes","componentVariables","componentStyles","fontFaces","staticStyles","animations","mergeComponentStyles__PROD","stylesA","stylesB","result","Object","keys","forEach","partName","slotA","slotB","mergedStyleFunction","styleParam","mergeComponentStyles__DEV","isDebugEnabled","mergedKeys","slotName","_debug","undefined","styles","debugId","_debugId","debugA","resolvedStylesA","debugB","resolvedStylesB","merged","concat","mergeComponentStyles","process","env","NODE_ENV","mergeComponentVariables__PROD","initial","sources","filteredSources","filter","Boolean","length","reduce","acc","next","mergeComponentVariables","accumulatedVariables","fn","computedComponentVariables","mergeComponentVariables__DEV","computedDebug","resolved","input","_invertedKeys","mergeSiteVariables__PROD","deepmerge","mergeSiteVariables__DEV","accumulatedSiteVariables","nextSiteVariables","key","mergeSiteVariables","mergeThemeVariables__PROD","displayNames","displayName","mergeThemeVariables__DEV","source","mergeThemeVariables","mergeThemeStyles","themeComponentStyles","stylesByPart","mergeFontFaces","toCompactArray","mergeStaticStyles","mergeAnimations","assign","mergeStyles","args","mergeThemes","themes","nextDebugId"],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\n\nimport { callable } from './callable';\nimport {\n  ComponentSlotStyle,\n  ComponentSlotStylesInput,\n  ComponentSlotStylesPrepared,\n  ComponentVariablesInput,\n  ComponentVariablesPrepared,\n  FontFace,\n  SiteVariablesInput,\n  SiteVariablesPrepared,\n  StaticStyle,\n  ThemeAnimation,\n  ThemeComponentStylesInput,\n  ThemeComponentStylesPrepared,\n  ThemeComponentVariablesInput,\n  ThemeComponentVariablesPrepared,\n  ThemeInput,\n  ThemePrepared,\n} from './types';\n\nimport { isEnabled as isDebugEnabled } from './debugEnabled';\nimport { deepmerge } from './deepmerge';\nimport { objectKeyToValues } from './objectKeysToValues';\nimport { toCompactArray } from './toCompactArray';\nimport { withDebugId } from './withDebugId';\n\nexport const emptyTheme: ThemePrepared = {\n  siteVariables: {\n    fontSizes: {},\n  },\n  componentVariables: {},\n  componentStyles: {},\n  fontFaces: [],\n  staticStyles: [],\n  animations: {},\n};\n\n// ----------------------------------------\n// Component level merge functions\n// ----------------------------------------\n\n/**\n * Merges a single component's styles (keyed by component part) with another component's styles.\n */\nexport const mergeComponentStyles__PROD: typeof mergeComponentStyles = (stylesA, stylesB) => {\n  const result = {};\n\n  if (stylesA) {\n    Object.keys(stylesA).forEach(partName => {\n      const slotA = stylesA[partName];\n      const slotB = stylesB?.[partName];\n\n      // if there is no source, merging is a no-op, skip it\n      if (typeof slotA === 'undefined' || slotA === null) {\n        return;\n      }\n\n      // no target means source doesn't need to merge onto anything\n      // just ensure source is callable (prepared format)\n      if (typeof slotB === 'undefined' || slotB === null) {\n        result[partName] = typeof slotA === 'function' ? slotA : () => slotA;\n        return;\n      }\n\n      if (slotA === slotB) {\n        result[partName] = typeof slotA === 'function' ? slotA : () => slotA;\n      }\n    });\n  }\n\n  if (stylesB) {\n    Object.keys(stylesB).forEach(partName => {\n      const slotA = stylesA?.[partName];\n      const slotB = stylesB[partName];\n\n      // if there is no source, merging is a no-op, skip it\n      if (typeof slotB === 'undefined' || slotB === null) {\n        return;\n      }\n\n      // no target means source doesn't need to merge onto anything\n      // just ensure source is callable (prepared format)\n      if (typeof slotA === 'undefined' || slotA === null) {\n        result[partName] = typeof slotB === 'function' ? slotB : () => slotB;\n        return;\n      }\n\n      if (slotA === slotB) {\n        return;\n      }\n\n      // We have both target and source, replace with merge fn\n      result[partName] = function mergedStyleFunction(styleParam) {\n        // originalTarget is always prepared, fn is guaranteed\n        return _.merge(\n          typeof slotA === 'function' ? slotA(styleParam) : slotA,\n          typeof slotB === 'function' ? slotB(styleParam) : slotB,\n        );\n      };\n    });\n  }\n\n  return result;\n};\n\nexport const mergeComponentStyles__DEV: typeof mergeComponentStyles = (stylesA, stylesB) => {\n  if (!isDebugEnabled) {\n    return mergeComponentStyles__PROD(stylesA, stylesB);\n  }\n\n  const mergedKeys = [...(stylesA ? Object.keys(stylesA) : []), ...(stylesB ? Object.keys(stylesB) : [])];\n  const result = {};\n\n  mergedKeys.forEach(slotName => {\n    const slotA = styleParam => {\n      const { _debug = undefined, ...styles } = callable(stylesA?.[slotName])(styleParam) || {};\n\n      // new object required to prevent circular JSON structure error in <Debug />\n      return {\n        ...styles,\n        _debug: _debug || [{ styles: { ...styles }, debugId: stylesA._debugId }],\n      };\n    };\n\n    const slotB = styleParam => {\n      const { _debug = undefined, ...styles } = callable(stylesB?.[slotName])(styleParam) || {};\n\n      // new object required to prevent circular JSON structure error in <Debug />\n      return {\n        ...styles,\n        _debug: _debug || [{ styles: { ...styles }, debugId: stylesB._debugId }],\n      };\n    };\n\n    if (stylesA?.[slotName] && stylesB?.[slotName]) {\n      // We have both, replace with merge fn\n      result[slotName] = styleParam => {\n        // slot* are always prepared, fn is guaranteed, _debug always exists\n        const { _debug: debugA, ...resolvedStylesA } = slotA(styleParam);\n        const { _debug: debugB, ...resolvedStylesB } = slotB(styleParam);\n\n        const merged = _.merge(resolvedStylesA, resolvedStylesB);\n\n        merged._debug = debugA.concat(debugB || { styles: resolvedStylesB, debugId: resolvedStylesB._debugId });\n\n        return merged;\n      };\n    } else if (stylesA?.[slotName]) {\n      result[slotName] = slotA;\n    } else if (stylesB?.[slotName]) {\n      result[slotName] = slotB;\n    }\n  });\n\n  return result;\n};\n\nexport const mergeComponentStyles: (\n  stylesA: ComponentSlotStylesInput | null | undefined,\n  stylesB: ComponentSlotStylesInput | null | undefined,\n) => ComponentSlotStylesPrepared =\n  process.env.NODE_ENV === 'production' ? mergeComponentStyles__PROD : mergeComponentStyles__DEV;\n\n/**\n * Merges a single component's variables with another component's variables.\n */\nexport const mergeComponentVariables__PROD = (...sources: ComponentVariablesInput[]): ComponentVariablesPrepared => {\n  const initial = () => ({});\n\n  // filtering is required as some arguments can be undefined\n  const filteredSources = sources.filter(Boolean);\n\n  // a short circle to avoid calls of deepmerge()\n  if (filteredSources.length === 1) {\n    return typeof filteredSources[0] === 'function' ? filteredSources[0] : callable(filteredSources[0]);\n  }\n\n  return filteredSources.reduce<ComponentVariablesPrepared>((acc, next) => {\n    return function mergeComponentVariables(...args) {\n      const accumulatedVariables = acc(...args);\n      const fn = typeof next === 'function' ? next : callable(next);\n      const computedComponentVariables = fn(...args);\n\n      return deepmerge(accumulatedVariables, computedComponentVariables);\n    };\n  }, initial);\n};\n\nexport const mergeComponentVariables__DEV = (...sources: ComponentVariablesInput[]): ComponentVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeComponentVariables__PROD(...sources);\n  }\n  const initial = () => ({});\n\n  return sources.reduce<ComponentVariablesPrepared>((acc, next) => {\n    return siteVariables => {\n      const { _debug = [], ...accumulatedVariables } = acc(siteVariables);\n      const { _debug: computedDebug = undefined, _debugId = undefined, ...computedComponentVariables } =\n        callable(next)(siteVariables) || {};\n\n      const merged = deepmerge(accumulatedVariables, computedComponentVariables);\n\n      merged._debug = _debug.concat(\n        computedDebug || {\n          resolved: computedComponentVariables,\n          debugId: _debugId,\n          input: siteVariables\n            ? siteVariables._invertedKeys && callable(next)(siteVariables._invertedKeys)\n            : callable(next)(),\n        },\n      );\n      return merged;\n    };\n  }, initial);\n};\n\nexport const mergeComponentVariables =\n  process.env.NODE_ENV === 'production' ? mergeComponentVariables__PROD : mergeComponentVariables__DEV;\n\n// ----------------------------------------\n// Theme level merge functions\n// ----------------------------------------\n\n/**\n * Site variables can safely be merged at each Provider in the tree.\n * They are flat objects and do not depend on render-time values, such as props.\n */\nexport const mergeSiteVariables__PROD = (\n  ...sources: (SiteVariablesInput | null | undefined)[]\n): SiteVariablesPrepared => {\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n  return deepmerge(initial, ...sources);\n};\n\nexport const mergeSiteVariables__DEV = (\n  ...sources: (SiteVariablesInput | null | undefined)[]\n): SiteVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeSiteVariables__PROD(...sources);\n  }\n\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n\n  return sources.reduce<SiteVariablesPrepared>((acc, next) => {\n    const { _debug = [], ...accumulatedSiteVariables } = acc;\n    const { _debug: computedDebug = undefined, _invertedKeys = undefined, _debugId = undefined, ...nextSiteVariables } =\n      next || {};\n\n    const merged = deepmerge({ ...accumulatedSiteVariables, _invertedKeys: undefined }, nextSiteVariables);\n    merged._debug = _debug.concat(computedDebug || { resolved: nextSiteVariables, debugId: _debugId });\n    merged._invertedKeys = _invertedKeys || objectKeyToValues(merged, key => `siteVariables.${key}`);\n    return merged;\n  }, initial);\n};\n\nexport const mergeSiteVariables =\n  process.env.NODE_ENV === 'production' ? mergeSiteVariables__PROD : mergeSiteVariables__DEV;\n\n/**\n * Component variables can be objects, functions, or an array of these.\n * The functions must be called with the final result of siteVariables, otherwise\n *   the component variable objects would have no ability to apply siteVariables.\n * Therefore, componentVariables must be resolved by the component at render time.\n * We instead pass down call stack of component variable functions to be resolved later.\n */\n\nexport const mergeThemeVariables__PROD = (\n  ...sources: (ThemeComponentVariablesInput | null | undefined)[]\n): ThemeComponentVariablesPrepared => {\n  const displayNames = _.union(..._.map(sources, _.keys));\n  return displayNames.reduce((componentVariables, displayName) => {\n    componentVariables[displayName] = mergeComponentVariables(..._.map(sources, displayName));\n    return componentVariables;\n  }, {});\n};\n\nexport const mergeThemeVariables__DEV = (\n  ...sources: (ThemeComponentVariablesInput | null | undefined)[]\n): ThemeComponentVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeThemeVariables__PROD(...sources);\n  }\n\n  const displayNames = _.union(..._.map(sources, _.keys));\n  return displayNames.reduce((componentVariables, displayName) => {\n    componentVariables[displayName] = mergeComponentVariables(\n      ..._.map(sources, source => source && withDebugId(source[displayName], source._debugId)),\n    );\n    return componentVariables;\n  }, {});\n};\n\nexport const mergeThemeVariables =\n  process.env.NODE_ENV === 'production' ? mergeThemeVariables__PROD : mergeThemeVariables__DEV;\n\n/**\n * See mergeThemeVariables() description.\n * Component styles adhere to the same pattern as component variables, except\n *   that they return style objects.\n */\nexport const mergeThemeStyles = (\n  ...sources: (ThemeComponentStylesInput | null | undefined)[]\n): ThemeComponentStylesPrepared => {\n  const initial: ThemeComponentStylesPrepared = {};\n\n  return sources.reduce<ThemeComponentStylesPrepared>((themeComponentStyles, next) => {\n    _.forEach(next, (stylesByPart, displayName) => {\n      themeComponentStyles[displayName] = mergeComponentStyles(\n        themeComponentStyles[displayName],\n        withDebugId(stylesByPart, (next as ThemeComponentStylesPrepared & { _debugId: string })._debugId),\n      );\n    });\n\n    return themeComponentStyles;\n  }, initial);\n};\n\nexport const mergeFontFaces = (...sources: FontFace[]) => {\n  return toCompactArray<FontFace>(...sources);\n};\n\nexport const mergeStaticStyles = (...sources: StaticStyle[]) => {\n  return toCompactArray<StaticStyle>(...sources);\n};\n\nexport const mergeAnimations = (...sources: { [key: string]: ThemeAnimation }[]): { [key: string]: ThemeAnimation } => {\n  return Object.assign({}, ...sources);\n};\n\nexport const mergeStyles = (...sources: ComponentSlotStyle[]) => {\n  return (...args) => {\n    return sources.reduce((acc, next) => {\n      return _.merge(acc, callable(next)(...args));\n    }, {});\n  };\n};\n\nexport const mergeThemes = (...themes: ThemeInput[]): ThemePrepared => {\n  return themes.reduce<ThemePrepared>(\n    (acc: ThemePrepared, next: ThemeInput) => {\n      if (!next) return acc;\n      const nextDebugId = next['_debugId'];\n\n      acc.siteVariables = mergeSiteVariables(acc.siteVariables, withDebugId(next.siteVariables, nextDebugId));\n\n      acc.componentVariables = mergeThemeVariables(\n        acc.componentVariables,\n        withDebugId(next.componentVariables, nextDebugId),\n      );\n\n      acc.componentStyles = mergeThemeStyles(acc.componentStyles, withDebugId(next.componentStyles, nextDebugId));\n\n      acc.fontFaces = mergeFontFaces(...acc.fontFaces, ...(next.fontFaces || []));\n\n      acc.staticStyles = mergeStaticStyles(...acc.staticStyles, ...(next.staticStyles || []));\n\n      acc.animations = mergeAnimations(acc.animations, next.animations);\n\n      return acc;\n    },\n    // .reduce() will modify \"emptyTheme\" object, so we should clone it before actual usage\n    { ...emptyTheme },\n  );\n};\n"],"file":"mergeThemes.js"}