"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_component_nesting_registry_1 = require("@fluentui/react-component-nesting-registry");
var enzyme_1 = require("enzyme");
var React = require("react");
describe('NestingAuto', function () {
    describe('children', function () {
        it('renders components based on present context', function () {
            var wrapper = enzyme_1.mount(React.createElement(react_component_nesting_registry_1.Unstable_NestingAuto, null, function () { return React.createElement(react_component_nesting_registry_1.Unstable_NestingAuto, null, function () { return React.createElement("div", null); }); }));
            expect(wrapper.childAt(0).is('NestingRoot')).toBe(true);
            // <NestingAuto /> => <NestingRoot /> => <NestingAuto /> => <NestingChild />
            expect(wrapper.childAt(0).childAt(0).childAt(0).is('NestingChild')).toBe(true);
        });
        it('is a render function', function () {
            var children = jest.fn().mockImplementation(function (_, ref) { return React.createElement("div", { ref: ref }); });
            enzyme_1.mount(React.createElement(react_component_nesting_registry_1.Unstable_NestingAuto, null, children));
            var getRefs = children.mock.calls[0][0];
            expect(children).toBeCalledWith(expect.any(Function), expect.objectContaining({ current: expect.objectContaining({ tagName: 'DIV' }) }));
            expect(getRefs()).toEqual(expect.arrayContaining([
                expect.objectContaining({
                    current: expect.objectContaining({ tagName: 'DIV' }),
                }),
            ]));
        });
    });
});
