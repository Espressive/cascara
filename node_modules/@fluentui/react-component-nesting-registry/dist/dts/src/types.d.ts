import * as React from 'react';
export declare type GetContextRefs = (needleRef: NodeRef) => NodeRef[];
export declare type GetRefs = () => NodeRef[];
export declare type NodeRef<T extends Node = Node> = React.MutableRefObject<T>;
export declare type NestingContextValue = {
    getContextRefs: GetContextRefs;
    register: (ref: NodeRef) => void;
    unregister: (ref: NodeRef) => void;
};
export interface NestedContextProps {
    value: NestingContextValue;
}
export interface NestingProps {
    children: (getRefs: GetRefs, ref: NodeRef) => React.ReactElement<any>;
}
