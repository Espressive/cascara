{"version":3,"sources":["components/Dropdown/DropdownItem.tsx"],"names":["dropdownItemClassName","dropdownItemSlotClassNames","main","content","header","image","checkableIndicator","DropdownItem","props","context","displayName","telemetry","setStart","setEnd","active","accessibilityItemProps","className","design","isFromKeyboard","styles","checkable","selected","variables","mapPropsToStyles","hasContent","hasHeader","mapPropsToInlineStyles","rtl","classes","resolvedStyles","ElementType","unhandledProps","handledProps","handleClick","e","contentElement","Box","create","defaultProps","headerElement","endMediaElement","accessibility","indicatorBehavior","imageElement","Image","avatar","media","element","root","as","propTypes","commonPropTypes","createCommon","children","PropTypes","object","bool","customPropTypes","itemShorthand","shorthandAllowingChildren","disabled","itemShorthandWithoutJSX","onClick","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport { indicatorBehavior } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport cx from 'classnames';\n\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport { ShorthandValue, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport { Image, ImageProps } from '../Image/Image';\nimport { Box, BoxProps } from '../Box/Box';\n\nexport interface DropdownItemSlotClassNames {\n  content: string;\n  header: string;\n  image: string;\n  checkableIndicator: string;\n  main: string;\n}\n\nexport interface DropdownItemProps extends UIComponentProps<DropdownItemProps> {\n  /** A dropdown item can be active. */\n  active?: boolean;\n\n  /** Item's accessibility props. */\n  accessibilityItemProps?: any;\n\n  /** Item's content. */\n  content?: ShorthandValue<BoxProps>;\n\n  /** Item can show check indicator if selected. */\n  checkable?: boolean;\n\n  /** A slot for a checkable indicator. */\n  checkableIndicator?: ShorthandValue<BoxProps>;\n\n  /** A dropdown item can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** Item's header. */\n  header?: ShorthandValue<BoxProps>;\n\n  /** Item's image. */\n  image?: ShorthandValue<ImageProps>;\n\n  /** Indicated whether the item has been set active by keyboard. */\n  isFromKeyboard?: boolean;\n\n  /**\n   * Called on dropdown item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onClick?: ComponentEventHandler<DropdownItemProps>;\n\n  /** A dropdown item can be selected if single selection Dropdown is used. */\n  selected?: boolean;\n}\n\nexport const dropdownItemClassName = 'ui-dropdown__item';\nexport const dropdownItemSlotClassNames: DropdownItemSlotClassNames = {\n  main: `${dropdownItemClassName}__main`,\n  content: `${dropdownItemClassName}__content`,\n  header: `${dropdownItemClassName}__header`,\n  image: `${dropdownItemClassName}__image`,\n  checkableIndicator: `${dropdownItemClassName}__checkable-indicator`,\n};\n\n/**\n * A DropdownItem represents an option of Dropdown list.\n * Displays an item with optional rich media metadata.\n */\nexport const DropdownItem: ComponentWithAs<'li', DropdownItemProps> &\n  FluentComponentStaticProps<DropdownItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DropdownItem.displayName, context.telemetry);\n\n  setStart();\n\n  const {\n    active,\n    accessibilityItemProps,\n    className,\n    content,\n    design,\n    header,\n    image,\n    isFromKeyboard,\n    styles,\n    checkable,\n    checkableIndicator,\n    selected,\n    variables,\n  } = props;\n\n  const { classes, styles: resolvedStyles } = useStyles(DropdownItem.displayName, {\n    className: dropdownItemClassName,\n    mapPropsToStyles: () => ({\n      active,\n      isFromKeyboard,\n      selected,\n      hasContent: !!content,\n      hasHeader: !!header,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DropdownItem.handledProps, props);\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const contentElement = Box.create(content, {\n    defaultProps: () => ({\n      className: dropdownItemSlotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n  const headerElement = Box.create(header, {\n    defaultProps: () => ({\n      className: dropdownItemSlotClassNames.header,\n      styles: resolvedStyles.header,\n    }),\n  });\n  const endMediaElement =\n    selected && checkable\n      ? Box.create(checkableIndicator, {\n          defaultProps: () => ({\n            className: dropdownItemSlotClassNames.checkableIndicator,\n            styles: resolvedStyles.checkableIndicator,\n            accessibility: indicatorBehavior,\n          }),\n        })\n      : null;\n  const imageElement = Box.create(\n    Image.create(image, {\n      defaultProps: () => ({\n        avatar: true,\n        className: dropdownItemSlotClassNames.image,\n        styles: resolvedStyles.image,\n      }),\n    }),\n    {\n      defaultProps: () => ({\n        className: dropdownItemSlotClassNames.image,\n        styles: resolvedStyles.media,\n      }),\n    },\n  );\n\n  const element = (\n    <ElementType className={classes.root} onClick={handleClick} {...accessibilityItemProps} {...unhandledProps}>\n      {imageElement}\n\n      <div className={cx(dropdownItemSlotClassNames.main, classes.main)}>\n        {headerElement}\n        {contentElement}\n      </div>\n\n      {endMediaElement}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nDropdownItem.displayName = 'DropdownItem';\n\nDropdownItem.defaultProps = {\n  as: 'li',\n  checkableIndicator: {},\n};\n\nDropdownItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  accessibilityItemProps: PropTypes.object,\n  active: PropTypes.bool,\n  content: customPropTypes.itemShorthand,\n  checkable: PropTypes.bool,\n  checkableIndicator: customPropTypes.shorthandAllowingChildren,\n  disabled: PropTypes.bool,\n  header: customPropTypes.itemShorthand,\n  image: customPropTypes.itemShorthandWithoutJSX,\n  onClick: PropTypes.func,\n  isFromKeyboard: PropTypes.bool,\n  selected: PropTypes.bool,\n};\nDropdownItem.handledProps = Object.keys(DropdownItem.propTypes) as any;\n\nDropdownItem.create = createShorthandFactory({ Component: DropdownItem, mappedProp: 'header' });\n"],"file":"DropdownItem.js"}