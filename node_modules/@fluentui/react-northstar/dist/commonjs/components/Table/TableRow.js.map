{"version":3,"sources":["components/Table/TableRow.tsx"],"names":["tableRowClassName","TableRow","props","context","displayName","telemetry","setStart","setEnd","rowRef","React","useRef","className","design","styles","items","header","compact","children","accessibility","variables","selected","hasChildren","ElementType","unhandledProps","handledProps","getA11yProps","debugName","actionHandlers","unsetRowTabbable","e","current","setAttribute","performClick","currentTarget","target","preventDefault","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","renderCells","item","TableCell","create","defaultProps","overrideProps","predefinedProps","element","unstable_wrapWithFocusZone","root","propTypes","commonPropTypes","createCommon","content","customPropTypes","collectionShorthand","PropTypes","bool","Object","keys","tableRowBehavior","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import { Accessibility, tableRowBehavior, GridRowBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  mergeVariablesOverrides,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useFluentContext,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\n\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { FluentComponentStaticProps, ShorthandCollection } from '../../types';\nimport { childrenExist, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\nimport { TableCell, TableCellProps } from './TableCell';\n\nexport interface TableRowProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * */\n  accessibility?: Accessibility<GridRowBehaviorProps>;\n\n  /**\n   * Row cells\n   */\n  items?: ShorthandCollection<TableCellProps>;\n\n  /**\n   * Is the row a table header\n   */\n  header?: boolean;\n\n  /**\n   * Render table in compact mode\n   */\n  compact?: boolean;\n\n  /**\n   * Whether a row is currently selected or not.\n   */\n  selected?: boolean;\n}\n\nexport const tableRowClassName = 'ui-table__row';\n\nexport type TableRowStylesProps = Pick<TableRowProps, 'header' | 'compact'>;\n\n/**\n * Component represents a single row in a tabular structure\n */\nexport const TableRow: ComponentWithAs<'div', TableRowProps> & FluentComponentStaticProps<TableRowProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TableRow.displayName, context.telemetry);\n  setStart();\n  const rowRef = React.useRef<HTMLElement>();\n  const { className, design, styles, items, header, compact, children, accessibility, variables, selected } = props;\n\n  const hasChildren = childrenExist(children);\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TableRow.handledProps, props);\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: TableRow.displayName,\n    actionHandlers: {\n      // https://github.com/microsoft/fluent-ui-react/issues/2150\n      unsetRowTabbable: e => {\n        rowRef.current.setAttribute('tabindex', '-1');\n      },\n      performClick: e => {\n        if (e.currentTarget === e.target) {\n          _.invoke(props, 'onClick', e, props);\n          e.preventDefault();\n        }\n      },\n    },\n    mapPropsToBehavior: () => ({\n      selected,\n      header,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TableRowStylesProps>(TableRow.displayName, {\n    className: tableRowClassName,\n    mapPropsToStyles: () => ({\n      header,\n      compact,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const renderCells = () => {\n    return _.map(items, (item: TableCellProps) => {\n      return TableCell.create(item, {\n        defaultProps: () => getA11yProps('cell', {}),\n        overrideProps: predefinedProps => ({\n          variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n        }),\n      });\n    });\n  };\n\n  const element = (\n    <Ref innerRef={rowRef}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            ...unhandledProps,\n          })}\n        >\n          {hasChildren && children}\n          {!hasChildren && renderCells()}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n  return element;\n};\n\nTableRow.displayName = 'TableRow';\n\nTableRow.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  items: customPropTypes.collectionShorthand,\n  header: PropTypes.bool,\n  compact: PropTypes.bool,\n  selected: PropTypes.bool,\n};\n\nTableRow.handledProps = Object.keys(TableRow.propTypes) as any;\n\nTableRow.defaultProps = {\n  accessibility: tableRowBehavior,\n};\n\nTableRow.create = createShorthandFactory({ Component: TableRow, mappedArrayProp: 'items' });\n"],"file":"TableRow.js"}