{"version":3,"sources":["components/Card/CardPreview.tsx"],"names":["cardPreviewClassName","CardPreview","props","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","horizontal","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","PropTypes","bool","Object","keys","create","Component"],"mappings":";;;;;;;AACA;;AASA;;AACA;;AAGA;;AAgBO,IAAMA,oBAAoB,GAAG,kBAA7B;AAEP;AACA;AACA;;;;AACO,IAAMC,WACiC,GAAG,SADpCA,WACoC,CAAAC,KAAK,EAAI;AACxD,MAAMC,OAAO,GAAG,sCAAhB;;AADwD,sBAE3B,iCAAaF,WAAW,CAACG,WAAzB,EAAsCD,OAAO,CAACE,SAA9C,CAF2B;AAAA,MAEhDC,QAFgD,iBAEhDA,QAFgD;AAAA,MAEtCC,MAFsC,iBAEtCA,MAFsC;;AAGxDD,EAAAA,QAAQ;AAHgD,MAKhDE,SALgD,GAKuBN,KALvB,CAKhDM,SALgD;AAAA,MAKrCC,MALqC,GAKuBP,KALvB,CAKrCO,MALqC;AAAA,MAK7BC,MAL6B,GAKuBR,KALvB,CAK7BQ,MAL6B;AAAA,MAKrBC,SALqB,GAKuBT,KALvB,CAKrBS,SALqB;AAAA,MAKVC,QALU,GAKuBV,KALvB,CAKVU,QALU;AAAA,MAKAC,UALA,GAKuBX,KALvB,CAKAW,UALA;AAAA,MAKYC,MALZ,GAKuBZ,KALvB,CAKYY,MALZ;AAMxD,MAAMC,WAAW,GAAG,mCAAeb,KAAf,CAApB;AACA,MAAMc,cAAc,GAAG,sCAAkBf,WAAW,CAACgB,YAA9B,EAA4Cf,KAA5C,CAAvB;AACA,MAAMgB,YAAY,GAAG,qCAAiBhB,KAAK,CAACiB,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAEnB,WAAW,CAACG,WADkC;AAEzDiB,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AAF4C,GAAtC,CAArB;;AARwD,mBAapC,8BAAkCpB,WAAW,CAACG,WAA9C,EAA2D;AAC7EI,IAAAA,SAAS,EAAER,oBADkE;AAE7EsB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAET,QAAAA,UAAU,EAAVA,UAAF;AAAcC,QAAAA,MAAM,EAANA;AAAd,OAAP;AAAA,KAF2D;AAG7ES,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7Bf,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAHqD;AAS7EU,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AATgE,GAA3D,CAboC;AAAA,MAahDG,OAbgD,cAahDA,OAbgD;;AAyBxD,MAAMC,OAAO,gBACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdV,IAAAA,SAAS,EAAEgB,OAAO,CAACE;AADL,KAEXV,cAFW,EADlB,EAMGJ,QANH,CADF;AAUAL,EAAAA,MAAM;AACN,SAAOkB,OAAP;AACD,CAtCM;;;AAwCPxB,WAAW,CAACG,WAAZ,GAA0B,aAA1B;AAEAH,WAAW,CAAC0B,SAAZ,qBACKC,uBAAgBC,YAAhB,EADL;AAEEhB,EAAAA,UAAU,EAAEiB,SAAS,CAACC,IAFxB;AAGEjB,EAAAA,MAAM,EAAEgB,SAAS,CAACC;AAHpB;AAMA9B,WAAW,CAACgB,YAAZ,GAA2Be,MAAM,CAACC,IAAP,CAAYhC,WAAW,CAAC0B,SAAxB,CAA3B;AAEA1B,WAAW,CAACiC,MAAZ,GAAqB,mCAAuB;AAAEC,EAAAA,SAAS,EAAElC;AAAb,CAAvB,CAArB","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardPreviewProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** If preview is in horizontal card. */\n  horizontal?: boolean;\n\n  /** A preview can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardPreviewStylesProps = Pick<CardPreviewProps, 'horizontal' | 'fitted'>;\nexport const cardPreviewClassName = 'ui-card__preview';\n\n/**\n * A CardPreview is used to display data Card preview.\n */\nexport const CardPreview: ComponentWithAs<'div', CardPreviewProps> &\n  FluentComponentStaticProps<CardPreviewProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardPreview.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, horizontal, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardPreview.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardPreview.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardPreviewStylesProps>(CardPreview.displayName, {\n    className: cardPreviewClassName,\n    mapPropsToStyles: () => ({ horizontal, fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardPreview.displayName = 'CardPreview';\n\nCardPreview.propTypes = {\n  ...commonPropTypes.createCommon(),\n  horizontal: PropTypes.bool,\n  fitted: PropTypes.bool,\n};\n\nCardPreview.handledProps = Object.keys(CardPreview.propTypes) as any;\n\nCardPreview.create = createShorthandFactory({ Component: CardPreview });\n"],"file":"CardPreview.js"}