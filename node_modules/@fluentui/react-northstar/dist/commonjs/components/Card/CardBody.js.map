{"version":3,"sources":["components/Card/CardBody.tsx"],"names":["cardBodyClassName","CardBody","props","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","PropTypes","bool","Object","keys","create","Component"],"mappings":";;;;;;;AAAA;;AAGA;;AACA;;AASA;;AAaO,IAAMA,iBAAiB,GAAG,eAA1B;AAEP;AACA;AACA;;;;AACO,IAAMC,QAA2F,GAAG,SAA9FA,QAA8F,CAAAC,KAAK,EAAI;AAClH,MAAMC,OAAO,GAAG,sCAAhB;;AADkH,sBAErF,iCAAaF,QAAQ,CAACG,WAAtB,EAAmCD,OAAO,CAACE,SAA3C,CAFqF;AAAA,MAE1GC,QAF0G,iBAE1GA,QAF0G;AAAA,MAEhGC,MAFgG,iBAEhGA,MAFgG;;AAGlHD,EAAAA,QAAQ;AAH0G,MAK1GE,SAL0G,GAK/CN,KAL+C,CAK1GM,SAL0G;AAAA,MAK/FC,MAL+F,GAK/CP,KAL+C,CAK/FO,MAL+F;AAAA,MAKvFC,MALuF,GAK/CR,KAL+C,CAKvFQ,MALuF;AAAA,MAK/EC,SAL+E,GAK/CT,KAL+C,CAK/ES,SAL+E;AAAA,MAKpEC,QALoE,GAK/CV,KAL+C,CAKpEU,QALoE;AAAA,MAK1DC,MAL0D,GAK/CX,KAL+C,CAK1DW,MAL0D;AAMlH,MAAMC,WAAW,GAAG,mCAAeZ,KAAf,CAApB;AACA,MAAMa,cAAc,GAAG,sCAAkBd,QAAQ,CAACe,YAA3B,EAAyCd,KAAzC,CAAvB;AACA,MAAMe,YAAY,GAAG,qCAAiBf,KAAK,CAACgB,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAElB,QAAQ,CAACG,WADqC;AAEzDgB,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAF4C,GAAtC,CAArB;;AARkH,mBAa9F,8BAA+BnB,QAAQ,CAACG,WAAxC,EAAqD;AACvEI,IAAAA,SAAS,EAAER,iBAD4D;AAEvEqB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAER,QAAAA,MAAM,EAANA;AAAF,OAAP;AAAA,KAFqD;AAGvES,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7Bd,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAH+C;AASvES,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAT0D,GAArD,CAb8F;AAAA,MAa1GG,OAb0G,cAa1GA,OAb0G;;AAyBlH,MAAMC,OAAO,gBACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdT,IAAAA,SAAS,EAAEe,OAAO,CAACE;AADL,KAEXV,cAFW,EADlB,EAMGH,QANH,CADF;AAUAL,EAAAA,MAAM;AACN,SAAOiB,OAAP;AACD,CArCM;;;AAuCPvB,QAAQ,CAACG,WAAT,GAAuB,UAAvB;AAEAH,QAAQ,CAACyB,SAAT,qBACKC,uBAAgBC,YAAhB,EADL;AAEEf,EAAAA,MAAM,EAAEgB,SAAS,CAACC;AAFpB;AAKA7B,QAAQ,CAACe,YAAT,GAAwBe,MAAM,CAACC,IAAP,CAAY/B,QAAQ,CAACyB,SAArB,CAAxB;AAEAzB,QAAQ,CAACgC,MAAT,GAAkB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEjC;AAAb,CAAvB,CAAlB","sourcesContent":["import * as React from 'react';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes, createShorthandFactory } from '../../utils';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  useStyles,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\n\nexport interface CardBodyProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A body can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardBodyStylesProps = Pick<CardBodyProps, 'fitted'>;\nexport const cardBodyClassName = 'ui-card__body';\n\n/**\n * A CardBody is used to display data in Card body.\n */\nexport const CardBody: ComponentWithAs<'div', CardBodyProps> & FluentComponentStaticProps<CardBodyProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardBody.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardBody.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardBody.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardBodyStylesProps>(CardBody.displayName, {\n    className: cardBodyClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardBody.displayName = 'CardBody';\n\nCardBody.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardBody.handledProps = Object.keys(CardBody.propTypes) as any;\n\nCardBody.create = createShorthandFactory({ Component: CardBody });\n"],"file":"CardBody.js"}