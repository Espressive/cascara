{"version":3,"sources":["components/Card/CardHeader.tsx"],"names":["cardHeaderClassName","CardHeader","props","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","PropTypes","bool","Object","keys","create","Component"],"mappings":";;;;;;;AACA;;AASA;;AACA;;AAGA;;AAaO,IAAMA,mBAAmB,GAAG,iBAA5B;AAEP;AACA;AACA;;;;AACO,IAAMC,UACgC,GAAG,SADnCA,UACmC,CAAAC,KAAK,EAAI;AACvD,MAAMC,OAAO,GAAG,sCAAhB;;AADuD,sBAE1B,iCAAaF,UAAU,CAACG,WAAxB,EAAqCD,OAAO,CAACE,SAA7C,CAF0B;AAAA,MAE/CC,QAF+C,iBAE/CA,QAF+C;AAAA,MAErCC,MAFqC,iBAErCA,MAFqC;;AAGvDD,EAAAA,QAAQ;AAH+C,MAK/CE,SAL+C,GAKYN,KALZ,CAK/CM,SAL+C;AAAA,MAKpCC,MALoC,GAKYP,KALZ,CAKpCO,MALoC;AAAA,MAK5BC,MAL4B,GAKYR,KALZ,CAK5BQ,MAL4B;AAAA,MAKpBC,SALoB,GAKYT,KALZ,CAKpBS,SALoB;AAAA,MAKTC,QALS,GAKYV,KALZ,CAKTU,QALS;AAAA,MAKCC,MALD,GAKYX,KALZ,CAKCW,MALD;AAMvD,MAAMC,WAAW,GAAG,mCAAeZ,KAAf,CAApB;AACA,MAAMa,cAAc,GAAG,sCAAkBd,UAAU,CAACe,YAA7B,EAA2Cd,KAA3C,CAAvB;AACA,MAAMe,YAAY,GAAG,qCAAiBf,KAAK,CAACgB,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAElB,UAAU,CAACG,WADmC;AAEzDgB,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAF4C,GAAtC,CAArB;;AARuD,mBAanC,8BAAiCnB,UAAU,CAACG,WAA5C,EAAyD;AAC3EI,IAAAA,SAAS,EAAER,mBADgE;AAE3EqB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAER,QAAAA,MAAM,EAANA;AAAF,OAAP;AAAA,KAFyD;AAG3ES,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7Bd,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAHmD;AAS3ES,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAT8D,GAAzD,CAbmC;AAAA,MAa/CG,OAb+C,cAa/CA,OAb+C;;AAyBvD,MAAMC,OAAO,gBACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdT,IAAAA,SAAS,EAAEe,OAAO,CAACE;AADL,KAEXV,cAFW,EADlB,EAMGH,QANH,CADF;AAUAL,EAAAA,MAAM;AACN,SAAOiB,OAAP;AACD,CAtCM;;;AAwCPvB,UAAU,CAACG,WAAX,GAAyB,YAAzB;AAEAH,UAAU,CAACyB,SAAX,qBACKC,uBAAgBC,YAAhB,EADL;AAEEf,EAAAA,MAAM,EAAEgB,SAAS,CAACC;AAFpB;AAKA7B,UAAU,CAACe,YAAX,GAA0Be,MAAM,CAACC,IAAP,CAAY/B,UAAU,CAACyB,SAAvB,CAA1B;AAEAzB,UAAU,CAACgC,MAAX,GAAoB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEjC;AAAb,CAAvB,CAApB","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardHeaderProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A footer can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardHeaderStylesProps = Pick<CardHeaderProps, 'fitted'>;\nexport const cardHeaderClassName = 'ui-card__header';\n\n/**\n * A CardHeader is used to display data in Card header.\n */\nexport const CardHeader: ComponentWithAs<'div', CardHeaderProps> &\n  FluentComponentStaticProps<CardHeaderProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardHeader.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardHeader.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardHeader.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardHeaderStylesProps>(CardHeader.displayName, {\n    className: cardHeaderClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardHeader.displayName = 'CardHeader';\n\nCardHeader.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardHeader.handledProps = Object.keys(CardHeader.propTypes) as any;\n\nCardHeader.create = createShorthandFactory({ Component: CardHeader });\n"],"file":"CardHeader.js"}