"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.CardHeader = exports.cardHeaderClassName = void 0;

var _reactBindings = require("@fluentui/react-bindings");

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var cardHeaderClassName = 'ui-card__header';
/**
 * A CardHeader is used to display data in Card header.
 */

exports.cardHeaderClassName = cardHeaderClassName;

var CardHeader = function CardHeader(props) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(CardHeader.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var className = props.className,
      design = props.design,
      styles = props.styles,
      variables = props.variables,
      children = props.children,
      fitted = props.fitted;
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(CardHeader.handledProps, props);
  var getA11yProps = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: CardHeader.displayName,
    rtl: context.rtl
  });

  var _useStyles = (0, _reactBindings.useStyles)(CardHeader.displayName, {
    className: cardHeaderClassName,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        fitted: fitted
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({
    className: classes.root
  }, unhandledProps)), children);
  setEnd();
  return element;
};

exports.CardHeader = CardHeader;
CardHeader.displayName = 'CardHeader';
CardHeader.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon(), {
  fitted: PropTypes.bool
});
CardHeader.handledProps = Object.keys(CardHeader.propTypes);
CardHeader.create = (0, _utils.createShorthandFactory)({
  Component: CardHeader
});
//# sourceMappingURL=CardHeader.js.map
