{"version":3,"sources":["components/Pill/PillImage.tsx"],"names":["pillImageClassName","PillImage","props","context","displayName","telemetry","setStart","setEnd","accessibility","className","design","styles","variables","size","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","result","root","defaultProps","pillImageBehavior","as","propTypes","commonPropTypes","createCommon","children","content","Object","keys","shorthandConfig","mappedProp","allowsJSX"],"mappings":";;;;;;;AAAA;;AACA;;AASA;;AAEA;;AAkBO,IAAMA,kBAAkB,GAAG,gBAA3B;AAEP;AACA;AACA;;;;AACO,IAAMC,SAA8F,GAAG,SAAjGA,SAAiG,CAAAC,KAAK,EAAI;AACrH,MAAMC,OAAO,GAAG,sCAAhB;;AADqH,sBAGxF,iCAAaF,SAAS,CAACG,WAAvB,EAAoCD,OAAO,CAACE,SAA5C,CAHwF;AAAA,MAG7GC,QAH6G,iBAG7GA,QAH6G;AAAA,MAGnGC,MAHmG,iBAGnGA,MAHmG;;AAKrHD,EAAAA,QAAQ;AAL6G,MAO7GE,aAP6G,GAO/CN,KAP+C,CAO7GM,aAP6G;AAAA,MAO9FC,SAP8F,GAO/CP,KAP+C,CAO9FO,SAP8F;AAAA,MAOnFC,MAPmF,GAO/CR,KAP+C,CAOnFQ,MAPmF;AAAA,MAO3EC,MAP2E,GAO/CT,KAP+C,CAO3ES,MAP2E;AAAA,MAOnEC,SAPmE,GAO/CV,KAP+C,CAOnEU,SAPmE;AAAA,MAOxDC,IAPwD,GAO/CX,KAP+C,CAOxDW,IAPwD;AASrH,MAAMC,WAAW,GAAG,qCAAiBN,aAAjB,EAAgC;AAClDO,IAAAA,SAAS,EAAEd,SAAS,CAACG,WAD6B;AAElDY,IAAAA,GAAG,EAAEb,OAAO,CAACa;AAFqC,GAAhC,CAApB;;AATqH,mBAcjG,8BAAgCf,SAAS,CAACG,WAA1C,EAAuD;AACzEK,IAAAA,SAAS,EAAET,kBAD8D;AAEzEiB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBJ,QAAAA,IAAI,EAAJA;AADuB,OAAP;AAAA,KAFuD;AAKzEK,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BT,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KALiD;AAWzEI,IAAAA,GAAG,EAAEb,OAAO,CAACa;AAX4D,GAAvD,CAdiG;AAAA,MAc7GG,OAd6G,cAc7GA,OAd6G;;AA4BrH,MAAMC,WAAW,GAAG,mCAAelB,KAAf,CAApB;AACA,MAAMmB,cAAc,GAAG,sCAAkBpB,SAAS,CAACqB,YAA5B,EAA0CpB,KAA1C,CAAvB;AAEA,MAAMqB,MAAM,gBAAG,oBAAC,WAAD,EAAiBT,WAAW,CAAC,MAAD;AAAWL,IAAAA,SAAS,EAAEU,OAAO,CAACK;AAA9B,KAAuCH,cAAvC,EAA5B,CAAf;AAEAd,EAAAA,MAAM;AAEN,SAAOgB,MAAP;AACD,CApCM;;;AAsCPtB,SAAS,CAACG,WAAV,GAAwB,WAAxB;AAEAH,SAAS,CAACwB,YAAV,GAAyB;AACvBjB,EAAAA,aAAa,EAAEkB,gCADQ;AAEvBC,EAAAA,EAAE,EAAE;AAFmB,CAAzB;AAKA1B,SAAS,CAAC2B,SAAV,qBACKC,uBAAgBC,YAAhB,CAA6B;AAC9BC,EAAAA,QAAQ,EAAE,KADoB;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAA7B,CADL;AAOA/B,SAAS,CAACqB,YAAV,GAAyBW,MAAM,CAACC,IAAP,CAAYjC,SAAS,CAAC2B,SAAtB,CAAzB;AAEA3B,SAAS,CAACkC,eAAV,GAA4B;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,SAAS,EAAE;AAFe,CAA5B","sourcesContent":["import { Accessibility, pillImageBehavior } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport * as React from 'react';\n\nimport { UIComponentProps, commonPropTypes, SizeValue } from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface PillImageProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * A PillImage can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n\n  /** PillImage source URL. */\n  src?: string;\n}\n\nexport type PillImageStylesProps = Required<Pick<PillImageProps, 'size'>>;\n\nexport const pillImageClassName = 'ui-pill__image';\n\n/**\n * An PillImage is a graphic representation used by Pill.\n */\nexport const PillImage: ComponentWithAs<'img', PillImageProps> & FluentComponentStaticProps<PillImageProps> = props => {\n  const context = useFluentContext();\n\n  const { setStart, setEnd } = useTelemetry(PillImage.displayName, context.telemetry);\n\n  setStart();\n\n  const { accessibility, className, design, styles, variables, size } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: PillImage.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillImageStylesProps>(PillImage.displayName, {\n    className: pillImageClassName,\n    mapPropsToStyles: () => ({\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PillImage.handledProps, props);\n\n  const result = <ElementType {...getA11Props('root', { className: classes.root, ...unhandledProps })} />;\n\n  setEnd();\n\n  return result;\n};\n\nPillImage.displayName = 'PillImage';\n\nPillImage.defaultProps = {\n  accessibility: pillImageBehavior,\n  as: 'img',\n};\n\nPillImage.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n};\n\nPillImage.handledProps = Object.keys(PillImage.propTypes) as any;\n\nPillImage.shorthandConfig = {\n  mappedProp: 'src',\n  allowsJSX: false,\n};\n"],"file":"PillImage.js"}