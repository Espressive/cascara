{"version":3,"sources":["components/Pill/PillAction.tsx"],"names":["pillActionClassName","PillAction","props","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","styles","variables","size","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","Object","keys","defaultProps","pillActionBehavior","shorthandConfig","mappedProp"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AASA;;AAUA;;AAeO,IAAMA,mBAAmB,GAAG,iBAA5B;AAEP;AACA;AACA;;;;AACO,IAAMC,UACgC,GAAG,SADnCA,UACmC,CAAAC,KAAK,EAAI;AACvD,MAAMC,OAAO,GAAG,sCAAhB;;AADuD,sBAE1B,iCAAaF,UAAU,CAACG,WAAxB,EAAqCD,OAAO,CAACE,SAA7C,CAF0B;AAAA,MAE/CC,QAF+C,iBAE/CA,QAF+C;AAAA,MAErCC,MAFqC,iBAErCA,MAFqC;;AAGvDD,EAAAA,QAAQ;AAH+C,MAK/CE,aAL+C,GAKkCN,KALlC,CAK/CM,aAL+C;AAAA,MAKhCC,QALgC,GAKkCP,KALlC,CAKhCO,QALgC;AAAA,MAKtBC,SALsB,GAKkCR,KALlC,CAKtBQ,SALsB;AAAA,MAKXC,OALW,GAKkCT,KALlC,CAKXS,OALW;AAAA,MAKFC,MALE,GAKkCV,KALlC,CAKFU,MALE;AAAA,MAKMC,MALN,GAKkCX,KALlC,CAKMW,MALN;AAAA,MAKcC,SALd,GAKkCZ,KALlC,CAKcY,SALd;AAAA,MAKyBC,IALzB,GAKkCb,KALlC,CAKyBa,IALzB;AAOvD,MAAMC,WAAW,GAAG,qCAAiBR,aAAjB,EAAgC;AAClDS,IAAAA,SAAS,EAAEhB,UAAU,CAACG,WAD4B;AAElDc,IAAAA,GAAG,EAAEf,OAAO,CAACe;AAFqC,GAAhC,CAApB;;AAPuD,mBAYnC,8BAAiCjB,UAAU,CAACG,WAA5C,EAAyD;AAC3EM,IAAAA,SAAS,EAAEV,mBADgE;AAE3EmB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAEJ,QAAAA,IAAI,EAAJA;AAAF,OAAP;AAAA,KAFyD;AAG3EK,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAAEV,QAAAA,SAAS,EAATA,SAAF;AAAaE,QAAAA,MAAM,EAANA,MAAb;AAAqBC,QAAAA,MAAM,EAANA,MAArB;AAA6BC,QAAAA,SAAS,EAATA;AAA7B,OAAP;AAAA,KAHmD;AAI3EI,IAAAA,GAAG,EAAEf,OAAO,CAACe;AAJ8D,GAAzD,CAZmC;AAAA,MAY/CG,OAZ+C,cAY/CA,OAZ+C;;AAmBvD,MAAMC,WAAW,GAAG,mCAAepB,KAAf,CAApB;AACA,MAAMqB,cAAc,GAAG,sCAAkBtB,UAAU,CAACuB,YAA7B,EAA2CtB,KAA3C,CAAvB;AAEA,MAAMuB,OAAO,gBACX,oBAAC,WAAD,EACMT,WAAW,CAAC,MAAD;AACbN,IAAAA,SAAS,EAAEW,OAAO,CAACK;AADN,KAEVC,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAACpB,QAAD;AAAf,GAA/B,CAFU,EAGVc,cAHU,EADjB,EAOG,0BAAcd,QAAd,IAA0BA,QAA1B,GAAqCE,OAPxC,CADF;AAYAJ,EAAAA,MAAM;AAEN,SAAOkB,OAAP;AACD,CAtCM;;;AAwCPxB,UAAU,CAACG,WAAX,GAAyB,YAAzB;AAEAH,UAAU,CAAC6B,SAAX,qBACKC,uBAAgBC,YAAhB,EADL;AAIA/B,UAAU,CAACuB,YAAX,GAA0BS,MAAM,CAACC,IAAP,CAAYjC,UAAU,CAAC6B,SAAvB,CAA1B;AAEA7B,UAAU,CAACkC,YAAX,GAA0B;AACxB3B,EAAAA,aAAa,EAAE4B,iCADS;AAExBzB,EAAAA,OAAO,eAAE,oBAAC,8BAAD;AAFe,CAA1B;AAKAV,UAAU,CAACoC,eAAX,GAA6B;AAC3BC,EAAAA,UAAU,EAAE;AADe,CAA7B","sourcesContent":["import * as React from 'react';\nimport { Accessibility, pillActionBehavior, PillActionBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport { CloseIcon } from '@fluentui/react-icons-northstar';\n\nexport interface PillActionProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<PillActionBehaviorProps>;\n\n  /**\n   * A Pill can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n}\n\nexport type PillActionStylesProps = Required<Pick<PillActionProps, 'size'>>;\nexport const pillActionClassName = 'ui-pill__action';\n\n/**\n * A PillAction allows user to execute an action.\n */\nexport const PillAction: ComponentWithAs<'div', PillActionProps> &\n  FluentComponentStaticProps<PillActionProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PillAction.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, content, design, styles, variables, size } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: PillAction.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillActionStylesProps>(PillAction.displayName, {\n    className: pillActionClassName,\n    mapPropsToStyles: () => ({ size }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PillAction.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nPillAction.displayName = 'PillAction';\n\nPillAction.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nPillAction.handledProps = Object.keys(PillAction.propTypes) as any;\n\nPillAction.defaultProps = {\n  accessibility: pillActionBehavior,\n  content: <CloseIcon />,\n};\n\nPillAction.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"PillAction.js"}