"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.PillGroup = exports.pillGroupClassName = void 0;

var React = _interopRequireWildcard(require("react"));

var _accessibility = require("@fluentui/accessibility");

var _reactBindings = require("@fluentui/react-bindings");

var _utils = require("../../utils");

var _pillContext = require("./pillContext");

var pillGroupClassName = 'ui-pills';
/**
 * A PillGroup can be used as container for Pill.
 */

exports.pillGroupClassName = pillGroupClassName;

var PillGroup = function PillGroup(props) {
  var _getA11Props$unstable;

  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(PillGroup.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var accessibility = props.accessibility,
      children = props.children,
      className = props.className,
      design = props.design,
      styles = props.styles,
      variables = props.variables;
  var getA11Props = (0, _reactBindings.useAccessibility)(accessibility, {
    debugName: PillGroup.displayName,
    rtl: context.rtl
  });

  var _useStyles = (0, _reactBindings.useStyles)(PillGroup.displayName, {
    className: pillGroupClassName,
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(PillGroup.handledProps, props);
  var pillBehavior = (_getA11Props$unstable = getA11Props.unstable_behaviorDefinition().childBehaviors) == null ? void 0 : _getA11Props$unstable.pill;
  var childProps = React.useMemo(function () {
    return {
      pillBehavior: pillBehavior
    };
  }, [pillBehavior]);
  var element = getA11Props.unstable_wrapWithFocusZone( /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
    className: classes.root
  }, _utils.rtlTextContainer.getAttributes({
    forElements: [children]
  }), unhandledProps)), /*#__PURE__*/React.createElement(_pillContext.PillsContextProvider, {
    value: childProps
  }, children)));
  setEnd();
  return element;
};

exports.PillGroup = PillGroup;
PillGroup.displayName = 'PillGroup';
PillGroup.propTypes = _utils.commonPropTypes.createCommon();
PillGroup.defaultProps = {
  accessibility: _accessibility.PillGroupBehavior
};
PillGroup.handledProps = Object.keys(PillGroup.propTypes);
PillGroup.shorthandConfig = {
  mappedProp: 'content'
};
//# sourceMappingURL=PillGroup.js.map
