"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.AvatarStatusIcon = exports.avatarStatusIconClassName = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactBindings = require("@fluentui/react-bindings");

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _utils = require("../../utils");

var avatarStatusIconClassName = 'ui-avatar__statusicon';
/**
 * A AvatarStatusIcon provides a status icon for the Avatar.
 */

exports.avatarStatusIconClassName = avatarStatusIconClassName;

var AvatarStatusIcon = function AvatarStatusIcon(props) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(AvatarStatusIcon.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var className = props.className,
      children = props.children,
      design = props.design,
      styles = props.styles,
      variables = props.variables,
      state = props.state;

  var _useStyles = (0, _reactBindings.useStyles)(AvatarStatusIcon.displayName, {
    className: avatarStatusIconClassName,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        state: state
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var getA11Props = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: AvatarStatusIcon.displayName,
    rtl: context.rtl
  });
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(AvatarStatusIcon.handledProps, props);
  var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
    className: classes.root
  }, unhandledProps)), children);
  setEnd();
  return element;
};

exports.AvatarStatusIcon = AvatarStatusIcon;
AvatarStatusIcon.displayName = 'AvatarStatusIcon';
AvatarStatusIcon.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon(), {
  state: PropTypes.oneOf(['success', 'info', 'warning', 'error', 'unknown'])
});
AvatarStatusIcon.handledProps = Object.keys(AvatarStatusIcon.propTypes);
AvatarStatusIcon.defaultProps = {
  as: 'span'
};
AvatarStatusIcon.create = (0, _utils.createShorthandFactory)({
  Component: AvatarStatusIcon
});
//# sourceMappingURL=AvatarStatusIcon.js.map
