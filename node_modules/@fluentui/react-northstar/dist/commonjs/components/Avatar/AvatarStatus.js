"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.AvatarStatus = exports.avatarStatusClassName = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactBindings = require("@fluentui/react-bindings");

var _utils = require("../../utils");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _accessibility = require("@fluentui/accessibility");

var _AvatarStatusIcon = require("./AvatarStatusIcon");

var _Status = require("../Status/Status");

// update in upcoming breaking change and enable a unit test
var avatarStatusClassName = _Status.statusClassName;
/**
 * A AvatarStatus provides a status for the Avatar.
 */

exports.avatarStatusClassName = avatarStatusClassName;

var AvatarStatus = function AvatarStatus(props) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(AvatarStatus.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var className = props.className,
      color = props.color,
      icon = props.icon,
      size = props.size,
      state = props.state,
      design = props.design,
      styles = props.styles,
      variables = props.variables;

  var _useStyles = (0, _reactBindings.useStyles)(AvatarStatus.displayName, {
    className: avatarStatusClassName,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        color: color,
        size: size,
        state: state
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var getA11Props = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: AvatarStatus.displayName,
    rtl: context.rtl
  });
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(AvatarStatus.handledProps, props);
  var iconElement = (0, _utils.createShorthand)(_AvatarStatusIcon.AvatarStatusIcon, icon, {
    defaultProps: function defaultProps() {
      return {
        state: state
      };
    }
  });
  var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
    className: classes.root
  }, unhandledProps)), iconElement);
  setEnd();
  return element;
};

exports.AvatarStatus = AvatarStatus;
AvatarStatus.displayName = 'AvatarStatus';
AvatarStatus.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon({
  children: false,
  content: false
}), {
  color: PropTypes.string,
  icon: customPropTypes.shorthandAllowingChildren,
  size: customPropTypes.size,
  state: PropTypes.oneOf(['success', 'info', 'warning', 'error', 'unknown'])
});
AvatarStatus.handledProps = Object.keys(AvatarStatus.propTypes);
AvatarStatus.defaultProps = {
  accessibility: _accessibility.statusBehavior,
  as: 'span',
  size: 'medium',
  state: 'unknown'
};
AvatarStatus.create = (0, _utils.createShorthandFactory)({
  Component: AvatarStatus,
  mappedProp: 'state'
});
//# sourceMappingURL=AvatarStatus.js.map
