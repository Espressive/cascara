"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.CarouselPaddlesContainer = exports.carouselPaddlesContainerClassName = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactBindings = require("@fluentui/react-bindings");

var _utils = require("../../utils");

var carouselPaddlesContainerClassName = 'ui-carrouselpaddles_container';
/**
 * A CarouselPaddlesContainer is a container for the Carousel Paddles.
 */

exports.carouselPaddlesContainerClassName = carouselPaddlesContainerClassName;

var CarouselPaddlesContainer = function CarouselPaddlesContainer(props) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(CarouselPaddlesContainer.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var className = props.className,
      children = props.children,
      design = props.design,
      styles = props.styles,
      variables = props.variables,
      content = props.content;

  var _useStyles = (0, _reactBindings.useStyles)(CarouselPaddlesContainer.displayName, {
    className: carouselPaddlesContainerClassName,
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var getA11Props = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: CarouselPaddlesContainer.displayName,
    rtl: context.rtl
  });
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(CarouselPaddlesContainer.handledProps, props);
  var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
    className: classes.root
  }, unhandledProps)), (0, _utils.childrenExist)(children) ? children : content);
  setEnd();
  return element;
};

exports.CarouselPaddlesContainer = CarouselPaddlesContainer;
CarouselPaddlesContainer.displayName = 'CarouselPaddlesContainer';
CarouselPaddlesContainer.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon());
CarouselPaddlesContainer.handledProps = Object.keys(CarouselPaddlesContainer.propTypes);
CarouselPaddlesContainer.shorthandConfig = {
  mappedProp: 'content'
};
//# sourceMappingURL=CarouselPaddlesContainer.js.map
