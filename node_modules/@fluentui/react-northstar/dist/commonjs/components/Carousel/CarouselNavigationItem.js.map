{"version":3,"sources":["components/Carousel/CarouselNavigationItem.tsx"],"names":["carouselNavigationItemClassName","carouselNavigationItemSlotClassNames","indicator","content","CarouselNavigationItem","props","context","displayName","telemetry","setStart","setEnd","children","thumbnails","vertical","active","iconOnly","primary","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","performClick","event","defaultPrevented","handleClick","mapPropsToBehavior","mapPropsToStyles","hasContent","hasIndicator","mapPropsToInlineStyles","rtl","classes","resolvedStyles","renderContent","Box","create","defaultProps","as","e","handleBlur","handleFocus","element","root","onBlur","onFocus","onClick","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","PropTypes","bool","customPropTypes","shorthandAllowingChildren","index","number","func","every","disallow","secondary","Object","keys","tabBehavior","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport { Accessibility, tabBehavior, TabBehaviorProps } from '@fluentui/accessibility';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n  ChildrenComponentProps,\n} from '../../utils';\n\nimport { ShorthandValue, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface CarouselNavigationItemSlotClassNames {\n  indicator: string;\n  content: string;\n}\n\nexport interface CarouselNavigationItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<TabBehaviorProps>;\n\n  /** A menu item can be active. */\n  active?: boolean;\n\n  /** Indicator for the Carousel Navigation Item. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** A Carousel Navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** CarouselNavigationIntem index inside CarouselNavigation. */\n  index?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation item can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation item can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n\n  thumbnails?: boolean;\n}\n\nexport type CarouselNavigationItemStylesProps = Required<\n  Pick<CarouselNavigationItemProps, 'thumbnails' | 'vertical' | 'active' | 'iconOnly' | 'primary'>\n> & {\n  hasContent: boolean;\n  hasIndicator: boolean;\n};\n\nexport const carouselNavigationItemClassName = 'ui-carousel__navigationitem';\nexport const carouselNavigationItemSlotClassNames: CarouselNavigationItemSlotClassNames = {\n  indicator: `${carouselNavigationItemClassName}__indicator`,\n  content: `${carouselNavigationItemClassName}__content`,\n};\n\n/**\n * A CarouselItem is an actionable item within a Carousel.\n */\nexport const CarouselNavigationItem: ComponentWithAs<'li', CarouselNavigationItemProps> &\n  FluentComponentStaticProps<CarouselNavigationItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselNavigationItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    children,\n    thumbnails,\n    vertical,\n    active,\n    content,\n    iconOnly,\n    primary,\n    indicator,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselNavigationItem.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CarouselNavigationItem.displayName,\n    actionHandlers: {\n      performClick: event => !event.defaultPrevented && handleClick(event),\n    },\n    mapPropsToBehavior: () => ({\n      active,\n    }),\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<CarouselNavigationItemStylesProps>(\n    CarouselNavigationItem.displayName,\n    {\n      className: carouselNavigationItemClassName,\n      mapPropsToStyles: () => ({\n        thumbnails,\n        vertical,\n        active,\n        hasContent: !!content,\n        iconOnly,\n        primary,\n        hasIndicator: !!indicator,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    },\n  );\n  const renderContent = () => {\n    return content\n      ? Box.create(content, {\n          defaultProps: () => ({\n            as: 'span',\n            className: carouselNavigationItemSlotClassNames.content,\n            styles: resolvedStyles.content,\n          }),\n        })\n      : Box.create(indicator, {\n          defaultProps: () => ({\n            className: carouselNavigationItemSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n        });\n  };\n\n  const handleClick = (e: Event | React.SyntheticEvent) => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onClick: handleClick,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nCarouselNavigationItem.displayName = 'CarouselNavigationItem';\n\nCarouselNavigationItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n};\n\nCarouselNavigationItem.handledProps = Object.keys(CarouselNavigationItem.propTypes) as any;\n\nCarouselNavigationItem.defaultProps = {\n  accessibility: tabBehavior,\n  as: 'li',\n  indicator: {},\n};\n\nCarouselNavigationItem.create = createShorthandFactory({\n  Component: CarouselNavigationItem,\n  mappedArrayProp: 'content',\n});\n"],"file":"CarouselNavigationItem.js"}