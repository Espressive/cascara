{"version":3,"sources":["components/Carousel/CarouselPaddlesContainer.tsx"],"names":["carouselPaddlesContainerClassName","CarouselPaddlesContainer","props","context","displayName","telemetry","setStart","setEnd","className","children","design","styles","variables","content","mapPropsToInlineStyles","rtl","classes","getA11Props","accessibility","debugName","ElementType","unhandledProps","handledProps","element","root","propTypes","commonPropTypes","createCommon","Object","keys","shorthandConfig","mappedProp"],"mappings":";;;;;;;AAAA;;AACA;;AASA;;AAgBO,IAAMA,iCAAiC,GAAG,+BAA1C;AAEP;AACA;AACA;;;;AACO,IAAMC,wBAC8C,GAAG,SADjDA,wBACiD,CAAAC,KAAK,EAAI;AACrE,MAAMC,OAAO,GAAG,sCAAhB;;AADqE,sBAExC,iCAAaF,wBAAwB,CAACG,WAAtC,EAAmDD,OAAO,CAACE,SAA3D,CAFwC;AAAA,MAE7DC,QAF6D,iBAE7DA,QAF6D;AAAA,MAEnDC,MAFmD,iBAEnDA,MAFmD;;AAGrED,EAAAA,QAAQ;AAH6D,MAK7DE,SAL6D,GAKDN,KALC,CAK7DM,SAL6D;AAAA,MAKlDC,QALkD,GAKDP,KALC,CAKlDO,QALkD;AAAA,MAKxCC,MALwC,GAKDR,KALC,CAKxCQ,MALwC;AAAA,MAKhCC,MALgC,GAKDT,KALC,CAKhCS,MALgC;AAAA,MAKxBC,SALwB,GAKDV,KALC,CAKxBU,SALwB;AAAA,MAKbC,OALa,GAKDX,KALC,CAKbW,OALa;;AAAA,mBAOjD,8BAA+CZ,wBAAwB,CAACG,WAAxE,EAAqF;AACvGI,IAAAA,SAAS,EAAER,iCAD4F;AAEvGc,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BN,QAAAA,SAAS,EAATA,SAD6B;AAE7BE,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAF+E;AAQvGG,IAAAA,GAAG,EAAEZ,OAAO,CAACY;AAR0F,GAArF,CAPiD;AAAA,MAO7DC,OAP6D,cAO7DA,OAP6D;;AAkBrE,MAAMC,WAAW,GAAG,qCAAiBf,KAAK,CAACgB,aAAvB,EAAsC;AACxDC,IAAAA,SAAS,EAAElB,wBAAwB,CAACG,WADoB;AAExDW,IAAAA,GAAG,EAAEZ,OAAO,CAACY;AAF2C,GAAtC,CAApB;AAKA,MAAMK,WAAW,GAAG,mCAAelB,KAAf,CAApB;AACA,MAAMmB,cAAc,GAAG,sCAAkBpB,wBAAwB,CAACqB,YAA3C,EAAyDpB,KAAzD,CAAvB;AAEA,MAAMqB,OAAO,gBACX,oBAAC,WAAD,EAAiBN,WAAW,CAAC,MAAD;AAAWT,IAAAA,SAAS,EAAEQ,OAAO,CAACQ;AAA9B,KAAuCH,cAAvC,EAA5B,EACG,0BAAcZ,QAAd,IAA0BA,QAA1B,GAAqCI,OADxC,CADF;AAKAN,EAAAA,MAAM;AAEN,SAAOgB,OAAP;AACD,CAnCM;;;AAqCPtB,wBAAwB,CAACG,WAAzB,GAAuC,0BAAvC;AACAH,wBAAwB,CAACwB,SAAzB,qBACKC,uBAAgBC,YAAhB,EADL;AAIA1B,wBAAwB,CAACqB,YAAzB,GAAwCM,MAAM,CAACC,IAAP,CAAY5B,wBAAwB,CAACwB,SAArC,CAAxC;AAEAxB,wBAAwB,CAAC6B,eAAzB,GAA2C;AACzCC,EAAAA,UAAU,EAAE;AAD6B,CAA3C","sourcesContent":["import * as React from 'react';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  ComponentWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  childrenExist,\n} from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\n\nexport interface CarouselPaddlesContainerProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n}\n\nexport type CarouselPaddlesContainerStylesProps = never;\nexport const carouselPaddlesContainerClassName = 'ui-carrouselpaddles_container';\n\n/**\n * A CarouselPaddlesContainer is a container for the Carousel Paddles.\n */\nexport const CarouselPaddlesContainer: ComponentWithAs<'div', CarouselPaddlesContainerProps> &\n  FluentComponentStaticProps<CarouselPaddlesContainerProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselPaddlesContainer.displayName, context.telemetry);\n  setStart();\n\n  const { className, children, design, styles, variables, content } = props;\n\n  const { classes } = useStyles<CarouselPaddlesContainerStylesProps>(CarouselPaddlesContainer.displayName, {\n    className: carouselPaddlesContainerClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: CarouselPaddlesContainer.displayName,\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselPaddlesContainer.handledProps, props);\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nCarouselPaddlesContainer.displayName = 'CarouselPaddlesContainer';\nCarouselPaddlesContainer.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nCarouselPaddlesContainer.handledProps = Object.keys(CarouselPaddlesContainer.propTypes) as any;\n\nCarouselPaddlesContainer.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"CarouselPaddlesContainer.js"}