{"version":3,"sources":["components/Text/Text.tsx"],"names":["textClassName","Text","props","context","displayName","telemetry","setStart","setEnd","accessibility","align","atMention","children","className","color","content","design","disabled","error","important","size","styles","success","timestamp","truncated","temporary","variables","weight","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","unhandledProps","handledProps","ElementType","element","root","rtlTextContainer","getAttributes","forElements","defaultProps","as","propTypes","commonPropTypes","createCommon","PropTypes","oneOfType","bool","oneOf","customPropTypes","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n  SizeValue,\n  AlignValue,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\n\nexport interface TextProps\n  extends UIComponentProps,\n    ContentComponentProps,\n    ChildrenComponentProps,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** At mentions can be formatted to draw users' attention. Mentions for \"me\" can be formatted to appear differently. */\n  atMention?: boolean | 'me';\n\n  /** Set as disabled Text component */\n  disabled?: boolean;\n\n  /** Set as error Text component */\n  error?: boolean;\n\n  /** The text can appear more important and draw user's attention */\n  important?: boolean;\n\n  /** The size for the Text component */\n  size?: SizeValue;\n\n  /** The weight for the Text component */\n  weight?: 'light' | 'semilight' | 'regular' | 'semibold' | 'bold';\n\n  /** Set as success Text component */\n  success?: boolean;\n\n  /** The text can signify a temporary state */\n  temporary?: boolean;\n\n  /** Align text content. */\n  align?: AlignValue;\n\n  /** Set as timestamp Text component */\n  timestamp?: boolean;\n\n  /** Truncates text as needed */\n  truncated?: boolean;\n}\n\nexport type TextStylesProps = Pick<\n  TextProps,\n  | 'atMention'\n  | 'color'\n  | 'important'\n  | 'timestamp'\n  | 'truncated'\n  | 'disabled'\n  | 'error'\n  | 'success'\n  | 'temporary'\n  | 'align'\n  | 'weight'\n  | 'size'\n>;\n\nexport const textClassName = 'ui-text';\n\n/**\n * A Text consistently styles and formats occurrences of text.\n */\nexport const Text: ComponentWithAs<'span', TextProps> & FluentComponentStaticProps<TextProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Text.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    align,\n    atMention,\n    children,\n    className,\n    color,\n    content,\n    design,\n    disabled,\n    error,\n    important,\n    size,\n    styles,\n    success,\n    timestamp,\n    truncated,\n    temporary,\n    variables,\n    weight,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Text.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TextStylesProps>(Text.displayName, {\n    className: textClassName,\n    mapPropsToStyles: () => ({\n      atMention,\n      color,\n      important,\n      timestamp,\n      truncated,\n      disabled,\n      error,\n      success,\n      temporary,\n      align,\n      weight,\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(Text.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nText.displayName = 'Text';\n\nText.defaultProps = {\n  as: 'span',\n};\nText.propTypes = {\n  ...commonPropTypes.createCommon({ color: true }),\n  atMention: PropTypes.oneOfType<any>([PropTypes.bool, PropTypes.oneOf(['me'])]),\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  important: PropTypes.bool,\n  size: customPropTypes.size,\n  weight: PropTypes.oneOf(['light', 'semilight', 'regular', 'semibold', 'bold']),\n  success: PropTypes.bool,\n  temporary: PropTypes.bool,\n  align: customPropTypes.align,\n  timestamp: PropTypes.bool,\n  truncated: PropTypes.bool,\n};\nText.handledProps = Object.keys(Text.propTypes) as any;\n\nText.create = createShorthandFactory({ Component: Text, mappedProp: 'content' });\n"],"file":"Text.js"}