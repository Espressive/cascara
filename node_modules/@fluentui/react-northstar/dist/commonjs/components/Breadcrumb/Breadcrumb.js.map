{"version":3,"sources":["components/Breadcrumb/Breadcrumb.tsx"],"names":["breadcrumbClassName","Breadcrumb","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","children","content","className","design","styles","variables","size","contextValue","React","useMemo","getA11yProps","debugName","rtl","mapPropsToInlineStyles","unstable_props","classes","unhandledProps","handledProps","ElementType","result","unstable_wrapWithFocusZone","root","container","wrappedElement","mapPropsToStylesProps","defaultProps","as","breadcrumbBehavior","propTypes","commonPropTypes","createCommon","PropTypes","oneOf","Item","BreadcrumbItem","Divider","BreadcrumbDivider","Link","BreadcrumbLink","create","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  compose,\n  useFluentContext,\n  useTelemetry,\n  useAccessibility,\n  useStyles,\n  useUnhandledProps,\n  getElementType,\n  childrenExist,\n  ShorthandConfig,\n  ComponentWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  ShorthandFactory,\n  createShorthandFactory,\n} from '../../utils';\nimport { Accessibility, breadcrumbBehavior, BreadcrumbBehaviorProps } from '@fluentui/accessibility';\nimport { BreadcrumbItem } from './BreadcrumbItem';\nimport { BreadcrumbDivider } from './BreadcrumbDivider';\nimport { BreadcrumbLink } from './BreadcrumbLink';\nimport { BreadcrumbContext, BreadcrumbSizeValues } from './breadcrumbContext';\nimport { Ref } from '@fluentui/react-component-ref';\n\nexport interface BreadcrumbProps\n  extends UIComponentProps<BreadcrumbProps>,\n    ContentComponentProps,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<BreadcrumbBehaviorProps>;\n\n  /** Breadcrumb can be sized */\n  size?: BreadcrumbSizeValues;\n}\n\nexport type BreadcrumbStylesProps = Required<Pick<BreadcrumbProps, 'size'>>;\n\nexport const breadcrumbClassName = 'ui-breadcrumb';\n\n/**\n * Breadcrumb is a a component that indicates the path of the current page\n *\n * @accessibility\n * Implements [ARIA Breadcrumb](https://www.w3.org/TR/wai-aria-practices-1.1/#breadcrumb) design pattern.\n * Refers to [this ARIA discussion](https://github.com/w3c/aria-practices/issues/635), and uses arrow key to navigate between each breadcrumb item.\n *\n * @accessibilityIssues\n * [Under NVDA Browse mode - Breadcrumb is not navigable](https://github.com/w3c/aria-practices/issues/635 )\n */\nexport const Breadcrumb = compose<'nav', BreadcrumbProps, BreadcrumbStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n    const { accessibility, children, content, className, design, styles, variables, size } = props;\n\n    const contextValue = React.useMemo(() => ({ size }), [size]);\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<BreadcrumbStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n        size,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const result = getA11yProps.unstable_wrapWithFocusZone(\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ...unhandledProps,\n        })}\n      >\n        <BreadcrumbContext.Provider value={contextValue}>\n          <div\n            {...getA11yProps('container', {\n              className: classes.container,\n            })}\n          >\n            {childrenExist(children) ? children : content}\n          </div>\n        </BreadcrumbContext.Provider>\n      </ElementType>,\n    );\n    const wrappedElement = ref ? <Ref innerRef={ref}>{result}</Ref> : result;\n\n    setEnd();\n\n    return wrappedElement;\n  },\n  {\n    className: breadcrumbClassName,\n    displayName: 'Breadcrumb',\n    handledProps: ['accessibility', 'as', 'children', 'className', 'content', 'design', 'styles', 'variables', 'size'],\n    mapPropsToStylesProps: ({ size }) => ({\n      size,\n    }),\n  },\n) as ComponentWithAs<'nav', BreadcrumbProps> & {\n  create: ShorthandFactory<BreadcrumbProps>;\n  shorthandConfig: ShorthandConfig<BreadcrumbProps>;\n\n  Item: typeof BreadcrumbItem;\n  Divider: typeof BreadcrumbDivider;\n  Link: typeof BreadcrumbLink;\n};\n\nBreadcrumb.defaultProps = {\n  as: 'nav',\n  size: 'medium',\n  accessibility: breadcrumbBehavior,\n};\n\nBreadcrumb.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: PropTypes.oneOf(['smaller', 'small', 'medium', 'large']),\n};\n\nBreadcrumb.Item = BreadcrumbItem;\nBreadcrumb.Divider = BreadcrumbDivider;\nBreadcrumb.Link = BreadcrumbLink;\n\nBreadcrumb.create = createShorthandFactory({\n  Component: Breadcrumb,\n});\n"],"file":"Breadcrumb.js"}