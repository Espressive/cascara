"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.DialogFooter = exports.dialogFooterClassName = void 0;

var React = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _reactBindings = require("@fluentui/react-bindings");

var dialogFooterClassName = 'ui-dialog__footer';
exports.dialogFooterClassName = dialogFooterClassName;

/**
 * A DialogFooter represents footer content in Dialog, usually shows dialog actions.
 */
var DialogFooter = function DialogFooter(props) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(DialogFooter.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var children = props.children,
      content = props.content,
      className = props.className,
      design = props.design,
      styles = props.styles,
      variables = props.variables,
      accessibility = props.accessibility;
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(DialogFooter.handledProps, props);
  var getA11yProps = (0, _reactBindings.useAccessibility)(accessibility, {
    debugName: DialogFooter.displayName,
    rtl: context.rtl
  });

  var _useStyles = (0, _reactBindings.useStyles)(DialogFooter.displayName, {
    className: dialogFooterClassName,
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({
    className: classes.root
  }, unhandledProps)), (0, _utils.childrenExist)(children) ? children : content);
  setEnd();
  return element;
};

exports.DialogFooter = DialogFooter;
DialogFooter.displayName = 'DialogFooter';
DialogFooter.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon());
DialogFooter.handledProps = Object.keys(DialogFooter.propTypes);
DialogFooter.create = (0, _utils.createShorthandFactory)({
  Component: DialogFooter,
  mappedProp: 'content'
});
//# sourceMappingURL=DialogFooter.js.map
