{"version":3,"sources":["components/Layout/Layout.tsx"],"names":["layoutClassName","layoutSlotClassNames","start","main","end","gap","reducedStart","reducedMain","reducedEnd","Layout","props","context","displayName","telemetry","setStart","setEnd","reducing","disappearing","renderStartArea","renderMainArea","renderEndArea","renderGap","alignItems","debug","justifyItems","mainSize","endSize","startSize","vertical","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","hasMain","hasEnd","hasStart","mapPropsToInlineStyles","classes","startArea","mainArea","endArea","root","activeAreas","filter","Boolean","isSingleArea","length","composedClasses","propTypes","commonPropTypes","createCommon","children","content","PropTypes","bool","func","rootCSS","object","any","startCSS","string","mainCSS","endCSS","defaultProps","rtlTextContainer","getAttributes","forElements","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import { ICSSInJSStyle } from '@fluentui/styles';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { UIComponentProps, commonPropTypes, rtlTextContainer, createShorthandFactory } from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  useStyles,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useTelemetry,\n} from '@fluentui/react-bindings';\n\nexport interface LayoutSlotClassNames {\n  start: string;\n  main: string;\n  end: string;\n  gap: string;\n  reducedStart: string;\n  reducedMain: string;\n  reducedEnd: string;\n}\n\nexport interface LayoutProps extends UIComponentProps {\n  debug?: boolean;\n  renderStartArea?: (params: LayoutProps & { classes: Record<string, string> }) => React.ReactNode;\n  renderMainArea?: (params: LayoutProps & { classes: Record<string, string> }) => React.ReactNode;\n  renderEndArea?: (params: LayoutProps & { classes: Record<string, string> }) => React.ReactNode;\n  renderGap?: (params: LayoutProps & { classes: Record<string, string> }) => React.ReactNode;\n  /** Styled applied to the root element of the rendered component. */\n  rootCSS?: ICSSInJSStyle;\n  start?: any;\n  startCSS?: ICSSInJSStyle;\n  startSize?: string;\n  main?: any;\n  mainCSS?: ICSSInJSStyle;\n  mainSize?: string;\n  end?: any;\n  endCSS?: ICSSInJSStyle;\n  endSize?: string;\n  /** How to align items on-axis within the layout (i.e. vertical or not). */\n  justifyItems?: React.CSSProperties['justifyItems'];\n  /** How to align cross-axis items within the layout (i.e. vertical or not). */\n  alignItems?: React.CSSProperties['alignItems'];\n  /** A layout can have gaps of whitespace between areas. */\n  gap?: string;\n  /** A layout can reduce to the minimum required areas. */\n  reducing?: boolean;\n  /** A layout can render its content directly if only one piece of content exists. */\n  disappearing?: boolean;\n  vertical?: boolean;\n}\n\nexport const layoutClassName = 'ui-layout';\nexport const layoutSlotClassNames: LayoutSlotClassNames = {\n  start: `${layoutClassName}__start`,\n  main: `${layoutClassName}__main`,\n  end: `${layoutClassName}__end`,\n  gap: `${layoutClassName}__gap`,\n  reducedStart: `${layoutClassName}--reduced__start`,\n  reducedMain: `${layoutClassName}--reduced__main`,\n  reducedEnd: `${layoutClassName}--reduced__end`,\n};\n\nexport type LayoutStylesProps = Required<\n  Pick<LayoutProps, 'alignItems' | 'debug' | 'gap' | 'justifyItems' | 'mainSize' | 'endSize' | 'startSize' | 'vertical'>\n> & { hasStart: boolean; hasMain: boolean; hasEnd: boolean };\n\n/**\n * (DEPRECATED) A layout is a utility for arranging the content of a component.\n */\nexport const Layout: ComponentWithAs<'div', LayoutProps> & FluentComponentStaticProps<LayoutProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Layout.displayName, context.telemetry);\n  setStart();\n  const {\n    reducing,\n    disappearing,\n    renderStartArea,\n    renderMainArea,\n    renderEndArea,\n    renderGap,\n    alignItems,\n    debug,\n    gap,\n    justifyItems,\n    main,\n    mainSize,\n    end,\n    endSize,\n    start,\n    startSize,\n    vertical,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Layout.handledProps, props);\n\n  const getA11yProps = useAccessibility<never>(props.accessibility, {\n    debugName: Layout.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<LayoutStylesProps>(Layout.displayName, {\n    className: layoutClassName,\n    mapPropsToStyles: () => ({\n      alignItems,\n      debug,\n      gap,\n      justifyItems,\n      hasMain: !!main,\n      mainSize,\n      hasEnd: !!end,\n      endSize,\n      hasStart: !!start,\n      startSize,\n      vertical,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const startArea = renderStartArea({ ...props, classes });\n  const mainArea = renderMainArea({ ...props, classes });\n  const endArea = renderEndArea({ ...props, classes });\n\n  if (!startArea && !mainArea && !endArea) {\n    setEnd();\n    return (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ...unhandledProps,\n        })}\n      />\n    );\n  }\n\n  const activeAreas = [startArea, mainArea, endArea].filter(Boolean);\n  const isSingleArea = activeAreas.length === 1;\n\n  // disappear: render the content directly without wrapping layout or area elements\n  if (disappearing && isSingleArea) {\n    setEnd();\n    return start || main || end;\n  }\n\n  if (reducing && isSingleArea) {\n    const composedClasses = cx(\n      classes.root,\n      startArea && layoutSlotClassNames.reducedStart,\n      mainArea && layoutSlotClassNames.reducedMain,\n      endArea && layoutSlotClassNames.reducedEnd,\n    );\n    setEnd();\n    return (\n      <ElementType\n        {...getA11yProps('root', {\n          className: composedClasses,\n          ...unhandledProps,\n        })}\n      >\n        {start || main || end}\n      </ElementType>\n    );\n  }\n  setEnd();\n  return (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {startArea}\n      {startArea && mainArea && renderGap({ ...props, classes })}\n      {mainArea}\n      {(startArea || mainArea) && endArea && renderGap({ ...props, classes })}\n      {endArea}\n    </ElementType>\n  );\n};\n\nLayout.displayName = 'Layout';\n\nLayout.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  debug: PropTypes.bool,\n\n  renderStartArea: PropTypes.func,\n  renderMainArea: PropTypes.func,\n  renderEndArea: PropTypes.func,\n  renderGap: PropTypes.func,\n\n  rootCSS: PropTypes.object,\n\n  start: PropTypes.any,\n  startCSS: PropTypes.object,\n  startSize: PropTypes.string,\n\n  main: PropTypes.any,\n  mainCSS: PropTypes.object,\n  mainSize: PropTypes.string,\n\n  end: PropTypes.any,\n  endCSS: PropTypes.object,\n  endSize: PropTypes.string,\n\n  justifyItems: PropTypes.any,\n\n  alignItems: PropTypes.any,\n\n  gap: PropTypes.string,\n  reducing: PropTypes.bool,\n  disappearing: PropTypes.bool,\n\n  vertical: PropTypes.bool,\n};\n\nLayout.defaultProps = {\n  startSize: 'auto',\n  mainSize: '1fr',\n  endSize: 'auto',\n\n  // TODO: when an area is another Layout, do not wrap them in an extra div\n  // TODO: option 1) higher value layouts could use start={Layout.create(start)} to ensure Areas are layout root\n  renderStartArea({ start, classes }) {\n    return (\n      start && (\n        <div\n          className={cx(layoutSlotClassNames.start, classes.start)}\n          {...rtlTextContainer.getAttributes({ forElements: [start] })}\n        >\n          {start}\n        </div>\n      )\n    );\n  },\n\n  renderMainArea({ main, classes }) {\n    return (\n      main && (\n        <div\n          className={cx(layoutSlotClassNames.main, classes.main)}\n          {...rtlTextContainer.getAttributes({ forElements: [main] })}\n        >\n          {main}\n        </div>\n      )\n    );\n  },\n\n  renderEndArea({ end, classes }) {\n    return (\n      end && (\n        <div\n          className={cx(layoutSlotClassNames.end, classes.end)}\n          {...rtlTextContainer.getAttributes({ forElements: [end] })}\n        >\n          {end}\n        </div>\n      )\n    );\n  },\n\n  // Heads up!\n  // IE11 Doesn't support grid-gap, insert virtual columns instead\n  renderGap({ gap, classes }) {\n    return gap && <span className={cx(layoutSlotClassNames.gap, classes.gap)} />;\n  },\n};\n\nLayout.handledProps = Object.keys(Layout.propTypes) as any;\n\nLayout.create = createShorthandFactory({\n  Component: Layout,\n});\n"],"file":"Layout.js"}