{"version":3,"sources":["components/Reaction/Reaction.tsx"],"names":["reactionClassName","reactionSlotClassNames","icon","content","Reaction","props","context","displayName","telemetry","setStart","setEnd","children","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","classes","resolvedStyles","element","root","rtlTextContainer","getAttributes","forElements","Box","create","defaultProps","propTypes","commonPropTypes","createCommon","customPropTypes","shorthandAllowingChildren","as","Object","keys","Group","ReactionGroup","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n  ContentComponentProps,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\n\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ReactionGroup } from './ReactionGroup';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface ReactionSlotClassNames {\n  icon: string;\n  content: string;\n}\n\nexport interface ReactionProps\n  extends UIComponentProps<ReactionProps>,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A reaction can have icon for the indicator of the reaction. */\n  icon?: ShorthandValue<BoxProps>;\n}\n\nexport type ReactionStylesProps = {\n  hasContent: boolean;\n};\n\nexport const reactionClassName = 'ui-reaction';\nexport const reactionSlotClassNames: ReactionSlotClassNames = {\n  icon: `${reactionClassName}__icon`,\n  content: `${reactionClassName}__content`,\n};\n\n/**\n * A Reaction indicates user's emotion or perception.\n * Used to display user's reaction for entity in Chat (e.g. message).\n */\nexport const Reaction: ComponentWithAs<'span', ReactionProps> &\n  FluentComponentStaticProps<ReactionProps> & {\n    Group: typeof ReactionGroup;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Reaction.displayName, context.telemetry);\n  setStart();\n  const { children, icon, content, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Reaction.handledProps, props);\n\n  const getA11yProps = useAccessibility<never>(props.accessibility, {\n    debugName: Reaction.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<ReactionStylesProps>(Reaction.displayName, {\n    className: reactionClassName,\n    mapPropsToStyles: () => ({\n      hasContent: !!content,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? (\n        children\n      ) : (\n        <>\n          {Box.create(icon, {\n            defaultProps: () =>\n              getA11yProps('icon', {\n                className: reactionSlotClassNames.icon,\n                styles: resolvedStyles.icon,\n              }),\n          })}\n          {Box.create(content, {\n            defaultProps: () =>\n              getA11yProps('content', {\n                className: reactionSlotClassNames.content,\n                styles: resolvedStyles.content,\n              }),\n          })}\n        </>\n      )}\n    </ElementType>\n  );\n\n  setEnd();\n  return element;\n};\n\nReaction.displayName = 'Reaction';\n\nReaction.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  icon: customPropTypes.shorthandAllowingChildren,\n};\n\nReaction.defaultProps = {\n  as: 'span',\n};\n\nReaction.handledProps = Object.keys(Reaction.propTypes) as any;\n\nReaction.Group = ReactionGroup;\n\nReaction.create = createShorthandFactory({ Component: Reaction, mappedProp: 'content' });\n"],"file":"Reaction.js"}