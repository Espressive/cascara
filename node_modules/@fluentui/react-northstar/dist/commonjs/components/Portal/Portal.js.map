{"version":3,"sources":["components/Portal/Portal.tsx"],"names":["Portal","props","context","displayName","telemetry","setStart","setEnd","children","content","trapFocus","trigger","triggerAccessibility","portalRef","React","useRef","triggerRef","defaultValue","defaultOpen","value","open","initialValue","setOpen","renderPortal","contentToRender","focusTrapZoneProps","length","handleMount","handleUnmount","rtlTextContainer","getAttributes","forElements","handleDocumentClick","target","renderTrigger","handleTriggerRef","cloneElement","onClick","handleTriggerClick","attributes","keyHandlers","node","current","e","unhandledProps","isOpen","element","propTypes","commonPropTypes","createCommon","accessibility","as","className","styled","PropTypes","bool","onMount","func","onUnmount","customPropTypes","ref","object","onTriggerClick","onOutsideClick","oneOfType","handledProps","Object","keys","create","Component","defaultProps"],"mappings":"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","sourcesContent":["import { AccessibilityAttributes } from '@fluentui/accessibility';\nimport {\n  AccessibilityHandlerProps,\n  FocusTrapZone,\n  FocusTrapZoneProps,\n  useFluentContext,\n  useTelemetry,\n  useAutoControlled,\n} from '@fluentui/react-bindings';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  childrenExist,\n  doesNodeContainClick,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { PortalInner } from './PortalInner';\n\nexport type TriggerAccessibility = {\n  attributes?: AccessibilityAttributes;\n  keyHandlers?: AccessibilityHandlerProps;\n};\n\nexport interface PortalProps extends ChildrenComponentProps, ContentComponentProps {\n  /** Initial value of open. */\n  defaultOpen?: boolean;\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param data - All props.\n   */\n  onMount?: (props: PortalProps) => void;\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param data - All props.\n   */\n  onUnmount?: (props: PortalProps) => void;\n\n  /** Controls whether or not the portal is displayed. */\n  open?: boolean;\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger?: JSX.Element;\n\n  /** Controls whether or not focus trap should be applied, using boolean or FocusTrapZoneProps type value */\n  trapFocus?: FocusTrapZoneProps | boolean;\n\n  /** Accessibility behavior object to apply on trigger node. */\n  triggerAccessibility?: TriggerAccessibility;\n\n  /** Sets trigger node to passed ref. */\n  triggerRef?: React.Ref<any>;\n\n  /**\n   * Called when trigger node was clicked.\n   *\n   * @param data - All props.\n   */\n  onTriggerClick?: (e: React.MouseEvent) => void;\n\n  /**\n   * Called when `click` event was invoked outside portal or trigger nodes.\n   *\n   * @param data - All props.\n   */\n  onOutsideClick?: (e: React.MouseEvent) => void;\n}\n\n/**\n * (DEPRECATED) A Portal allows to render children outside of their parent.\n *\n * @deprecated Please use \"Popup\" or \"Dialog\" components instead.\n */\nexport const Portal: React.FC<PortalProps> & FluentComponentStaticProps<PortalProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Portal.displayName, context.telemetry);\n  setStart();\n  const { children, content, trapFocus, trigger, triggerAccessibility } = props;\n  const portalRef = React.useRef<HTMLElement>();\n  const triggerRef = React.useRef<HTMLElement>();\n\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  const renderPortal = (): JSX.Element | undefined => {\n    const contentToRender = childrenExist(children) ? children : content;\n    const focusTrapZoneProps = (_.keys(trapFocus).length && trapFocus) || {};\n    return (\n      open && (\n        <Ref innerRef={portalRef}>\n          <PortalInner\n            onMount={handleMount}\n            onUnmount={handleUnmount}\n            {...rtlTextContainer.getAttributes({ forElements: [contentToRender] })}\n          >\n            {trapFocus ? <FocusTrapZone {...focusTrapZoneProps}>{contentToRender}</FocusTrapZone> : contentToRender}\n            <EventListener listener={handleDocumentClick} target={context.target} type=\"click\" />\n          </PortalInner>\n        </Ref>\n      )\n    );\n  };\n\n  const renderTrigger = (): JSX.Element | undefined => {\n    return (\n      trigger && (\n        <Ref innerRef={handleTriggerRef}>\n          {React.cloneElement(trigger, {\n            onClick: handleTriggerClick,\n            ...triggerAccessibility.attributes,\n            ...triggerAccessibility.keyHandlers,\n          })}\n        </Ref>\n      )\n    );\n  };\n\n  const handleMount = () => {\n    _.invoke(props, 'onMount', props);\n  };\n\n  const handleUnmount = () => {\n    _.invoke(props, 'onUnmount', props);\n  };\n\n  const handleTriggerRef = (node: HTMLElement) => {\n    triggerRef.current = node;\n    handleRef(props.triggerRef, node);\n  };\n\n  const handleTriggerClick = (e: React.MouseEvent, ...unhandledProps) => {\n    _.invoke(props, 'onTriggerClick', e); // Call handler from parent component\n    _.invoke(trigger, 'props.onClick', e, ...unhandledProps); // Call original event handler\n    setOpen(isOpen => !isOpen);\n  };\n\n  const handleDocumentClick = (e: MouseEvent) => {\n    if (\n      !portalRef || // no portal\n      doesNodeContainClick(triggerRef.current, e, context.target) || // event happened in trigger (delegate to trigger handlers)\n      doesNodeContainClick(portalRef.current, e, context.target) // event happened in the portal\n    ) {\n      return; // ignore the click\n    }\n    _.invoke(props, 'onOutsideClick', e);\n    setOpen(false);\n  };\n\n  const element = (\n    <>\n      {renderPortal()}\n      {renderTrigger()}\n    </>\n  );\n  setEnd();\n  return element;\n};\n\nPortal.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    as: false,\n    className: false,\n    styled: false,\n  }),\n  defaultOpen: PropTypes.bool,\n  onMount: PropTypes.func,\n  onUnmount: PropTypes.func,\n  open: PropTypes.bool,\n  trigger: PropTypes.element,\n  triggerRef: customPropTypes.ref,\n  triggerAccessibility: PropTypes.object,\n  onTriggerClick: PropTypes.func,\n  onOutsideClick: PropTypes.func,\n  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n};\n\nPortal.handledProps = Object.keys(Portal.propTypes) as any;\n\nPortal.create = createShorthandFactory({\n  Component: Portal,\n});\n\nPortal.defaultProps = {\n  triggerAccessibility: {},\n};\n"],"file":"Portal.js"}