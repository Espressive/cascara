{"version":3,"sources":["components/Popup/PopupContent.tsx"],"names":["popupContentClassName","popupContentSlotClassNames","content","PopupContent","props","context","displayName","telemetry","setStart","setEnd","accessibility","autoFocus","children","className","design","placement","pointing","pointerRef","styles","trapFocus","variables","autoSize","getA11yProps","debugName","rtl","mapPropsToStyles","basePlacement","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","handleMouseEnter","e","handleMouseLeave","popupContentProps","root","rtlTextContainer","getAttributes","forElements","onMouseEnter","onMouseLeave","popupContent","pointer","element","focusTrapZoneProps","length","as","autoFocusZoneProps","propTypes","commonPropTypes","createCommon","PropTypes","oneOf","bool","func","customPropTypes","ref","oneOfType","object","AUTOSIZES","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  AutoFocusZone,\n  AutoFocusZoneProps,\n  FocusTrapZone,\n  FocusTrapZoneProps,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PopperJs from '@popperjs/core';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { getBasePlacement, PopperChildrenProps, AutoSize, AUTOSIZES } from '../../utils/positioner';\n\nexport interface PopupContentSlotClassNames {\n  content: string;\n}\n\nexport interface PopupContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * Called after user's mouse enter.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<PopupContentProps>;\n\n  /**\n   * Called after user's mouse leave.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<PopupContentProps>;\n\n  /** An actual placement value from Popper. */\n  placement?: PopperChildrenProps['placement'];\n\n  /** A popup can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /** A ref to a pointer element. */\n  pointerRef?: React.Ref<HTMLDivElement>;\n\n  /** Controls whether or not focus trap should be applied, using boolean or FocusTrapZoneProps type value. */\n  trapFocus?: boolean | FocusTrapZoneProps;\n\n  /** Controls whether or not auto focus should be applied, using boolean or AutoFocusZoneProps type value. */\n  autoFocus?: boolean | AutoFocusZoneProps;\n\n  /**\n   * Applies max-height and max-width on popper to fit it within the available space in viewport.\n   * true enables this for both width and height when overflow happens. 'always' applies `max-height`/`max-width` regardless of overflow.\n   * 'height' applies `max-height` when overflow happens, and 'width' for `max-width`\n   * `height-always` applies `max-height` regardless of overflow, and 'width-always' for always applying `max-width`\n   */\n  autoSize?: AutoSize;\n}\n\nexport type PopupContentStylesProps = Required<Pick<PopupContentProps, 'pointing'>> & {\n  basePlacement: PopperJs.BasePlacement;\n  autoSize?: AutoSize;\n};\n\nexport const popupContentClassName = 'ui-popup__content';\nexport const popupContentSlotClassNames: PopupContentSlotClassNames = {\n  content: `${popupContentClassName}__content`,\n};\n\n/**\n * A PopupContent displays the content of a Popup component.\n */\nexport const PopupContent: ComponentWithAs<'div', PopupContentProps> &\n  FluentComponentStaticProps<PopupContentProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PopupContent.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    autoFocus,\n    children,\n    className,\n    content,\n    design,\n    placement,\n    pointing,\n    pointerRef,\n    styles,\n    trapFocus,\n    variables,\n    autoSize,\n  } = props;\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: PopupContent.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<PopupContentStylesProps>(PopupContent.displayName, {\n    className: popupContentClassName,\n    mapPropsToStyles: () => ({\n      basePlacement: getBasePlacement(placement, context.rtl),\n      pointing,\n      autoSize,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PopupContent.handledProps, props);\n\n  const handleMouseEnter = e => {\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = e => {\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const popupContentProps: PopupContentProps = getA11yProps('root', {\n    className: classes.root,\n    ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n    ...unhandledProps,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n  });\n  const popupContent = (\n    <>\n      {pointing && <div className={classes.pointer} ref={pointerRef} />}\n      <div className={cx(popupContentSlotClassNames.content, classes.content)}>\n        {childrenExist(children) ? children : content}\n      </div>\n    </>\n  );\n\n  let element: React.ReactElement;\n\n  if (trapFocus) {\n    const focusTrapZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(trapFocus).length && trapFocus) as FocusTrapZoneProps),\n      as: ElementType,\n    };\n    element = <FocusTrapZone {...focusTrapZoneProps}>{popupContent}</FocusTrapZone>;\n  } else if (autoFocus) {\n    const autoFocusZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(autoFocus).length && autoFocus) as AutoFocusZoneProps),\n      as: ElementType,\n    };\n    element = <AutoFocusZone {...autoFocusZoneProps}>{popupContent}</AutoFocusZone>;\n  } else {\n    element = <ElementType {...popupContentProps}>{popupContent}</ElementType>;\n  }\n\n  setEnd();\n\n  return element;\n};\n\nPopupContent.displayName = 'PopupContent';\n\nPopupContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  placement: PropTypes.oneOf<PopperJs.Placement>([\n    'auto-start',\n    'auto',\n    'auto-end',\n    'top-start',\n    'top',\n    'top-end',\n    'right-start',\n    'right',\n    'right-end',\n    'bottom-end',\n    'bottom',\n    'bottom-start',\n    'left-end',\n    'left',\n    'left-start',\n  ]),\n  pointing: PropTypes.bool,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pointerRef: customPropTypes.ref,\n  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  autoFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  autoSize: PropTypes.oneOf<AutoSize>(AUTOSIZES),\n};\nPopupContent.handledProps = Object.keys(PopupContent.propTypes) as any;\n\nPopupContent.create = createShorthandFactory({ Component: PopupContent, mappedProp: 'content' });\n"],"file":"PopupContent.js"}