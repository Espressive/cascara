{"version":3,"sources":["components/List/List.tsx"],"names":["listClassName","List","props","context","displayName","telemetry","setStart","setEnd","accessibility","as","children","className","debug","design","horizontal","items","navigable","selectable","styles","truncateContent","truncateHeader","variables","wrap","defaultValue","defaultSelectedIndex","value","selectedIndex","initialValue","setSelectedIndex","getA11Props","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","isListTag","mapPropsToInlineStyles","classes","latestProps","React","useRef","current","ElementType","unhandledProps","handledProps","hasContent","length","onItemClick","useCallback","e","itemIndex","childProps","renderItems","item","index","ListItem","create","defaultProps","element","unstable_wrapWithFocusZone","root","rtlTextContainer","getAttributes","forElements","listBehavior","propTypes","commonPropTypes","createCommon","content","PropTypes","bool","customPropTypes","collectionShorthand","every","disallow","number","onSelectedIndexChange","func","Object","keys","Item","ItemContent","ListItemContent","ItemContentMedia","ListItemContentMedia","ItemEndMedia","ListItemEndMedia","ItemHeader","ListItemHeader","ItemHeaderMedia","ListItemHeaderMedia","ItemMedia","ListItemMedia","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import { Accessibility, listBehavior, ListBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useAutoControlled,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ComponentEventHandler, ShorthandCollection, ReactChildren, FluentComponentStaticProps } from '../../types';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { ListContextProvider, ListContextValue } from './listContext';\nimport { ListItem, ListItemProps } from './ListItem';\nimport { ListItemContent } from './ListItemContent';\nimport { ListItemContentMedia } from './ListItemContentMedia';\nimport { ListItemEndMedia } from './ListItemEndMedia';\nimport { ListItemHeader } from './ListItemHeader';\nimport { ListItemHeaderMedia } from './ListItemHeaderMedia';\nimport { ListItemMedia } from './ListItemMedia';\n\nexport interface ListProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ListBehaviorProps>;\n\n  /** Toggle debug mode */\n  debug?: boolean;\n\n  /** Shorthand array of props for ListItem. */\n  items?: ShorthandCollection<ListItemProps>;\n\n  /** A selectable list formats list items as possible choices. */\n  selectable?: boolean;\n\n  /** A navigable list allows user to navigate through items. */\n  navigable?: boolean;\n\n  /** Index of the currently selected item. */\n  selectedIndex?: number;\n\n  /** Initial selectedIndex value. */\n  defaultSelectedIndex?: number;\n\n  /**\n   * Event for request to change 'selectedIndex' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onSelectedIndexChange?: ComponentEventHandler<ListProps>;\n\n  /** Truncates content */\n  truncateContent?: boolean;\n\n  /** Truncates header */\n  truncateHeader?: boolean;\n\n  /** A horizontal list displays elements horizontally. */\n  horizontal?: boolean;\n\n  /** An optional wrapper function. */\n  wrap?: (children: ReactChildren) => React.ReactNode;\n}\n\nexport type ListStylesProps = Pick<ListProps, 'debug' | 'horizontal'> & { isListTag: boolean };\nexport const listClassName = 'ui-list';\n\n/**\n * A List displays a group of related sequential items.\n *\n * @accessibility\n * List may follow one of the following accessibility semantics:\n * - Static non-navigable list. Implements [ARIA list](https://www.w3.org/TR/wai-aria-1.1/#list) role.\n * - Selectable list: allows the user to select item from a list of choices. Implements [ARIA Listbox](https://www.w3.org/TR/wai-aria-practices-1.1/#Listbox) design pattern.\n * @accessibilityIssues\n * [NVDA - Browse Mode does not work with listbox #12350](https://github.com/nvaccess/nvda/issues/12350)\n * [JAWS - Listbox options are not reachable in Virtual Cursor PC mode #517](https://github.com/FreedomScientific/VFO-standards-support/issues/517)\n * [JAWS - Aria-selected is not narrated for the single-select listbox, when selection is NOT moved with focus #440](https://github.com/FreedomScientific/VFO-standards-support/issues/440)\n */\nexport const List: ComponentWithAs<'ul', ListProps> &\n  FluentComponentStaticProps<ListProps> & {\n    Item: typeof ListItem;\n    ItemContent: typeof ListItemContent;\n    ItemContentMedia: typeof ListItemContentMedia;\n    ItemEndMedia: typeof ListItemEndMedia;\n    ItemHeader: typeof ListItemHeader;\n    ItemHeaderMedia: typeof ListItemHeaderMedia;\n    ItemMedia: typeof ListItemMedia;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(List.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    as,\n    children,\n    className,\n    debug,\n    design,\n    horizontal,\n    items,\n    navigable,\n    selectable,\n    styles,\n    truncateContent,\n    truncateHeader,\n    variables,\n    wrap,\n  } = props;\n\n  const [selectedIndex, setSelectedIndex] = useAutoControlled({\n    defaultValue: props.defaultSelectedIndex,\n    value: props.selectedIndex,\n    initialValue: -1,\n  });\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: List.displayName,\n    mapPropsToBehavior: () => ({\n      horizontal,\n      navigable,\n      selectable,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<ListStylesProps>(List.displayName, {\n    className: listClassName,\n    mapPropsToStyles: () => ({ isListTag: as === 'ol' || as === 'ul', debug, horizontal }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const latestProps = React.useRef<ListProps>(props);\n  latestProps.current = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(List.handledProps, props);\n\n  const hasContent = childrenExist(children) || (items && items.length > 0);\n  const onItemClick = React.useCallback(\n    (e, itemIndex) => {\n      if (latestProps.current.selectable) {\n        setSelectedIndex(itemIndex);\n        _.invoke(latestProps.current, 'onSelectedIndexChange', e, {\n          ...latestProps.current,\n          selectedIndex: itemIndex,\n        });\n      }\n    },\n    [latestProps, setSelectedIndex],\n  );\n\n  const childProps: ListContextValue = {\n    debug,\n    navigable,\n    onItemClick,\n    selectable,\n    selectedIndex,\n    truncateContent,\n    truncateHeader,\n    variables,\n  };\n  const renderItems = () => _.map(items, (item, index) => ListItem.create(item, { defaultProps: () => ({ index }) }));\n\n  const element = getA11Props.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      <ListContextProvider value={childProps}>\n        {hasContent && wrap(childrenExist(children) ? children : renderItems())}\n      </ListContextProvider>\n    </ElementType>,\n  );\n  setEnd();\n\n  return element;\n};\n\nList.displayName = 'List';\n\nList.defaultProps = {\n  as: 'ul',\n  accessibility: listBehavior,\n  wrap: children => children,\n};\nList.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  debug: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  selectable: customPropTypes.every([customPropTypes.disallow(['navigable']), PropTypes.bool]),\n  navigable: customPropTypes.every([customPropTypes.disallow(['selectable']), PropTypes.bool]),\n  truncateContent: PropTypes.bool,\n  truncateHeader: PropTypes.bool,\n  selectedIndex: PropTypes.number,\n  defaultSelectedIndex: PropTypes.number,\n  onSelectedIndexChange: PropTypes.func,\n  horizontal: PropTypes.bool,\n  wrap: PropTypes.func,\n};\n\nList.handledProps = Object.keys(List.propTypes) as any;\nList.Item = ListItem;\nList.ItemContent = ListItemContent;\nList.ItemContentMedia = ListItemContentMedia;\nList.ItemEndMedia = ListItemEndMedia;\nList.ItemHeader = ListItemHeader;\nList.ItemHeaderMedia = ListItemHeaderMedia;\nList.ItemMedia = ListItemMedia;\n\nList.create = createShorthandFactory({ Component: List, mappedArrayProp: 'items' });\n"],"file":"List.js"}