{"version":3,"sources":["components/Form/FormButton.tsx"],"names":["formButtonClassName","FormButton","_FormFieldBase","className","displayName","overrideStyles","slots","control","Button","propTypes","commonPropTypes","createCommon","content","children"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;AAUO,IAAMA,mBAAmB,GAAG,iBAA5B;AAEP;AACA;AACA;;;AACO,IAAMC,UAAU,GAAG,4BACxBC,6BADwB,EAExB;AACEC,EAAAA,SAAS,EAAEH,mBADb;AAEEI,EAAAA,WAAW,EAAE,YAFf;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEC;AADJ;AAJT,CAFwB,CAAnB;;AAYPP,UAAU,CAACQ,SAAX,GAAuBC,uBAAgBC,YAAhB,CAA6B;AAClDC,EAAAA,OAAO,EAAE,KADyC;AAClC;AAChBC,EAAAA,QAAQ,EAAE;AAFwC,CAA7B,CAAvB","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { _FormFieldBase, FormFieldBaseProps } from './utils/formFieldBase';\n\ninterface FormButtonOwnProps extends ButtonProps {}\ntype SelectedFormFieldCustomProps = Omit<\n  FormFieldBaseProps,\n  'control' | 'styles' | 'accessibility' | 'design' | 'variables'\n>;\nexport interface FormButtonProps extends SelectedFormFieldCustomProps, FormButtonOwnProps {}\nexport type FormButtonStylesProps = never;\n\nexport const formButtonClassName = 'ui-form__button';\n\n/**\n * An FormButton renders a Button wrapped by FormField.\n */\nexport const FormButton = compose<'div', FormButtonProps, FormButtonStylesProps, SelectedFormFieldCustomProps, {}>(\n  _FormFieldBase,\n  {\n    className: formButtonClassName,\n    displayName: 'FormButton',\n    overrideStyles: true,\n    slots: {\n      control: Button,\n    },\n  },\n);\n\nFormButton.propTypes = commonPropTypes.createCommon({\n  content: false, // Should be `true`, but will be passed via unhandled props to a Button\n  children: false,\n});\n"],"file":"FormButton.js"}