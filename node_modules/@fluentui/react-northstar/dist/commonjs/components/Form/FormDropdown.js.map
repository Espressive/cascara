{"version":3,"sources":["components/Form/FormDropdown.tsx"],"names":["formDropdownClassName","FormDropdown","_FormFieldBase","className","displayName","overrideStyles","slots","control","Dropdown","slotProps","errorMessage","inline","message","error","propTypes","commonPropTypes","createCommon","accessibility","children","content"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;AAUO,IAAMA,qBAAqB,GAAG,mBAA9B;AAEP;AACA;AACA;;;AACO,IAAMC,YAAY,GAAG,4BAC1BC,6BAD0B,EAE1B;AACEC,EAAAA,SAAS,EAAEH,qBADb;AAEEI,EAAAA,WAAW,EAAE,cAFf;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEC;AADJ,GAJT;AAOEC,EAAAA,SAAS,EAAE;AAAA,QAAGC,YAAH,QAAGA,YAAH;AAAA,QAAiBC,MAAjB,QAAiBA,MAAjB;AAAA,WAA+B;AACxCJ,MAAAA,OAAO,EAAE;AACPI,QAAAA,MAAM,EAANA;AADO,OAD+B;AAIxCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,CAAC,CAACH;AADF;AAJ+B,KAA/B;AAAA;AAPb,CAF0B,CAArB;;AAoBPT,YAAY,CAACa,SAAb,GAAyBC,uBAAgBC,YAAhB,CAA6B;AACpDC,EAAAA,aAAa,EAAE,KADqC;AAEpDC,EAAAA,QAAQ,EAAE,KAF0C;AAGpDC,EAAAA,OAAO,EAAE;AAH2C,CAA7B,CAAzB","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport { Dropdown, DropdownProps } from '../Dropdown/Dropdown';\nimport { _FormFieldBase, FormFieldBaseProps } from './utils/formFieldBase';\n\ninterface FormDropdownOwnProps extends DropdownProps {}\ntype SelectedFormFieldCustomProps = Omit<\n  FormFieldBaseProps,\n  'control' | 'styles' | 'accessibility' | 'design' | 'variables'\n>;\nexport interface FormDropdownProps extends SelectedFormFieldCustomProps, FormDropdownOwnProps {}\nexport type FormDropdownStylesProps = never;\n\nexport const formDropdownClassName = 'ui-form__dropdown';\n\n/**\n * An FormDropdown renders a Dropdown wrapped by FormField.\n */\nexport const FormDropdown = compose<'div', DropdownProps, FormDropdownStylesProps, SelectedFormFieldCustomProps, {}>(\n  _FormFieldBase,\n  {\n    className: formDropdownClassName,\n    displayName: 'FormDropdown',\n    overrideStyles: true,\n    slots: {\n      control: Dropdown,\n    },\n    slotProps: ({ errorMessage, inline }) => ({\n      control: {\n        inline,\n      },\n      message: {\n        error: !!errorMessage,\n      },\n    }),\n  },\n);\n\nFormDropdown.propTypes = commonPropTypes.createCommon({\n  accessibility: false,\n  children: false,\n  content: false,\n});\n"],"file":"FormDropdown.js"}