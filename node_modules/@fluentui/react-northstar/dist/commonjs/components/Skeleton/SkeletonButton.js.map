{"version":3,"sources":["components/Skeleton/SkeletonButton.tsx"],"names":["skeletonButtonClassName","SkeletonButton","SkeletonShape","className","displayName","overrideStyles","shorthandConfig","handledProps","mapPropsToStylesProps","size","fluid","iconOnly","circular","propTypes","commonPropTypes","createCommon","customPropTypes","PropTypes","bool","defaultProps","as"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAoBO,IAAMA,uBAAuB,GAAG,qBAAhC;AAEP;AACA;AACA;;;AACO,IAAMC,cAAc,GAAG,4BAM5BC,4BAN4B,EAMb;AACfC,EAAAA,SAAS,EAAEH,uBADI;AAEfI,EAAAA,WAAW,EAAE,gBAFE;AAGfC,EAAAA,cAAc,EAAE,IAHD;AAIfC,EAAAA,eAAe,EAAE,EAJF;AAKfC,EAAAA,YAAY,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,UAArB,EAAiC,OAAjC,CALC;AAMfC,EAAAA,qBAAqB,EAAE;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,KAAT,QAASA,KAAT;AAAA,QAAgBC,QAAhB,QAAgBA,QAAhB;AAAA,QAA0BC,QAA1B,QAA0BA,QAA1B;AAAA,WAA0C;AAC/DH,MAAAA,IAAI,EAAJA,IAD+D;AAE/DC,MAAAA,KAAK,EAALA,KAF+D;AAG/DC,MAAAA,QAAQ,EAARA,QAH+D;AAI/DC,MAAAA,QAAQ,EAARA;AAJ+D,KAA1C;AAAA;AANR,CANa,CAAvB;;AAoBPX,cAAc,CAACY,SAAf,qBACKC,uBAAgBC,YAAhB,EADL;AAEEN,EAAAA,IAAI,EAAEO,eAAe,CAACP,IAFxB;AAGEG,EAAAA,QAAQ,EAAEK,SAAS,CAACC,IAHtB;AAIEP,EAAAA,QAAQ,EAAEM,SAAS,CAACC,IAJtB;AAKER,EAAAA,KAAK,EAAEO,SAAS,CAACC;AALnB;AAQAjB,cAAc,CAACkB,YAAf,GAA8B;AAC5BC,EAAAA,EAAE,EAAE,MADwB;AAE5BX,EAAAA,IAAI,EAAE;AAFsB,CAA9B","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes, SizeValue } from '../../utils';\nimport { SkeletonShapeProps, SkeletonShapeStylesProps, SkeletonShape } from './SkeletonShape';\n\nexport interface SkeletonButtonOwnProps {\n  /** A skeleton button can be sized. */\n  size?: SizeValue;\n\n  /** A skeleton button can fill the width of its container. */\n  fluid?: boolean;\n\n  /** A skeleton button can appear circular. */\n  circular?: boolean;\n\n  /** A skeleton button can contain only an icon. */\n  iconOnly?: boolean;\n}\nexport interface SkeletonButtonProps extends SkeletonButtonOwnProps, SkeletonShapeProps {}\n\nexport type SkeletonButtonStylesProps = Required<\n  Pick<SkeletonButtonOwnProps, 'size' | 'fluid' | 'circular' | 'iconOnly'>\n>;\nexport const skeletonButtonClassName = 'ui-skeleton__button';\n\n/**\n * An SkeletonButton represents a buton component that will be loaded\n */\nexport const SkeletonButton = compose<\n  'span',\n  SkeletonButtonOwnProps,\n  SkeletonButtonStylesProps,\n  SkeletonShapeProps,\n  SkeletonShapeStylesProps\n>(SkeletonShape, {\n  className: skeletonButtonClassName,\n  displayName: 'SkeletonButton',\n  overrideStyles: true,\n  shorthandConfig: {},\n  handledProps: ['size', 'circular', 'iconOnly', 'fluid'],\n  mapPropsToStylesProps: ({ size, fluid, iconOnly, circular }) => ({\n    size,\n    fluid,\n    iconOnly,\n    circular,\n  }),\n});\n\nSkeletonButton.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nSkeletonButton.defaultProps = {\n  as: 'span',\n  size: 'medium',\n};\n"],"file":"SkeletonButton.js"}