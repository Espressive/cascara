{"version":3,"sources":["components/Embed/Embed.tsx"],"names":["embedClassName","embedSlotClassNames","control","Embed","props","context","displayName","telemetry","setStart","setEnd","alt","title","iframe","placeholder","video","variables","styles","className","design","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","performClick","event","handleClick","mapPropsToBehavior","rtl","defaultValue","defaultActive","value","active","initialValue","setACtive","React","useState","iframeLoaded","setIframeLoaded","frameRef","useRef","e","stopPropagation","preventDefault","iframeNil","newActive","handleFrameOverrides","predefinedProps","onLoad","current","contentWindow","focus","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","placeholderElement","image","width","height","hasIframe","hasVideo","controlVisible","placeholderVisible","element","root","onClick","Video","create","defaultProps","autoPlay","controls","loop","muted","poster","Box","as","overrideProps","propTypes","commonPropTypes","createCommon","children","content","PropTypes","bool","customPropTypes","itemShorthand","every","disallow","onActiveChange","func","string","embedBehavior","Object","keys","Component"],"mappings":"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","sourcesContent":["import { Accessibility, embedBehavior, EmbedBehaviorProps } from '@fluentui/accessibility';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport { createShorthandFactory, UIComponentProps, commonPropTypes } from '../../utils';\nimport { Image } from '../Image/Image';\nimport { Video, VideoProps } from '../Video/Video';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Ref } from '@fluentui/react-component-ref';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAutoControlled,\n  useAccessibility,\n  useTelemetry,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface EmbedSlotClassNames {\n  control: string;\n}\n\nexport interface EmbedProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<EmbedBehaviorProps>;\n\n  /** Alternative text. */\n  alt?: string;\n\n  /** Corresponds to HTML title attribute. */\n  title?: string;\n\n  /** Whether the embedded object should be active. */\n  active?: boolean;\n\n  /** Whether the embedded object should start active. */\n  defaultActive?: boolean;\n\n  /** Shorthand for an control. */\n  control?: ShorthandValue<BoxProps>;\n\n  /** Shorthand for an embedded iframe. */\n  iframe?: ShorthandValue<BoxProps>;\n\n  /**\n   * Event for request to change 'active' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onActiveChange?: ComponentEventHandler<EmbedProps>;\n\n  /**\n   * Called when is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onClick?: ComponentEventHandler<EmbedProps>;\n\n  /** Image source URL for when video isn't playing. */\n  placeholder?: string;\n\n  /** Shorthand for an embedded video. */\n  video?: ShorthandValue<VideoProps>;\n}\n\nexport const embedClassName = 'ui-embed';\nexport const embedSlotClassNames: EmbedSlotClassNames = {\n  control: `${embedClassName}__control`,\n};\n\nexport type EmbedStylesProps = Required<Pick<EmbedProps, 'active'>> & { iframeLoaded: boolean };\n\n/**\n * An Embed displays content from external websites, like a post from external social network.\n *\n * @accessibility\n * A `placeholder` slot represents an [`Image`](/components/image/definition) component, please follow recommendations from its\n * accessibility section.\n */\nexport const Embed: ComponentWithAs<'span', EmbedProps> & FluentComponentStaticProps<EmbedProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Embed.displayName, context.telemetry);\n  setStart();\n  const { alt, title, control, iframe, placeholder, video, variables, styles, className, design } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Embed.handledProps, props);\n\n  const getA11yProps = useAccessibility<EmbedBehaviorProps>(props.accessibility, {\n    debugName: Embed.displayName,\n    actionHandlers: {\n      performClick: event => handleClick(event),\n    },\n    mapPropsToBehavior: () => ({\n      alt,\n      title,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [active, setACtive] = useAutoControlled({\n    defaultValue: props.defaultActive,\n    value: props.active,\n    initialValue: false,\n  });\n\n  const [iframeLoaded, setIframeLoaded] = React.useState(false);\n  const frameRef = React.useRef<HTMLFrameElement>();\n\n  const handleClick = e => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const iframeNil = _.isNil(props.iframe);\n    const newActive = !active;\n\n    if (iframeNil || (!iframeNil && newActive)) {\n      setACtive(newActive);\n      _.invoke(props, 'onActiveChange', e, { ...props, active: newActive });\n    }\n\n    _.invoke(props, 'onClick', e, { ...props, active: newActive });\n  };\n\n  const handleFrameOverrides = predefinedProps => ({\n    onLoad: (e: React.SyntheticEvent) => {\n      _.invoke(predefinedProps, 'onLoad', e);\n      setIframeLoaded(true);\n      frameRef.current.contentWindow.focus();\n    },\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<EmbedStylesProps>(Embed.displayName, {\n    className: embedClassName,\n    mapPropsToStyles: () => ({\n      iframeLoaded,\n      active,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const placeholderElement = placeholder ? (\n    <Image\n      src={placeholder}\n      styles={resolvedStyles.image}\n      variables={{ width: variables.width, height: variables.height }}\n    />\n  ) : null;\n\n  const hasIframe = !_.isNil(iframe);\n  const hasVideo = !_.isNil(video);\n  const controlVisible = !active || hasVideo;\n  const placeholderVisible = !active || (hasIframe && active && !iframeLoaded);\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ...unhandledProps,\n      })}\n    >\n      {active && (\n        <>\n          {Video.create(video, {\n            defaultProps: () =>\n              getA11yProps('video', {\n                autoPlay: true,\n                controls: false,\n                loop: true,\n                muted: true,\n                poster: placeholder,\n                styles: resolvedStyles.video,\n                variables: {\n                  width: variables.width,\n                  height: variables.height,\n                },\n              }),\n          })}\n          {iframe && (\n            <Ref innerRef={frameRef}>\n              {Box.create(iframe, {\n                defaultProps: () =>\n                  getA11yProps('iframe', {\n                    as: 'iframe',\n                    styles: resolvedStyles.iframe,\n                  }),\n                overrideProps: handleFrameOverrides,\n              })}\n            </Ref>\n          )}\n        </>\n      )}\n\n      {placeholderVisible && placeholderElement}\n      {controlVisible &&\n        Box.create(control, {\n          defaultProps: () =>\n            getA11yProps('control', {\n              className: embedSlotClassNames.control,\n              styles: resolvedStyles.control,\n            }),\n        })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nEmbed.displayName = 'Embed';\n\nEmbed.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  active: PropTypes.bool,\n  defaultActive: PropTypes.bool,\n  control: customPropTypes.itemShorthand,\n  iframe: customPropTypes.every([customPropTypes.disallow(['video']), customPropTypes.itemShorthand]),\n  onActiveChange: PropTypes.func,\n  onClick: PropTypes.func,\n  placeholder: PropTypes.string,\n  video: customPropTypes.every([customPropTypes.disallow(['iframe']), customPropTypes.itemShorthand]),\n};\n\nEmbed.defaultProps = {\n  as: 'span',\n  accessibility: embedBehavior,\n  control: {},\n  variables: {},\n};\n\nEmbed.handledProps = Object.keys(Embed.propTypes) as any;\n\nEmbed.create = createShorthandFactory({ Component: Embed });\n"],"file":"Embed.js"}