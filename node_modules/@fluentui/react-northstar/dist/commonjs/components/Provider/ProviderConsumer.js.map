{"version":3,"sources":["components/Provider/ProviderConsumer.tsx"],"names":["ProviderConsumer","props","render","context","theme","displayName","propTypes","PropTypes","func","isRequired"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAUA;AACA;AACA;AACO,IAAMA,gBAAgE,GAAG,SAAnEA,gBAAmE,CAAAC,KAAK,EAAI;AAAA,MAC/EC,MAD+E,GACpED,KADoE,CAC/EC,MAD+E;AAEvF,MAAMC,OAAO,GAAG,sCAAhB;AAEA,sBAAO,0CAAGD,MAAM,CAACC,OAAO,CAACC,KAAT,CAAT,CAAP;AACD,CALM;;;AAOPJ,gBAAgB,CAACK,WAAjB,GAA+B,kBAA/B;AACAL,gBAAgB,CAACM,SAAjB,GAA6B;AAC3BJ,EAAAA,MAAM,EAAEK,SAAS,CAACC,IAAV,CAAeC;AADI,CAA7B","sourcesContent":["import { useFluentContext } from '@fluentui/react-bindings';\nimport { ThemePrepared } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nexport interface ProviderConsumerProps {\n  /**\n   * Uses the function children pattern to access theme.\n   * `theme.siteVariables` contains the siteVariables passed from the nearest Provider.\n   */\n  render: (theme: ThemePrepared) => React.ReactNode;\n}\n\n/**\n * A ProviderConsumer is used to consume Fluent UI context from Provider.\n */\nexport const ProviderConsumer: React.FunctionComponent<ProviderConsumerProps> = props => {\n  const { render } = props;\n  const context = useFluentContext();\n\n  return <>{render(context.theme)}</>;\n};\n\nProviderConsumer.displayName = 'ProviderConsumer';\nProviderConsumer.propTypes = {\n  render: PropTypes.func.isRequired,\n};\n"],"file":"ProviderConsumer.js"}