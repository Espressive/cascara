{"version":3,"sources":["components/Header/HeaderDescription.tsx"],"names":["headerDescriptionClassName","HeaderDescription","props","context","displayName","telemetry","setStart","setEnd","children","content","color","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","defaultProps","as","Object","keys","create","Component","mappedProp"],"mappings":";;;;;;;AACA;;AAEA;;AAYA;;AAqBO,IAAMA,0BAA0B,GAAG,wBAAnC;;;AAGP;AACA;AACA;AACO,IAAMC,iBACuC,GAAG,SAD1CA,iBAC0C,CAAAC,KAAK,EAAI;AAC9D,MAAMC,OAAO,GAAG,sCAAhB;;AAD8D,sBAEjC,iCAAaF,iBAAiB,CAACG,WAA/B,EAA4CD,OAAO,CAACE,SAApD,CAFiC;AAAA,MAEtDC,QAFsD,iBAEtDA,QAFsD;AAAA,MAE5CC,MAF4C,iBAE5CA,MAF4C;;AAG9DD,EAAAA,QAAQ;AAHsD,MAItDE,QAJsD,GAIaN,KAJb,CAItDM,QAJsD;AAAA,MAI5CC,OAJ4C,GAIaP,KAJb,CAI5CO,OAJ4C;AAAA,MAInCC,KAJmC,GAIaR,KAJb,CAInCQ,KAJmC;AAAA,MAI5BC,SAJ4B,GAIaT,KAJb,CAI5BS,SAJ4B;AAAA,MAIjBC,MAJiB,GAIaV,KAJb,CAIjBU,MAJiB;AAAA,MAITC,MAJS,GAIaX,KAJb,CAITW,MAJS;AAAA,MAIDC,SAJC,GAIaZ,KAJb,CAIDY,SAJC;AAK9D,MAAMC,WAAW,GAAG,mCAAeb,KAAf,CAApB;AACA,MAAMc,cAAc,GAAG,sCAAkBf,iBAAiB,CAACgB,YAApC,EAAkDf,KAAlD,CAAvB;AAEA,MAAMgB,YAAY,GAAG,qCAAwBhB,KAAK,CAACiB,aAA9B,EAA6C;AAChEC,IAAAA,SAAS,EAAEnB,iBAAiB,CAACG,WADmC;AAEhEiB,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AAFmD,GAA7C,CAArB;;AAR8D,mBAa1C,8BAAwCpB,iBAAiB,CAACG,WAA1D,EAAuE;AACzFO,IAAAA,SAAS,EAAEX,0BAD8E;AAEzFsB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBZ,QAAAA,KAAK,EAALA;AADuB,OAAP;AAAA,KAFuE;AAKzFa,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BZ,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KALiE;AAWzFO,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AAX4E,GAAvE,CAb0C;AAAA,MAatDG,OAbsD,cAatDA,OAbsD;;AA2B9D,MAAMC,OAAO,gBACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdP,IAAAA,SAAS,EAAEa,OAAO,CAACE;AADL,KAEXV,cAFW,EAGXW,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAACrB,QAAD,EAAWC,OAAX;AAAf,GAA/B,CAHW,EADlB,EAOG,0BAAcD,QAAd,IAA0BA,QAA1B,GAAqCC,OAPxC,CADF;AAWAF,EAAAA,MAAM;AACN,SAAOkB,OAAP;AACD,CAzCM;;;AA2CPxB,iBAAiB,CAACG,WAAlB,GAAgC,mBAAhC;AAEAH,iBAAiB,CAAC6B,SAAlB,qBACKC,uBAAgBC,YAAhB,CAA6B;AAAEtB,EAAAA,KAAK,EAAE;AAAT,CAA7B,CADL;AAIAT,iBAAiB,CAACgC,YAAlB,GAAiC;AAC/BC,EAAAA,EAAE,EAAE;AAD2B,CAAjC;AAIAjC,iBAAiB,CAACgB,YAAlB,GAAiCkB,MAAM,CAACC,IAAP,CAAYnC,iBAAiB,CAAC6B,SAA9B,CAAjC;AAEA7B,iBAAiB,CAACoC,MAAlB,GAA2B,mCAAuB;AAChDC,EAAAA,SAAS,EAAErC,iBADqC;AAEhDsC,EAAAA,UAAU,EAAE;AAFoC,CAAvB,CAA3B","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface HeaderDescriptionProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport const headerDescriptionClassName = 'ui-header__description';\nexport type HeaderDescriptionStylesProps = Pick<HeaderDescriptionProps, 'color'>;\n\n/**\n * A HeaderDescription provides more detailed information about the Header.\n */\nexport const HeaderDescription: ComponentWithAs<'p', HeaderDescriptionProps> &\n  FluentComponentStaticProps<HeaderDescriptionProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(HeaderDescription.displayName, context.telemetry);\n  setStart();\n  const { children, content, color, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(HeaderDescription.handledProps, props);\n\n  const getA11yProps = useAccessibility<never>(props.accessibility, {\n    debugName: HeaderDescription.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<HeaderDescriptionStylesProps>(HeaderDescription.displayName, {\n    className: headerDescriptionClassName,\n    mapPropsToStyles: () => ({\n      color,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nHeaderDescription.displayName = 'HeaderDescription';\n\nHeaderDescription.propTypes = {\n  ...commonPropTypes.createCommon({ color: true }),\n};\n\nHeaderDescription.defaultProps = {\n  as: 'p',\n};\n\nHeaderDescription.handledProps = Object.keys(HeaderDescription.propTypes) as any;\n\nHeaderDescription.create = createShorthandFactory({\n  Component: HeaderDescription,\n  mappedProp: 'content',\n});\n"],"file":"HeaderDescription.js"}