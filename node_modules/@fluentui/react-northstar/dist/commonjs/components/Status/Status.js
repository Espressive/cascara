"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.Status = exports.statusClassName = void 0;

var _accessibility = require("@fluentui/accessibility");

var _reactBindings = require("@fluentui/react-bindings");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _Box = require("../Box/Box");

var statusClassName = 'ui-status';
/**
 * A Status represents someone's or something's state.
 *
 * @accessibility
 * Implements [ARIA img](https://www.w3.org/TR/wai-aria-1.1/#img) role.
 */

exports.statusClassName = statusClassName;

var Status = function Status(props) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(Status.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var className = props.className,
      color = props.color,
      icon = props.icon,
      size = props.size,
      state = props.state,
      design = props.design,
      styles = props.styles,
      variables = props.variables;

  var _useStyles = (0, _reactBindings.useStyles)(Status.displayName, {
    className: statusClassName,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        color: color,
        size: size,
        state: state
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes,
      resolvedStyles = _useStyles.styles;

  var getA11Props = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: Status.displayName,
    rtl: context.rtl
  });
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(Status.handledProps, props);

  var iconElement = _Box.Box.create(icon, {
    defaultProps: function defaultProps() {
      return getA11Props('icon', {
        styles: resolvedStyles.icon,
        as: 'span'
      });
    }
  });

  var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
    className: classes.root
  }, unhandledProps)), iconElement);
  setEnd();
  return element;
};

exports.Status = Status;
Status.displayName = 'Status';
Status.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon({
  children: false,
  content: false
}), {
  color: PropTypes.string,
  icon: customPropTypes.shorthandAllowingChildren,
  size: customPropTypes.size,
  state: PropTypes.oneOf(['success', 'info', 'warning', 'error', 'unknown'])
});
Status.handledProps = Object.keys(Status.propTypes);
Status.defaultProps = {
  accessibility: _accessibility.statusBehavior,
  as: 'span',
  size: 'medium',
  state: 'unknown'
};
Status.create = (0, _utils.createShorthandFactory)({
  Component: Status,
  mappedProp: 'state'
});
//# sourceMappingURL=Status.js.map
