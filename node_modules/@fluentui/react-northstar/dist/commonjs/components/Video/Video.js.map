{"version":3,"sources":["components/Video/Video.tsx"],"names":["videoClassName","Video","props","context","displayName","telemetry","setStart","setEnd","controls","autoPlay","loop","poster","src","muted","variables","className","design","styles","videoRef","React","useRef","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","useEffect","current","mapPropsToInlineStyles","classes","element","root","create","Component","mappedProp","propTypes","commonPropTypes","createCommon","children","content","PropTypes","bool","string","defaultProps","as","videoBehavior","Object","keys"],"mappings":"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","sourcesContent":["import { Ref } from '@fluentui/react-component-ref';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { Accessibility, VideoBehaviorProps, videoBehavior } from '@fluentui/accessibility';\nimport { createShorthandFactory, UIComponentProps, commonPropTypes } from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useStyles,\n  useFluentContext,\n  useUnhandledProps,\n  useTelemetry,\n  useAccessibility,\n} from '@fluentui/react-bindings';\n\nexport interface VideoProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<VideoBehaviorProps>;\n\n  /** Whether the video should start playing when rendered. Autoplay videos must be muted or they will not play immediately in certain browers like Chrome. */\n  autoPlay?: boolean;\n\n  /** Whether to display the native video controls. */\n  controls?: boolean;\n\n  /** Whether the video should automatically restart after it ends. */\n  loop?: boolean;\n\n  /** Whether the video should be allowed to play audio. */\n  muted?: boolean;\n\n  /** Image source URL for when video isn't playing. */\n  poster?: string;\n\n  /** Video source URL. */\n  src?: string;\n}\n\nexport const videoClassName = 'ui-video';\n\nexport type VideoStylesProps = Required<Pick<VideoProps, 'variables'>>;\n\n/**\n * A Video provides ability to embed video content.\n */\nexport const Video: ComponentWithAs<'video', VideoProps> & FluentComponentStaticProps<VideoProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Video.displayName, context.telemetry);\n  setStart();\n\n  const { controls, autoPlay, loop, poster, src, muted, variables, className, design, styles } = props;\n  const videoRef = React.useRef<HTMLVideoElement>();\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Video.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Video.displayName,\n  });\n\n  React.useEffect(() => {\n    // this is a workaround for a potential memory leak in Chromium which retains a Detached HTMLVideoElement when <video autoplay> is unmounted\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=969049\n    return () => {\n      if (videoRef.current) {\n        // we want to perform the cleanup on the latest element rendered\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        videoRef.current.src = '';\n      }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    // React doesn't guaranty that props will be set:\n    // https://github.com/facebook/react/issues/10389\n    if (videoRef.current) {\n      videoRef.current.muted = !!muted;\n    }\n  }, [muted]);\n\n  const { classes } = useStyles<VideoStylesProps>(Video.displayName, {\n    className: videoClassName,\n    mapPropsToInlineStyles: () => ({ className, variables, design, styles }),\n  });\n\n  const element = (\n    <Ref innerRef={videoRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          autoPlay,\n          controls,\n          loop,\n          poster,\n          src,\n          ...unhandledProps,\n        })}\n      />\n    </Ref>\n  );\n  setEnd();\n  return element;\n};\n\nVideo.create = createShorthandFactory({ Component: Video, mappedProp: 'src' });\n\nVideo.displayName = 'Video';\n\nVideo.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  autoPlay: PropTypes.bool,\n  controls: PropTypes.bool,\n  loop: PropTypes.bool,\n  muted: PropTypes.bool,\n  poster: PropTypes.string,\n  src: PropTypes.string,\n};\n\nVideo.defaultProps = {\n  as: 'video',\n  accessibility: videoBehavior,\n  controls: true,\n  autoPlay: false,\n  muted: false,\n};\n\nVideo.handledProps = Object.keys(Video.propTypes) as any;\n"],"file":"Video.js"}