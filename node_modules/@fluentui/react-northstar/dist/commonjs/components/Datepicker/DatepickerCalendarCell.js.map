{"version":3,"sources":["components/Datepicker/DatepickerCalendarCell.tsx"],"names":["datepickerCalendarCellClassName","DatepickerCalendarCell","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","disabled","selected","quiet","today","content","unhandledProps","handledProps","ElementType","getA11yProps","accessibility","debugName","actionHandlers","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","element","root","propTypes","commonPropTypes","createCommon","children","PropTypes","bool","defaultProps","datepickerCalendarCellBehavior","as"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  datepickerCalendarCellBehavior,\n  DatepickerCalendarCellBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  useUnhandledProps,\n  compose,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { commonPropTypes, ContentComponentProps, UIComponentProps } from '../../utils';\n\nexport interface DatepickerCalendarCellProps extends UIComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<DatepickerCalendarCellBehaviorProps>;\n\n  /** A cell can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A cell can show that it is currently selected or not. */\n  selected?: boolean;\n\n  /** Denotes that the cell marks today's date. */\n  today?: boolean;\n\n  /** A cell can show that it currently has dimmed styles. */\n  quiet?: boolean;\n}\n\nexport type DatepickerCalendarCellStylesProps = Pick<\n  DatepickerCalendarCellProps,\n  'disabled' | 'selected' | 'quiet' | 'today'\n>;\n\nexport const datepickerCalendarCellClassName = 'ui-datepicker__calendarcell';\n/**\n * A Datepicker cell is used to display calendar grid cells.\n */\nexport const DatepickerCalendarCell = compose<\n  'td',\n  DatepickerCalendarCellProps,\n  DatepickerCalendarCellStylesProps,\n  {},\n  {}\n>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { className, design, styles, variables, disabled, selected, quiet, today, content } = props;\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const ElementType = getElementType(props);\n    const getA11yProps = useAccessibility(props.accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {},\n      mapPropsToBehavior: () => ({\n        selected,\n        disabled,\n        quiet,\n        today,\n      }),\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<DatepickerCalendarCellStylesProps>(DatepickerCalendarCell.displayName, {\n      className: composeOptions.className,\n      mapPropsToStyles: () => ({\n        disabled,\n        selected,\n        quiet,\n        today,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: props,\n    });\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {content}\n      </ElementType>\n    );\n    setEnd();\n    return element;\n  },\n  {\n    className: datepickerCalendarCellClassName,\n    displayName: 'DatepickerCalendarCell',\n\n    handledProps: [\n      'accessibility',\n      'as',\n      'className',\n      'content',\n      'design',\n      'disabled',\n      'selected',\n      'styles',\n      'variables',\n      'quiet',\n      'today',\n    ],\n  },\n);\n\nDatepickerCalendarCell.propTypes = {\n  ...commonPropTypes.createCommon({ children: false }),\n  disabled: PropTypes.bool,\n  selected: PropTypes.bool,\n  quiet: PropTypes.bool,\n  today: PropTypes.bool,\n};\n\nDatepickerCalendarCell.defaultProps = {\n  accessibility: datepickerCalendarCellBehavior,\n  as: 'td',\n};\n"],"file":"DatepickerCalendarCell.js"}