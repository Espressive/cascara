{"version":3,"sources":["components/Toolbar/ToolbarItem.tsx"],"names":["toolbarItemClassName","ToolbarItem","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","active","className","design","icon","children","disabled","popup","menuOpen","wrapper","styles","variables","menu","positioningProps","itemRef","React","useRef","menuRef","parentVariables","useContext","ToolbarVariablesContext","mergedVariables","ToolbarMenuContext","menuSlot","v","slots","getA11yProps","debugName","actionHandlers","performClick","event","preventDefault","handleClick","performWrapperClick","handleWrapperClick","closeMenuAndFocusTrigger","trySetMenuOpen","current","doNotNavigateNextToolbarItem","stopPropagation","mapPropsToBehavior","as","String","hasMenu","hasPopup","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","handleBlur","e","handleFocus","nativeEvent","target","handleOutsideClick","getRefs","isItemClick","isNestedClick","childRef","isInside","newValue","handleMenuOverrides","predefinedProps","onBlur","isInsideOrMenuTrigger","contains","relatedTarget","onItemClick","itemProps","ElementType","slotProps","resolveSlotProps","unhandledProps","handledProps","itemElement","node","root","onFocus","onClick","submenuElement","nestingRef","ToolbarMenu","defaultProps","overrideProps","popupElement","trigger","undefined","contentElement","wrapperElement","ToolbarItemIcon","ToolbarItemWrapper","Popup","trapFocus","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","PropTypes","bool","customPropTypes","shorthandAllowingChildren","oneOfType","arrayOf","onMenuOpenChange","func","shape","never","string","toolbarItemBehavior"],"mappings":"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","sourcesContent":["import { Accessibility, toolbarItemBehavior, ToolbarItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useContextSelectors,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { GetRefs, NodeRef, Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthand,\n  doesNodeContainClick,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection } from '../../types';\nimport { partitionPopperPropsFromShorthand, Popper, PopperShorthandProps } from '../../utils/positioner';\n\nimport { ToolbarMenu, ToolbarMenuProps } from './ToolbarMenu';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { ToolbarMenuItemProps } from '../Toolbar/ToolbarMenuItem';\nimport { ToolbarItemShorthandKinds } from './Toolbar';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarItemWrapper, ToolbarItemWrapperProps } from './ToolbarItemWrapper';\nimport { ToolbarItemIcon, ToolbarItemIconProps } from './ToolbarItemIcon';\nimport { ToolbarItemSubscribedValue, ToolbarMenuContext } from './toolbarMenuContext';\n\nexport interface ToolbarItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ToolbarItemBehaviorProps>;\n\n  /** A toolbar item can be active. */\n  active?: boolean;\n\n  /** A toolbar item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Name or shorthand for Toolbar Item Icon */\n  icon?: ShorthandValue<ToolbarItemIconProps>;\n\n  /**\n   * Shorthand for the submenu.\n   * If submenu is specified, the item is wrapped to group the item and the menu elements together.\n   */\n  menu?:\n    | ShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<ToolbarMenuItemProps, ToolbarItemShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /**\n   * Event for request to change 'menuOpen' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onMenuOpenChange?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called after item blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Attaches a `Popup` component to the ToolbarItem.\n   * Accepts all props as a `Popup`, except `trigger` and `children`.\n   * Traps focus by default.\n   * @see PopupProps\n   */\n  popup?: Omit<PopupProps, 'trigger' | 'children'> | string;\n\n  /** Shorthand for the wrapper component. The item is wrapped only if it contains a menu! */\n  wrapper?: ShorthandValue<ToolbarItemWrapperProps>;\n}\n\nexport type ToolbarItemStylesProps = Required<Pick<ToolbarItemProps, 'active' | 'disabled'>>;\n\nexport const toolbarItemClassName = 'ui-toolbar__item';\n\n/**\n * A ToolbarItem renders Toolbar item as a button with an icon.\n */\nexport const ToolbarItem = compose<'button', ToolbarItemProps, ToolbarItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      active,\n      className,\n      design,\n      icon,\n      children,\n      disabled,\n      popup,\n      menuOpen,\n      wrapper,\n      styles,\n      variables,\n    } = props;\n    const [menu, positioningProps] = partitionPopperPropsFromShorthand(props.menu);\n\n    const itemRef = React.useRef<HTMLElement>();\n    const menuRef = React.useRef<HTMLElement>();\n\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const { menuSlot } = (useContextSelectors(ToolbarMenuContext, {\n      menuSlot: v => v.slots.menu,\n    }) as unknown) as ToolbarItemSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n        performWrapperClick: event => {\n          handleWrapperClick(event);\n        },\n        closeMenuAndFocusTrigger: event => {\n          trySetMenuOpen(false, event);\n          _.invoke(itemRef.current, 'focus');\n        },\n        doNotNavigateNextToolbarItem: event => {\n          event.stopPropagation();\n        },\n      },\n      mapPropsToBehavior: () => ({\n        as: String(props.as),\n        disabled,\n        hasMenu: !!menu,\n        hasPopup: !!popup,\n        menuOpen,\n        active,\n      }),\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({ active, disabled }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const handleBlur = (e: React.SyntheticEvent) => {\n      _.invoke(props, 'onBlur', e, props);\n    };\n\n    const handleFocus = (e: React.SyntheticEvent) => {\n      _.invoke(props, 'onFocus', e, props);\n    };\n\n    const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (menu) {\n        trySetMenuOpen(!menuOpen, e);\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const handleWrapperClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (menu) {\n        if (doesNodeContainClick(menuRef.current, e.nativeEvent as MouseEvent, context.target, false)) {\n          trySetMenuOpen(false, e);\n        }\n      }\n    };\n\n    const handleOutsideClick = (getRefs: GetRefs) => (e: MouseEvent) => {\n      const isItemClick = doesNodeContainClick(itemRef.current, e, context.target);\n      const isNestedClick = _.some(getRefs(), (childRef: NodeRef) => {\n        return doesNodeContainClick(childRef.current as HTMLElement, e, context.target);\n      });\n      const isInside = isItemClick || isNestedClick;\n\n      if (!isInside) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    const trySetMenuOpen = (newValue: boolean, e: Event | React.SyntheticEvent) => {\n      _.invoke(props, 'onMenuOpenChange', e, { ...props, menuOpen: newValue });\n    };\n\n    const handleMenuOverrides = (getRefs: GetRefs) => (predefinedProps: ToolbarMenuProps) => ({\n      onBlur: (e: React.FocusEvent) => {\n        const isInsideOrMenuTrigger = _.some(getRefs(), (childRef: NodeRef) => {\n          return (\n            childRef.current.contains(e.relatedTarget as HTMLElement) ||\n            itemRef.current.contains(e.relatedTarget as HTMLElement)\n          );\n        });\n\n        if (!isInsideOrMenuTrigger) {\n          trySetMenuOpen(false, e);\n        }\n      },\n      onItemClick: (e, itemProps: ToolbarMenuItemProps) => {\n        const { popup, menuOpen } = itemProps;\n        _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n        if (popup) {\n          return;\n        }\n        // TODO: should we pass toolbarMenuItem to the user callback so he can decide if he wants to close the menu?\n        trySetMenuOpen(menuOpen, e);\n      },\n    });\n\n    const ElementType = getElementType(props);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarItemProps>(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const itemElement = (\n      <Ref\n        innerRef={node => {\n          itemRef.current = node;\n          handleRef(ref, node);\n        }}\n      >\n        <ElementType\n          {...getA11yProps('root', {\n            ...unhandledProps,\n            disabled,\n            className: classes.root,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onClick: handleClick,\n          })}\n        >\n          {childrenExist(children) ? children : createShorthand(composeOptions.slots.icon, icon, slotProps.icon)}\n        </ElementType>\n      </Ref>\n    );\n\n    const submenuElement = menuOpen ? (\n      <Unstable_NestingAuto>\n        {(getRefs, nestingRef) => {\n          return (\n            <>\n              <Ref\n                innerRef={(node: HTMLElement) => {\n                  nestingRef.current = node;\n                  menuRef.current = node;\n                }}\n              >\n                <Popper align=\"start\" position=\"above\" targetRef={itemRef} {...positioningProps}>\n                  <ToolbarVariablesProvider value={mergedVariables}>\n                    {createShorthand(composeOptions.slots.menu || menuSlot || ToolbarMenu, menu, {\n                      defaultProps: () => slotProps.menu,\n                      overrideProps: handleMenuOverrides(getRefs),\n                    })}\n                  </ToolbarVariablesProvider>\n                </Popper>\n              </Ref>\n              <EventListener listener={handleOutsideClick(getRefs)} target={context.target} type=\"click\" capture />\n            </>\n          );\n        }}\n      </Unstable_NestingAuto>\n    ) : null;\n\n    if (popup) {\n      const popupElement = createShorthand(composeOptions.slots.popup, popup, {\n        defaultProps: () => slotProps.popup,\n        overrideProps: {\n          trigger: itemElement,\n          children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger`\n        },\n      });\n      setEnd();\n\n      return popupElement;\n    }\n\n    // wrap the item if it has menu (even if it is closed = not rendered)\n    if (menu) {\n      const contentElement = (\n        <>\n          {itemElement}\n          {submenuElement}\n        </>\n      );\n\n      if (wrapper) {\n        const wrapperElement = createShorthand(composeOptions.slots.wrapper, wrapper, {\n          defaultProps: () => getA11yProps('wrapper', slotProps.wrapper || {}),\n          overrideProps: predefinedProps => ({\n            children: contentElement,\n            onClick: e => {\n              handleWrapperClick(e);\n              _.invoke(predefinedProps, 'onClick', e);\n            },\n          }),\n        });\n        setEnd();\n\n        return wrapperElement;\n      }\n\n      setEnd();\n      return contentElement;\n    }\n\n    setEnd();\n\n    return itemElement;\n  },\n  {\n    className: toolbarItemClassName,\n    displayName: 'ToolbarItem',\n\n    slots: {\n      icon: ToolbarItemIcon,\n      wrapper: ToolbarItemWrapper,\n      popup: Popup, // TODO: compose Popup to ToolbarItemPopup once it has compose functionality\n    },\n\n    slotProps: () => ({\n      popup: { trapFocus: true },\n    }),\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n      'active',\n      'disabled',\n      'icon',\n      'menu',\n      'menuOpen',\n      'onMenuOpenChange',\n      'onClick',\n      'onFocus',\n      'onBlur',\n      'popup',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  menu: PropTypes.oneOfType([\n    customPropTypes.shorthandAllowingChildren,\n    PropTypes.arrayOf(customPropTypes.shorthandAllowingChildren),\n  ]),\n  menuOpen: PropTypes.bool,\n  onMenuOpenChange: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  popup: PropTypes.oneOfType([\n    PropTypes.shape({\n      ...Popup.propTypes,\n      trigger: customPropTypes.never,\n      children: customPropTypes.never,\n    }),\n    PropTypes.string,\n  ]),\n  wrapper: customPropTypes.shorthandAllowingChildren,\n};\nToolbarItem.defaultProps = {\n  as: 'button',\n  accessibility: toolbarItemBehavior,\n  wrapper: {},\n};\n"],"file":"ToolbarItem.js"}