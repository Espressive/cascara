{"version":3,"sources":["components/Toolbar/ToolbarMenuRadioGroup.tsx"],"names":["toolbarMenuRadioGroupClassName","ToolbarMenuRadioGroup","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","activeIndex","className","design","items","styles","variables","wrapper","slotProps","resolveSlotProps","parentVariables","React","useContext","ToolbarVariablesContext","mergedVariables","getA11yProps","debugName","rtl","mapPropsToInlineStyles","unstable_props","classes","handleItemOverrides","predefinedProps","onClick","e","itemProps","ElementType","unhandledProps","handledProps","content","root","item","index","ToolbarMenuItem","defaultProps","toolbarMenuItemRadioBehavior","as","active","overrideProps","element","slots","children","ToolbarMenuRadioGroupWrapper","propTypes","commonPropTypes","createCommon","PropTypes","number","customPropTypes","collectionShorthand","onItemClick","func","itemShorthand","toolbarMenuRadioGroupBehavior"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  toolbarMenuRadioGroupBehavior,\n  toolbarMenuItemRadioBehavior,\n  ToolbarMenuRadioGroupBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  compose,\n  mergeVariablesOverrides,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthand,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  UIComponentProps,\n  commonPropTypes,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandCollection, ShorthandValue } from '../../types';\nimport { ToolbarMenuItem, ToolbarMenuItemProps } from './ToolbarMenuItem';\nimport { ToolbarMenuRadioGroupWrapper, ToolbarMenuRadioGroupWrapperProps } from './ToolbarMenuRadioGroupWrapper';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport interface ToolbarMenuRadioGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuRadioGroupBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /** Shorthand array of props for ToolbarMenuRadioGroup. */\n  items?: ShorthandCollection<ToolbarMenuItemProps>;\n\n  /**\n   * Called on item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<ToolbarMenuRadioGroupWrapperProps>;\n}\n\nexport type ToolbarMenuRadioGroupStylesProps = never;\n\nexport const toolbarMenuRadioGroupClassName = 'ui-toolbars'; // FIXME: required by getComponentInfo/isConformant. But this is group inside a toolbar not a group of toolbars\n\n/**\n * A ToolbarMenuRadioGroup renders ToolbarMenuItem as a group of mutually exclusive options.\n */\nexport const ToolbarMenuRadioGroup = compose<\n  'ul',\n  ToolbarMenuRadioGroupProps,\n  ToolbarMenuRadioGroupStylesProps,\n  {},\n  {}\n>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, activeIndex, className, design, items, styles, variables, wrapper } = props;\n\n    const slotProps = composeOptions.resolveSlotProps<ToolbarMenuRadioGroupProps>(props);\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarMenuRadioGroupStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const handleItemOverrides = (predefinedProps: ToolbarMenuItemProps): ToolbarMenuItemProps => ({\n      onClick: (e, itemProps) => {\n        _.invoke(predefinedProps, 'onClick', e, itemProps);\n        _.invoke(props, 'onItemClick', e, itemProps);\n      },\n      wrapper: null,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const content = (\n      <ElementType {...getA11yProps('root', { ...unhandledProps, className: classes.root, ref })}>\n        <ToolbarVariablesProvider value={mergedVariables}>\n          {_.map(items, (item, index) =>\n            createShorthand(ToolbarMenuItem, item, {\n              defaultProps: () => ({\n                accessibility: toolbarMenuItemRadioBehavior,\n                as: 'li',\n                active: activeIndex === index,\n                index,\n              }),\n              overrideProps: handleItemOverrides,\n            }),\n          )}\n        </ToolbarVariablesProvider>\n      </ElementType>\n    );\n    const element = createShorthand(composeOptions.slots.wrapper, wrapper, {\n      defaultProps: () => getA11yProps('wrapper', slotProps.wrapper || {}),\n      overrideProps: {\n        children: content,\n      },\n    });\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarMenuRadioGroupClassName,\n    displayName: 'ToolbarMenuRadioGroup',\n\n    slots: {\n      wrapper: ToolbarMenuRadioGroupWrapper,\n    },\n\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n\n      'activeIndex',\n      'items',\n      'onItemClick',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarMenuRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  activeIndex: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuRadioGroup.defaultProps = {\n  as: 'ul',\n  accessibility: toolbarMenuRadioGroupBehavior,\n  wrapper: {},\n};\n"],"file":"ToolbarMenuRadioGroup.js"}