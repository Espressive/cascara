{"version":3,"sources":["components/RadioGroup/RadioGroup.tsx"],"names":["radioGroupClassName","RadioGroup","props","context","displayName","telemetry","setStart","setEnd","children","vertical","items","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","nextItem","event","setCheckedItem","prevItem","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","defaultValue","defaultCheckedValue","value","checkedValue","initialValue","undefined","setCheckedValue","React","useState","shouldFocus","setShouldFocus","getItemProps","item","direction","findNextEnabledCheckedItem","checkedValueChange","nextCheckedValue","itemProps","preventDefault","length","currentIndex","newIndex","disabled","handleItemOverrides","predefinedProps","checked","onClick","renderItems","isNoneValueSelected","index","RadioGroupItem","create","defaultProps","tabIndex","overrideProps","element","unstable_wrapWithFocusZone","root","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","content","PropTypes","oneOfType","number","string","customPropTypes","collectionShorthand","onCheckedValueChange","func","bool","radioGroupBehavior","Object","keys","Item","Component"],"mappings":"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","sourcesContent":["// TODO:\n// vertical - padding variable?\nimport { Accessibility, radioGroupBehavior, RadioGroupBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { RadioGroupItem, RadioGroupItemProps } from './RadioGroupItem';\nimport { ComponentEventHandler, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  useAutoControlled,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface RadioGroupProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<RadioGroupBehaviorProps>;\n\n  /** Value of the currently checked radio item. */\n  checkedValue?: number | string;\n\n  /**\n   * Called after radio group value is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All value props.\n   */\n  onCheckedValueChange?: ComponentEventHandler<RadioGroupItemProps>;\n\n  /** Initial checkedValue value. */\n  defaultCheckedValue?: number | string;\n\n  /** Shorthand array of props for RadioGroup. */\n  items?: ShorthandCollection<RadioGroupItemProps>;\n\n  /** A vertical radio group displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport const radioGroupClassName = 'ui-radiogroup';\n\nexport type RadioGroupStylesProps = Required<Pick<RadioGroupProps, 'vertical'>>;\n\n/**\n * A RadioGroup allows user to select a value from a small set of mutually exclusive options.\n *\n * @accessibility\n * Implements [ARIA Radio Group](https://www.w3.org/TR/wai-aria-practices-1.1/#radiobutton) design pattern.\n * @accessibilityIssues\n * [JAWS narrates instruction message on each radio in radiogroup](https://github.com/FreedomScientific/VFO-standards-support/issues/473)\n */\nexport const RadioGroup: ComponentWithAs<'div', RadioGroupProps> &\n  FluentComponentStaticProps<RadioGroupProps> & {\n    Item: typeof RadioGroupItem;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(RadioGroup.displayName, context.telemetry);\n  setStart();\n\n  const { children, vertical, items, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(RadioGroup.handledProps, props);\n\n  const getA11yProps = useAccessibility<RadioGroupBehaviorProps>(props.accessibility, {\n    debugName: RadioGroup.displayName,\n    actionHandlers: {\n      nextItem: event => setCheckedItem(event, 1),\n      prevItem: event => setCheckedItem(event, -1),\n    },\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<RadioGroupStylesProps>(RadioGroup.displayName, {\n    className: radioGroupClassName,\n    mapPropsToStyles: () => ({\n      vertical,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [checkedValue, setCheckedValue] = useAutoControlled({\n    defaultValue: props.defaultCheckedValue,\n    value: props.checkedValue,\n    initialValue: undefined,\n  });\n\n  const [shouldFocus, setShouldFocus] = React.useState(false);\n\n  const getItemProps = (item): RadioGroupItemProps => {\n    return (item as React.ReactElement<RadioGroupItemProps>).props || item;\n  };\n\n  const setCheckedItem = (event, direction) => {\n    const nextItem = findNextEnabledCheckedItem(direction);\n\n    if (nextItem) {\n      checkedValueChange({\n        nextCheckedValue: nextItem.value,\n        shouldFocus: true,\n        event,\n        itemProps: nextItem,\n      });\n    }\n    event.preventDefault();\n  };\n\n  const findNextEnabledCheckedItem = (direction): RadioGroupItemProps => {\n    if (!props.items || !props.items.length) {\n      return undefined;\n    }\n\n    const currentIndex =\n      // if none of the values selected, set current index to the first item\n      checkedValue !== undefined ? _.findIndex(props.items, item => getItemProps(item).value === checkedValue) : 0;\n\n    for (let newIndex = currentIndex + direction; newIndex !== currentIndex; newIndex += direction) {\n      if (newIndex < 0) {\n        newIndex = props.items.length - 1;\n      } else if (newIndex >= props.items.length) {\n        newIndex = 0;\n      }\n\n      if (newIndex === currentIndex) {\n        return undefined;\n      }\n\n      const itemProps = getItemProps(props.items[newIndex]);\n      if (!itemProps.disabled) {\n        return itemProps;\n      }\n    }\n    return undefined;\n  };\n\n  const handleItemOverrides = predefinedProps => ({\n    checked: typeof checkedValue !== 'undefined' && checkedValue === predefinedProps.value,\n    onClick: (event, itemProps) => {\n      const { value, disabled } = itemProps;\n      if (!disabled && value !== checkedValue) {\n        checkedValueChange({ nextCheckedValue: value, shouldFocus: false, event, itemProps });\n      }\n      _.invoke(predefinedProps, 'onClick', event, itemProps);\n    },\n    shouldFocus,\n  });\n\n  const renderItems = (vertical: boolean) => {\n    const isNoneValueSelected = checkedValue === undefined;\n    return _.map(items, (item, index) =>\n      RadioGroupItem.create(item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            vertical,\n            ...(index === 0 && isNoneValueSelected && { tabIndex: 0 }),\n          }),\n        overrideProps: handleItemOverrides,\n      }),\n    );\n  };\n\n  const checkedValueChange = ({\n    nextCheckedValue,\n    shouldFocus,\n    event,\n    itemProps,\n  }: {\n    nextCheckedValue: number | string;\n    shouldFocus: boolean;\n    event: React.SyntheticEvent;\n    itemProps: RadioGroupItemProps;\n  }) => {\n    setCheckedValue(nextCheckedValue);\n    setShouldFocus(shouldFocus);\n    _.invoke(props, 'onCheckedValueChange', event, itemProps);\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n      })}\n    >\n      {childrenExist(children) ? children : renderItems(vertical)}\n    </ElementType>,\n  );\n\n  setEnd();\n  return element;\n};\n\nRadioGroup.displayName = 'RadioGroup';\n\nRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  checkedValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  defaultCheckedValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  items: customPropTypes.collectionShorthand,\n  onCheckedValueChange: PropTypes.func,\n  vertical: PropTypes.bool,\n};\n\nRadioGroup.defaultProps = {\n  accessibility: radioGroupBehavior,\n};\n\nRadioGroup.handledProps = Object.keys(RadioGroup.propTypes) as any;\n\nRadioGroup.Item = RadioGroupItem;\n\nRadioGroup.create = createShorthandFactory({\n  Component: RadioGroup,\n});\n"],"file":"RadioGroup.js"}