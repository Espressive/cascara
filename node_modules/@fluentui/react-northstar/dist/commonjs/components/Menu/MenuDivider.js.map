{"version":3,"sources":["components/Menu/MenuDivider.tsx"],"names":["menuDividerClassName","MenuDivider","React","forwardRef","inputProps","ref","context","displayName","telemetry","setStart","setEnd","parentProps","MenuContext","variables","v","slotProps","divider","accessibility","behaviors","props","menuDividerBehavior","children","content","vertical","inSubmenu","pills","pointing","primary","className","design","styles","secondary","getA11yProps","debugName","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","unstable_props","classes","ElementType","unhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","defaultProps","as","propTypes","commonPropTypes","createCommon","PropTypes","bool","oneOf","Object","keys","shorthandConfig","mappedProp","create","Component"],"mappings":"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","sourcesContent":["import { Accessibility, MenuDividerBehaviorProps, menuDividerBehavior } from '@fluentui/accessibility';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  mergeVariablesOverrides,\n  useFluentContext,\n  useAccessibility,\n  useTelemetry,\n  useStyles,\n  useUnhandledProps,\n  useContextSelectors,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  childrenExist,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport { MenuContext, MenuDividerSubscribedValue } from './menuContext';\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface MenuDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<MenuDividerBehaviorProps>;\n\n  inSubmenu?: boolean;\n  secondary?: boolean;\n  pills?: boolean;\n  pointing?: boolean | 'start' | 'end';\n  primary?: boolean;\n  vertical?: boolean;\n}\n\nexport type MenuDividerStylesProps = Required<\n  Pick<MenuDividerProps, 'vertical' | 'inSubmenu' | 'pills' | 'primary' | 'pointing' | 'secondary'>\n> & {\n  hasContent: boolean;\n};\n\nexport const menuDividerClassName = 'ui-menu__divider';\n\n/**\n * A MenuDivider is non-actionable element that visually segments items of Menu.\n */\nexport const MenuDivider = (React.forwardRef<HTMLLIElement, MenuDividerProps>((inputProps, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(MenuDivider.displayName, context.telemetry);\n  setStart();\n\n  const parentProps = (useContextSelectors(MenuContext, {\n    variables: v => v.variables,\n    slotProps: v => v.slotProps.divider,\n    accessibility: v => v.behaviors.divider,\n  }) as unknown) as MenuDividerSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n  const props = {\n    ...parentProps.slotProps,\n    accessibility: parentProps.accessibility,\n    variables: parentProps.variables,\n    ...inputProps,\n  };\n\n  const {\n    accessibility = menuDividerBehavior,\n    children,\n    content,\n    vertical,\n    inSubmenu,\n    pills,\n    pointing,\n    primary,\n    className,\n    design,\n    styles,\n    secondary,\n    variables,\n  } = props;\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: MenuDivider.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<MenuDividerStylesProps>(MenuDivider.displayName, {\n    className: menuDividerClassName,\n    mapPropsToStyles: () => ({\n      hasContent: !!content || !!children,\n      pills,\n      pointing,\n      vertical,\n      inSubmenu,\n      primary,\n      secondary,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables: mergeVariablesOverrides(variables, parentProps.variables),\n    }),\n    rtl: context.rtl,\n    unstable_props: props,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(MenuDivider.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n        ref,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'li', HTMLLIElement, MenuDividerProps> &\n  FluentComponentStaticProps<MenuDividerProps>;\n\nMenuDivider.defaultProps = {\n  as: 'li',\n};\n\nMenuDivider.displayName = 'MenuDivider';\n\nMenuDivider.propTypes = {\n  ...commonPropTypes.createCommon(),\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool,\n  pointing: PropTypes.oneOf(['start', 'end', true, false]),\n};\n\nMenuDivider.handledProps = Object.keys(MenuDivider.propTypes) as any;\n\nMenuDivider.shorthandConfig = {\n  mappedProp: 'content',\n};\n\nMenuDivider.create = createShorthandFactory({ Component: MenuDivider, mappedProp: 'content' });\n"],"file":"MenuDivider.js"}