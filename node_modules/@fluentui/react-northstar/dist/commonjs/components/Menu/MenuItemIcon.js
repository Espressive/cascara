"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.MenuItemIcon = exports.menuItemIconClassName = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactBindings = require("@fluentui/react-bindings");

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _utils = require("../../utils");

var menuItemIconClassName = 'ui-menu__itemicon';
/**
 * A MenuItemIcon allows a user to have a dedicated component that can be targeted from the theme.
 */

exports.menuItemIconClassName = menuItemIconClassName;
var MenuItemIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(MenuItemIcon.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var className = props.className,
      children = props.children,
      design = props.design,
      styles = props.styles,
      variables = props.variables,
      content = props.content,
      hasContent = props.hasContent,
      iconOnly = props.iconOnly;

  var _useStyles = (0, _reactBindings.useStyles)(MenuItemIcon.displayName, {
    className: menuItemIconClassName,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        hasContent: hasContent,
        iconOnly: iconOnly
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var getA11Props = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: MenuItemIcon.displayName,
    rtl: context.rtl
  });
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(MenuItemIcon.handledProps, props);
  var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
    className: classes.root,
    ref: ref
  }, unhandledProps)), (0, _reactBindings.childrenExist)(children) ? children : content);
  setEnd();
  return element;
});
exports.MenuItemIcon = MenuItemIcon;
MenuItemIcon.displayName = 'MenuItemIcon';
MenuItemIcon.defaultProps = {
  as: 'span'
};
MenuItemIcon.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon(), {
  hasContent: PropTypes.bool,
  iconOnly: PropTypes.bool
});
MenuItemIcon.handledProps = Object.keys(MenuItemIcon.propTypes);
MenuItemIcon.shorthandConfig = {
  mappedProp: 'content'
};
//# sourceMappingURL=MenuItemIcon.js.map
