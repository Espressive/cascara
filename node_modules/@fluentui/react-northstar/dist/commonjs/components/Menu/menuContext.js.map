{"version":3,"sources":["components/Menu/menuContext.ts"],"names":["MenuContext","activeIndex","vertical","variables","onItemClick","onItemSelect","slotProps","item","divider","behaviors","undefined","MenuContextProvider","Provider"],"mappings":";;;;;AAAA;;AAsCO,IAAMA,WAAW,GAAG,kCAAgC;AACzDC,EAAAA,WAAW,EAAE,CAAC,CAD2C;AAEzDC,EAAAA,QAAQ,EAAE,KAF+C;AAGzDC,EAAAA,SAAS,EAAE,EAH8C;AAIzDC,EAAAA,WAAW,EAAE,IAJ4C;AAKzDC,EAAAA,YAAY,EAAE,IAL2C;AAMzDC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,EADG;AAETC,IAAAA,OAAO,EAAE;AAFA,GAN8C;AAUzDC,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EAAEG,SADG;AAETF,IAAAA,OAAO,EAAEE;AAFA;AAV8C,CAAhC,CAApB;;AAgBA,IAAMC,mBAAmB,GAAGX,WAAW,CAACY,QAAxC","sourcesContent":["import { createContext } from '@fluentui/react-bindings';\nimport { ComponentVariablesInput } from '@fluentui/styles';\nimport * as React from 'react';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { MenuItemProps } from './MenuItem';\n\nexport type MenuContextValue = {\n  activeIndex: number;\n  vertical: boolean;\n  variables: ComponentVariablesInput;\n  onItemClick: (e: React.KeyboardEvent | React.MouseEvent, itemProps: MenuItemProps) => void;\n  onItemSelect: (e: React.KeyboardEvent | React.MouseEvent, itemIndex: number) => void;\n\n  slotProps: {\n    item: Record<string, any>;\n    divider: Record<string, any>;\n  };\n\n  behaviors: {\n    item: Accessibility;\n    divider: Accessibility;\n  };\n};\n\nexport type MenuItemSubscribedValue = Pick<\n  MenuContextValue,\n  'variables' | 'onItemClick' | 'onItemSelect' | 'vertical'\n> & {\n  slotProps: MenuContextValue['slotProps']['item'];\n  accessibility: MenuContextValue['behaviors']['item'];\n  active: boolean;\n};\n\nexport type MenuDividerSubscribedValue = Pick<MenuContextValue, 'variables'> & {\n  slotProps: MenuContextValue['slotProps']['divider'];\n  accessibility: MenuContextValue['behaviors']['divider'];\n};\n\nexport const MenuContext = createContext<MenuContextValue>({\n  activeIndex: -1,\n  vertical: false,\n  variables: {},\n  onItemClick: null,\n  onItemSelect: null,\n  slotProps: {\n    item: {},\n    divider: {},\n  },\n  behaviors: {\n    item: undefined,\n    divider: undefined,\n  },\n});\n\nexport const MenuContextProvider = MenuContext.Provider;\n"],"file":"menuContext.js"}