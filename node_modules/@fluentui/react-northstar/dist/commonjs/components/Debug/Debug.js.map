{"version":3,"sources":["components/Debug/Debug.tsx"],"names":["INITIAL_STATE","fiberNav","selectedFiberNav","isSelecting","Debug","p","s","state","debugReactComponent","r","console","error","_reactInternalFiber","fluentUIDebug","FiberNavigator","fromFiber","setState","debugDOMNode","domNode","fromDOMNode","findOwner","fiber","handleKeyDown","e","code","keyboardKey","Escape","stopSelecting","d","altKey","shiftKey","startSelecting","handleMouseMove","target","handleDOMNodeClick","preventDefault","stopPropagation","selectFiber","changeFiber","positionRight","debugPanelPosition","positionLeft","close","process","env","NODE_ENV","isDebugEnabled","window","openDebugPanel","$r","render","mountDocument","props","body","instance","React","Component","defaultProps","document","propTypes","PropTypes","object","isRequired"],"mappings":"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","sourcesContent":["import { getCode, keyboardKey } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { EventListener } from '@fluentui/react-component-event-listener';\n\nimport { isBrowser } from '../../utils';\nimport { isDebugEnabled } from '@fluentui/styles';\n\nimport { DebugPanel } from './DebugPanel';\nimport { FiberNavigator } from './FiberNavigator';\nimport { DebugRect } from './DebugRect';\n\n/* eslint-disable no-console */\n\nexport type DebugProps = {\n  /** Existing document the popup should add listeners. */\n  mountDocument?: Document;\n};\n\nexport type DebugState = {\n  debugPanelPosition?: 'left' | 'right';\n  fiberNav: FiberNavigator;\n  selectedFiberNav: FiberNavigator;\n  isSelecting: boolean;\n};\n\nconst INITIAL_STATE: DebugState = {\n  fiberNav: null,\n  selectedFiberNav: null,\n  isSelecting: false,\n};\n\nexport class Debug extends React.Component<DebugProps, DebugState> {\n  state = INITIAL_STATE;\n\n  static defaultProps = {\n    // eslint-disable-next-line no-undef\n    mountDocument: isBrowser() ? window.document : null,\n  };\n\n  static propTypes = {\n    mountDocument: PropTypes.object.isRequired,\n  };\n\n  constructor(p, s) {\n    super(p, s);\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled && isBrowser()) {\n      // eslint-disable-next-line no-undef\n      (window as any).openDebugPanel = () => {\n        // eslint-disable-next-line no-undef\n        this.debugReactComponent((window as any).$r);\n      };\n    }\n  }\n\n  debugReactComponent = r => {\n    if (!r) {\n      console.error(\n        \"No React component selected. Please select a Fluent UI component from the React's Component panel.\",\n      );\n      return;\n    }\n    if (!r._reactInternalFiber) {\n      console.error(\n        'React does not provide data for debugging for this component. Try selecting some Fluent UI component.',\n      );\n      return;\n    }\n    if (!r.fluentUIDebug) {\n      console.error('Not a debuggable component. Try selecting some Fluent UI component.');\n      return;\n    }\n\n    const fiberNav = FiberNavigator.fromFiber(r._reactInternalFiber);\n    this.setState({ fiberNav, isSelecting: false, selectedFiberNav: null });\n  };\n\n  debugDOMNode = domNode => {\n    let fiberNav = FiberNavigator.fromDOMNode(domNode);\n\n    if (!fiberNav) {\n      console.error('No fiber for dom node', domNode);\n      return;\n    }\n\n    fiberNav = fiberNav.findOwner(fiber => fiber.fluentUIDebug);\n\n    if (fiberNav !== this.state.fiberNav) {\n      this.setState({ fiberNav });\n    }\n  };\n\n  handleKeyDown = e => {\n    const code = getCode(e);\n\n    switch (code) {\n      case keyboardKey.Escape:\n        this.stopSelecting();\n        break;\n\n      case keyboardKey.d:\n        if (e.altKey && e.shiftKey) {\n          this.startSelecting();\n        }\n        break;\n    }\n  };\n\n  handleMouseMove = e => {\n    this.debugDOMNode(e.target);\n  };\n\n  handleDOMNodeClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState({ isSelecting: false });\n  };\n\n  startSelecting = () => {\n    const isSelecting = !this.state.isSelecting;\n\n    this.setState({\n      ...(!isSelecting && INITIAL_STATE),\n      isSelecting,\n    });\n  };\n\n  stopSelecting = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  selectFiber = selectedFiberNav => this.setState({ selectedFiberNav });\n\n  changeFiber = fiberNav => this.setState({ fiberNav });\n\n  positionRight = () => this.setState({ debugPanelPosition: 'right' });\n\n  positionLeft = () => this.setState({ debugPanelPosition: 'left' });\n\n  close = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { mountDocument } = this.props;\n    const { fiberNav, selectedFiberNav, isSelecting, debugPanelPosition } = this.state;\n\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n      return (\n        <>\n          <EventListener listener={this.handleKeyDown} target={mountDocument.body} type=\"keydown\" />\n          {isSelecting && (\n            <EventListener listener={this.handleMouseMove} target={mountDocument.body} type=\"mousemove\" />\n          )}\n          {isSelecting && fiberNav && fiberNav.domNode && (\n            <EventListener listener={this.handleDOMNodeClick} target={fiberNav.domNode} type=\"click\" />\n          )}\n          {isSelecting && fiberNav && <DebugRect fiberNav={fiberNav} />}\n          {selectedFiberNav && <DebugRect fiberNav={selectedFiberNav} />}\n          {!isSelecting && fiberNav && fiberNav.instance && (\n            <DebugPanel\n              fiberNav={fiberNav}\n              onActivateDebugSelectorClick={this.startSelecting}\n              onClose={this.close}\n              // TODO: Integrate CSS in JS Styles for Host Components (DOM nodes)\n              // cssStyles={stylesForNode(domNode)}\n              debugData={fiberNav.fluentUIDebug}\n              position={debugPanelPosition || 'right'}\n              onPositionLeft={this.positionLeft}\n              onPositionRight={this.positionRight}\n              onFiberChanged={this.changeFiber}\n              onFiberSelected={this.selectFiber}\n            />\n          )}\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n"],"file":"Debug.js"}