{"version":3,"sources":["components/Debug/DebugPanelItem.tsx"],"names":["DebugPanelItem","props","React","useState","value","setValue","propData","data","valueKey","commentKey","commentKeyPredicate","idKey","reversedData","JSON","parse","stringify","reverse","map","v","comments","ids","mergedThemes","push","i","length","e","target","padding","marginBottom","width","border","background","theme","idx","filteredTheme","position","borderTop","right","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DebugPanelData } from './DebugPanelData';\nimport { filter } from './utils';\nimport { deepmerge } from '@fluentui/styles';\n\ninterface DebugPanelItemProps {\n  data: any;\n  valueKey?: string;\n  commentKey?: string;\n  idKey?: string;\n  commentKeyPredicate?: (val: any) => boolean;\n}\n\nexport const DebugPanelItem: React.FC<DebugPanelItemProps> = props => {\n  const [value, setValue] = React.useState('');\n  const { data: propData, valueKey, commentKey, commentKeyPredicate, idKey } = props;\n\n  const reversedData = JSON.parse(JSON.stringify(propData)).reverse();\n\n  const data = valueKey ? reversedData.map(v => v[valueKey]) : reversedData;\n  const comments = commentKey ? reversedData.map(v => v[commentKey]) : [];\n  const ids = idKey ? reversedData.map(v => v[idKey]) : [];\n\n  const mergedThemes = [];\n\n  mergedThemes.push({}); // init\n\n  for (let i = 1; i < data.length; i++) {\n    mergedThemes.push(deepmerge(mergedThemes[i - 1], data[i - 1]));\n  }\n\n  return (\n    <>\n      <input\n        onChange={e => setValue(e.target.value)}\n        style={{\n          padding: '2px 4px',\n          marginBottom: '4px',\n          width: '100%',\n          border: '1px solid #ccc',\n          background: 'none',\n        }}\n        placeholder=\"Filter\"\n      />\n      {data.map((theme, idx) => {\n        const filteredTheme = value === '' ? theme : filter(theme, value);\n\n        return (\n          <pre\n            key={idx}\n            style={{\n              position: 'relative',\n              marginBottom: '4px',\n              borderTop: idx > 0 ? '1px solid #ddd' : 'none',\n            }}\n          >\n            {ids && ids[idx] && <div style={{ position: 'absolute', right: 0, color: '#707070' }}>{ids[idx]}</div>}\n            <DebugPanelData\n              data={filteredTheme}\n              comments={comments[idx]}\n              commentKeyPredicate={commentKeyPredicate}\n              overrides={mergedThemes[idx]}\n              highlightKey={value}\n            />\n          </pre>\n        );\n      })}\n    </>\n  );\n};\n"],"file":"DebugPanelItem.js"}