{"version":3,"sources":["components/Debug/DebugPanel.tsx"],"names":["DebugPanel","props","cssStyles","inputDebugData","debugData","fiberNav","onActivateDebugSelectorClick","onClose","position","onPositionLeft","onPositionRight","onFiberChanged","onFiberSelected","React","useState","slot","setSlot","left","componentStyles","componentVariables","siteVariables","styleSlots","Object","keys","siteVariablesUsedInComponentVariables","map","val","input","forEach","indexOf","uniqUsedSiteVariables","siteVariablesDataWithNulls","resolved","reduce","acc","next","key","siteVariablesData","debugPanelRoot","debugPanelHeader","debugPanelArrowIcon","float","debugPanelIcon","debugPanelCloseIcon","debugPanelBody","debugPanel","debugHeaderContainer","debugHeader","debugPanelSelectContainer","e","target","value","debugNoData","clear","l","padding","display","justifyContent","alignItems","top","background","zIndex","commonIconStyle","cursor","color","lineHeight","margin","fontSize","outline","marginTop","isLeftActive","borderWidth","borderStyle","borderColor","width","height","overflowY","boxShadow","overflow","borderTop","borderBottom","fontWeight","textAlign","marginBottom","overflowWrap","wordWrap","wordBreak","hyphens"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { DebugPanelItem } from './DebugPanelItem';\nimport { FiberNavigator } from './FiberNavigator';\nimport { getValues, removeNulls } from './utils';\nimport { DebugComponentViewer } from './DebugComponentViewer';\n\nexport type DebugPanelProps = {\n  cssStyles?: string[];\n  fiberNav: FiberNavigator;\n  debugData: {\n    componentStyles: { [key: string]: { styles: any; debugId: string } };\n    componentVariables: {\n      input: { [key: string]: any };\n      resolved: { [key: string]: any };\n    }[];\n    siteVariables: object[];\n  };\n  onActivateDebugSelectorClick: (e) => void;\n  onClose: (e) => void;\n  onPositionLeft: (e) => void;\n  onPositionRight: (e) => void;\n  position: 'left' | 'right';\n  onFiberChanged: (fiberNav: FiberNavigator) => void;\n  onFiberSelected: (fiberNav: FiberNavigator) => void;\n};\n\nexport const DebugPanel: React.FC<DebugPanelProps> = props => {\n  const {\n    cssStyles,\n    debugData: inputDebugData,\n    fiberNav,\n    onActivateDebugSelectorClick,\n    onClose,\n    position,\n    onPositionLeft,\n    onPositionRight,\n    onFiberChanged,\n    onFiberSelected,\n  } = props;\n\n  const [slot, setSlot] = React.useState('root');\n\n  const left = position === 'left';\n\n  const debugData =\n    _.isNil(inputDebugData) || _.isEmpty(inputDebugData)\n      ? {\n          componentStyles: {},\n          componentVariables: [],\n          siteVariables: [],\n        }\n      : inputDebugData;\n\n  debugData.componentStyles = debugData.componentStyles || {};\n  debugData.componentVariables = debugData.componentVariables || [];\n  debugData.siteVariables = debugData.siteVariables || [];\n\n  const styleSlots = Object.keys(debugData.componentStyles);\n  let siteVariablesUsedInComponentVariables = [];\n\n  debugData.componentVariables\n    .map(val => val.input)\n    .forEach(\n      val =>\n        (siteVariablesUsedInComponentVariables = _.concat(\n          siteVariablesUsedInComponentVariables,\n          getValues(val, val => val.indexOf('siteVariables.') > -1),\n        )),\n    );\n\n  const uniqUsedSiteVariables = _.uniq(siteVariablesUsedInComponentVariables);\n  const siteVariablesDataWithNulls = debugData.siteVariables.map(val => ({\n    ...val,\n    resolved: uniqUsedSiteVariables.reduce((acc, next) => {\n      const key = _.replace(next, 'siteVariables.', '');\n      _.set(acc, key, _.get(val['resolved'], key));\n      return acc;\n    }, {}),\n  }));\n\n  const siteVariablesData = siteVariablesDataWithNulls.map(val => ({\n    ...val,\n    resolved: removeNulls(val.resolved),\n  }));\n\n  return (\n    <div>\n      <div style={debugPanelRoot(left)}>\n        <div style={debugPanelHeader}>\n          <div tabIndex={0} onClick={onActivateDebugSelectorClick} style={debugPanelArrowIcon}>\n            ⇱\n          </div>\n          <div style={{ float: 'right' }}>\n            <div tabIndex={0} style={debugPanelIcon(true, left)} onClick={onPositionLeft} />\n            <div tabIndex={0} style={debugPanelIcon(false, left)} onClick={onPositionRight} />\n            <div tabIndex={0} onClick={onClose} style={debugPanelCloseIcon}>\n              ✕\n            </div>\n          </div>\n        </div>\n\n        <DebugComponentViewer fiberNav={fiberNav} onFiberChanged={onFiberChanged} onFiberSelected={onFiberSelected} />\n\n        <div style={debugPanelBody}>\n          {/* Styles */}\n\n          <div style={debugPanel}>\n            <div style={debugHeaderContainer()}>\n              <div style={debugHeader()}>Styles</div>\n              {!_.isEmpty(debugData.componentStyles) && (\n                <div style={debugPanelSelectContainer()}>\n                  <select value={slot} onChange={e => setSlot(e.target.value)}>\n                    {styleSlots.map(val => (\n                      <option value={val} key={val}>\n                        Slot: {val}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n            </div>\n            {!_.isEmpty(debugData.componentStyles) ? (\n              <DebugPanelItem data={debugData.componentStyles[slot]} valueKey=\"styles\" idKey=\"debugId\" />\n            ) : (\n              <div style={debugNoData()}>None in use</div>\n            )}\n          </div>\n\n          {/* Component Variables */}\n\n          <div style={debugPanel}>\n            <div style={debugHeaderContainer()}>\n              <div style={debugHeader()}>Variables</div>\n            </div>\n            {!_.isEmpty(debugData.componentVariables) ? (\n              <DebugPanelItem\n                data={debugData.componentVariables}\n                valueKey=\"resolved\"\n                idKey=\"debugId\"\n                commentKey=\"input\"\n                commentKeyPredicate={val => typeof val === 'string' && val.indexOf('siteVariables.') > -1}\n              />\n            ) : (\n              <div style={debugNoData()}>None in use</div>\n            )}\n          </div>\n\n          {/* Site Variables */}\n\n          <div style={debugPanel}>\n            <div style={debugHeaderContainer()}>\n              <div style={debugHeader()}>Site variables</div>\n            </div>\n            {!_.isEmpty(siteVariablesData) && !_.isEmpty(uniqUsedSiteVariables) ? (\n              <DebugPanelItem data={siteVariablesData} valueKey=\"resolved\" idKey=\"debugId\" />\n            ) : (\n              <div style={debugNoData()}>None in use</div>\n            )}\n          </div>\n        </div>\n\n        {!_.isEmpty(cssStyles) && (\n          <div style={debugPanel}>\n            <div style={debugHeader()}>HTML Styles</div>\n            <div style={{ clear: 'both' }}>\n              {cssStyles.map(l => (\n                <pre key={l}>{l}</pre>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div style={{ padding: '50px 0' }} />\n      </div>\n    </div>\n  );\n};\n\nconst debugPanelHeader: React.CSSProperties = {\n  position: 'sticky',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: '2px 2px 4px',\n  top: '0',\n  background: '#f3f3f3',\n  zIndex: 1,\n};\n\nconst commonIconStyle: React.CSSProperties = {\n  display: 'inline-block',\n  cursor: 'pointer',\n  color: '#555',\n  lineHeight: 1,\n  margin: '0 4px',\n};\n\nconst debugPanelCloseIcon: React.CSSProperties = {\n  ...commonIconStyle,\n  fontSize: '20px',\n  outline: '0',\n  cursor: 'pointer',\n};\n\nconst debugPanelArrowIcon: React.CSSProperties = {\n  ...commonIconStyle,\n  fontSize: '24px',\n  marginTop: '-4px',\n  outline: '0',\n};\n\nconst debugPanelIcon = (left, isLeftActive): React.CSSProperties => ({\n  ...commonIconStyle,\n  borderWidth: '2px',\n  borderStyle: 'solid ',\n  borderColor: '#555',\n  [left ? 'borderLeftWidth' : 'borderRightWidth']: '6px',\n  width: '16px',\n  height: '14px',\n  ...(left === isLeftActive && {\n    borderColor: '#6495ed',\n  }),\n});\n\nconst debugPanelRoot = (left): React.CSSProperties => ({\n  position: 'fixed',\n  [left ? 'left' : 'right']: 0,\n  top: 0,\n  zIndex: 999999999,\n  width: '350px',\n  height: '100vh',\n  color: '#313941',\n  background: '#fff',\n  lineHeight: 1.1,\n  fontSize: '12px',\n  overflowY: 'scroll',\n  [left ? 'borderRight' : 'borderLeft']: '1px solid rgba(0, 0, 0, 0.2)',\n  boxShadow: '0 0 8px rgba(0, 0, 0, .1)',\n});\n\nconst debugHeaderContainer = (): React.CSSProperties => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: '8px',\n  margin: '0 -4px 4px',\n  overflow: 'hidden',\n  background: '#f3f3f3',\n  borderTop: '1px solid #d0d0d0',\n  borderBottom: '1px solid #d0d0d0',\n});\n\nconst debugHeader = (): React.CSSProperties => ({\n  fontSize: '14px',\n  fontWeight: 'bold',\n});\n\nconst debugNoData = (): React.CSSProperties => ({\n  padding: '8px',\n  color: 'rgba(0, 0, 0, 0.75)',\n  textAlign: 'center',\n  background: 'rgba(0, 0, 0, 0.05)',\n  marginBottom: '4px',\n});\n\nconst debugPanelSelectContainer = (): React.CSSProperties => ({\n  width: 'auto',\n});\n\nconst debugPanelBody: React.CSSProperties = {\n  overflowWrap: 'break-word',\n  wordWrap: 'break-word',\n  wordBreak: 'break-all',\n  hyphens: 'auto',\n};\n\nconst debugPanel: React.CSSProperties = {\n  padding: '0 4px',\n};\n"],"file":"DebugPanel.js"}