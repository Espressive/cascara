{"version":3,"sources":["components/Attachment/Attachment.tsx"],"names":["attachmentClassName","Attachment","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","action","actionable","body","className","description","design","disabled","header","icon","onClick","progress","styles","variables","getA11Props","debugName","actionHandlers","performClick","e","currentTarget","target","stopPropagation","handleClick","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","slotProps","resolveSlotProps","ElementType","unhandledProps","handledProps","preventDefault","element","unstable_wrapWithFocusZone","root","slots","defaultProps","overrideProps","predefinedProps","content","width","AttachmentAction","AttachmentBody","AttachmentDescription","AttachmentHeader","AttachmentIcon","create","Component","mappedProp","propTypes","commonPropTypes","createCommon","customPropTypes","itemShorthand","PropTypes","bool","shorthandAllowingChildren","func","oneOfType","string","number","attachmentBehavior","Action","Body","Description","Header","Icon"],"mappings":"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","sourcesContent":["import { Accessibility, attachmentBehavior, AttachmentBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ComponentEventHandler, ShorthandValue } from '../../types';\nimport {\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  createShorthand,\n  ShorthandFactory,\n} from '../../utils';\nimport { AttachmentAction, AttachmentActionProps } from './AttachmentAction';\nimport { AttachmentBody, AttachmentBodyProps } from './AttachmentBody';\nimport { AttachmentDescription, AttachmentDescriptionProps } from './AttachmentDescription';\nimport { AttachmentHeader, AttachmentHeaderProps } from './AttachmentHeader';\nimport { AttachmentIcon, AttachmentIconProps } from './AttachmentIcon';\n\nexport interface AttachmentProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<AttachmentBehaviorProps>;\n\n  /** Button shorthand for the action slot. */\n  action?: ShorthandValue<AttachmentActionProps>;\n\n  /** An Attachment can be styled to indicate possible user interaction. */\n  actionable?: boolean;\n\n  /** Contains a header and a description for an Attachment. */\n  body?: ShorthandValue<AttachmentBodyProps>;\n\n  /** A string describing the attachment. */\n  description?: ShorthandValue<AttachmentDescriptionProps>;\n\n  /** An attachment can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** The name of the attachment. */\n  header?: ShorthandValue<AttachmentHeaderProps>;\n\n  /** Shorthand for the icon. */\n  icon?: ShorthandValue<AttachmentIconProps>;\n\n  /** Value indicating percent complete. */\n  progress?: string | number;\n\n  /**\n   * Called after user's click.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AttachmentProps>;\n}\n\nexport type AttachmentStylesProps = Required<Pick<AttachmentProps, 'actionable' | 'disabled'>>;\nexport const attachmentClassName = 'ui-attachment';\n\n/**\n * An Attachment represents a file or media attachment, which may contain some metadata or actions.\n */\nexport const Attachment = compose<'div', AttachmentProps, AttachmentStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      action,\n      actionable,\n      body,\n      className,\n      description,\n      design,\n      disabled,\n      header,\n      icon,\n      onClick,\n      progress,\n      styles,\n      variables,\n    } = props;\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: e => {\n          if (e.currentTarget === e.target) {\n            e.stopPropagation();\n            handleClick(e);\n          }\n        },\n      },\n      mapPropsToBehavior: () => ({ actionable }),\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<AttachmentStylesProps>(composeOptions.displayName, {\n      className: attachmentClassName,\n      mapPropsToStyles: () => ({\n        actionable: actionable || !!onClick,\n        disabled,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: props,\n    });\n\n    const slotProps = composeOptions.resolveSlotProps<AttachmentProps>(props);\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const handleClick = (e: React.KeyboardEvent | React.MouseEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const element = getA11Props.unstable_wrapWithFocusZone(\n      <ElementType {...getA11Props('root', { className: classes.root, onClick: handleClick, ref, ...unhandledProps })}>\n        {createShorthand(composeOptions.slots.icon, icon, {\n          defaultProps: () => slotProps.icon,\n          overrideProps: predefinedProps => ({\n            variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n          }),\n        })}\n\n        {(header || description) &&\n          createShorthand(composeOptions.slots.body, body, {\n            defaultProps: () => slotProps.body,\n            overrideProps: predefinedProps => ({\n              content: (\n                <>\n                  {createShorthand(composeOptions.slots.header, header, {\n                    defaultProps: () => slotProps.header,\n                    overrideProps: predefinedProps => ({\n                      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n                    }),\n                  })}\n                  {createShorthand(composeOptions.slots.description, description, {\n                    defaultProps: () => slotProps.description,\n                    overrideProps: predefinedProps => ({\n                      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n                    }),\n                  })}\n                </>\n              ),\n              variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n            }),\n          })}\n\n        {createShorthand(composeOptions.slots.action, action, {\n          defaultProps: () => slotProps.action,\n          overrideProps: predefinedProps => ({\n            variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n          }),\n        })}\n        {!_.isNil(progress) && <div className=\"ui-attachment__progress\" style={{ width: `${progress}%` }} />}\n      </ElementType>,\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: attachmentClassName,\n    displayName: 'Attachment',\n    slots: {\n      action: AttachmentAction,\n      body: AttachmentBody,\n      description: AttachmentDescription,\n      header: AttachmentHeader,\n      icon: AttachmentIcon,\n    },\n    handledProps: [\n      'accessibility',\n      'action',\n      'actionable',\n      'as',\n      'body',\n      'children',\n      'className',\n      'description',\n      'design',\n      'header',\n      'icon',\n      'onClick',\n      'progress',\n      'styles',\n      'variables',\n    ],\n  },\n) as ComponentWithAs<'div', AttachmentProps> & {\n  create: ShorthandFactory<AttachmentProps>;\n  Action: typeof AttachmentAction;\n  Body: typeof AttachmentBody;\n  Description: typeof AttachmentDescription;\n  Header: typeof AttachmentHeader;\n  Icon: typeof AttachmentIcon;\n};\n\nAttachment.create = createShorthandFactory({ Component: Attachment, mappedProp: 'header' });\n\nAttachment.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  action: customPropTypes.itemShorthand,\n  actionable: PropTypes.bool,\n  body: customPropTypes.itemShorthand,\n  description: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  icon: customPropTypes.shorthandAllowingChildren,\n  onClick: PropTypes.func,\n  progress: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\nAttachment.defaultProps = {\n  accessibility: attachmentBehavior,\n  body: {},\n};\n\nAttachment.Action = AttachmentAction;\nAttachment.Body = AttachmentBody;\nAttachment.Description = AttachmentDescription;\nAttachment.Header = AttachmentHeader;\nAttachment.Icon = AttachmentIcon;\n"],"file":"Attachment.js"}