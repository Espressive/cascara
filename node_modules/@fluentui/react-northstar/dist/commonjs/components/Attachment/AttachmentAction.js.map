{"version":3,"sources":["components/Attachment/AttachmentAction.tsx"],"names":["attachmentActionClassName","AttachmentAction","Button","className","displayName","overrideStyles","shorthandConfig","mappedProp","defaultProps","accessibility","buttonBehavior","as","propTypes","commonPropTypes","createCommon","content","disabled","PropTypes","bool","icon","customPropTypes","shorthandAllowingChildren","iconPosition","oneOf","loader","itemShorthandWithoutJSX","loading","onClick","func","onFocus","primary","every","disallow","secondary"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAqBO,IAAMA,yBAAyB,GAAG,uBAAlC;AAEP;AACA;AACA;;;AACO,IAAMC,gBAAgB,GAAG,4BAM9BC,cAN8B,EAMtB;AACRC,EAAAA,SAAS,EAAEH,yBADH;AAERI,EAAAA,WAAW,EAAE,kBAFL;AAGRC,EAAAA,cAAc,EAAE,IAHR;AAKRC,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE;AADG;AALT,CANsB,CAAzB;;AAgBPN,gBAAgB,CAACO,YAAjB,GAAgC;AAC9BC,EAAAA,aAAa,EAAEC,6BADe;AAE9BC,EAAAA,EAAE,EAAE;AAF0B,CAAhC;AAIAV,gBAAgB,CAACW,SAAjB,qBACKC,uBAAgBC,YAAhB,CAA6B;AAC9BC,EAAAA,OAAO,EAAE;AADqB,CAA7B,CADL;AAIEC,EAAAA,QAAQ,EAAEC,SAAS,CAACC,IAJtB;AAKEC,EAAAA,IAAI,EAAEC,eAAe,CAACC,yBALxB;AAMEC,EAAAA,YAAY,EAAEL,SAAS,CAACM,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CANhB;AAOEC,EAAAA,MAAM,EAAEJ,eAAe,CAACK,uBAP1B;AAQEC,EAAAA,OAAO,EAAET,SAAS,CAACC,IARrB;AASES,EAAAA,OAAO,EAAEV,SAAS,CAACW,IATrB;AAUEC,EAAAA,OAAO,EAAEZ,SAAS,CAACW,IAVrB;AAWEE,EAAAA,OAAO,EAAEV,eAAe,CAACW,KAAhB,CAAsB,CAACX,eAAe,CAACY,QAAhB,CAAyB,CAAC,WAAD,CAAzB,CAAD,EAA0Cf,SAAS,CAACC,IAApD,CAAtB,CAXX;AAYEe,EAAAA,SAAS,EAAEb,eAAe,CAACW,KAAhB,CAAsB,CAACX,eAAe,CAACY,QAAhB,CAAyB,CAAC,SAAD,CAAzB,CAAD,EAAwCf,SAAS,CAACC,IAAlD,CAAtB;AAZb","sourcesContent":["import { buttonBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport { Button, ButtonProps, ButtonStylesProps } from '../Button/Button';\n\nexport interface AttachmentActionOwnProps {}\nexport interface AttachmentActionProps extends AttachmentActionOwnProps, ButtonProps {\n  text?: never;\n  iconOnly?: never;\n  circular?: never;\n  size?: never;\n  fluid?: never;\n  inverted?: never;\n}\n\nexport type AttachmentActionStylesProps = ButtonStylesProps & {\n  text?: never;\n  iconOnly?: never;\n  circular?: never;\n  size?: never;\n  fluid?: never;\n  inverted?: never;\n};\n\nexport const attachmentActionClassName = 'ui-attachment__action';\n\n/**\n * An AttachmentAction provides a slot for actions in the Attachment.\n */\nexport const AttachmentAction = compose<\n  'button',\n  AttachmentActionOwnProps,\n  AttachmentActionStylesProps,\n  ButtonProps,\n  ButtonStylesProps\n>(Button, {\n  className: attachmentActionClassName,\n  displayName: 'AttachmentAction',\n  overrideStyles: true,\n\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n});\n\nAttachmentAction.defaultProps = {\n  accessibility: buttonBehavior,\n  as: 'button',\n};\nAttachmentAction.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  disabled: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconPosition: PropTypes.oneOf(['before', 'after']),\n  loader: customPropTypes.itemShorthandWithoutJSX,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n};\n"],"file":"AttachmentAction.js"}