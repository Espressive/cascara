"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.dividerStyles = void 0;

var _get2 = _interopRequireDefault(require("lodash/get"));

var _utils = require("../../../../utils");

var beforeAndAfter = function beforeAndAfter(size, variables, colors, props) {
  return Object.assign({
    content: '""',
    flex: 1
  }, props.vertical ? {
    width: size + 1 + "px",
    height: '100%'
  } : {
    height: size + 1 + "px"
  }, {
    background: (0, _get2.default)(colors, 'foreground', variables.dividerColor)
  });
};

var dividerStyles = {
  root: function root(_ref) {
    var props = _ref.props,
        variables = _ref.variables;
    var color = props.color,
        fitted = props.fitted,
        size = props.size,
        important = props.important,
        hasContent = props.hasContent,
        vertical = props.vertical;
    var colors = variables.colorScheme[color];
    return Object.assign({
      color: (0, _get2.default)(colors, 'foreground', variables.textColor),
      display: 'flex',
      alignItems: 'center'
    }, !fitted && {
      padding: vertical ? "0 " + variables.dividerPadding : variables.dividerPadding + " 0"
    }, important && {
      fontWeight: variables.importantFontWeight
    }, vertical && {
      height: '100%'
    }, hasContent ? {
      textAlign: 'center',
      fontSize: (0, _utils.pxToRem)(12 + size),
      lineHeight: variables.textLineHeight,
      '::before': Object.assign({}, beforeAndAfter(size, variables, colors, props)),
      '::after': Object.assign({}, beforeAndAfter(size, variables, colors, props))
    } : {
      '::before': Object.assign({}, beforeAndAfter(size, variables, colors, props))
    });
  }
};
exports.dividerStyles = dividerStyles;
//# sourceMappingURL=dividerStyles.js.map
