{"version":3,"sources":["themes/teams/components/Layout/layoutStyles.ts"],"names":["countTrue","items","filter","Boolean","length","layoutStyles","root","props","alignItems","debug","gap","justifyItems","hasMain","mainSize","hasEnd","endSize","hasStart","startSize","vertical","display","join","gridAutoFlow","msGridColumns","start","p","main","end"],"mappings":"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","sourcesContent":["import { debugRoot, debugArea, debugGap } from '../../../../styles/debugStyles';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { LayoutStylesProps } from '../../../../components/Layout/Layout';\n\nconst countTrue = items => items.filter(Boolean).length;\n\nexport const layoutStyles: ComponentSlotStylesPrepared<LayoutStylesProps> = {\n  root: ({ props }): ICSSInJSStyle => {\n    const {\n      alignItems,\n      debug,\n      gap,\n      justifyItems,\n      hasMain,\n      mainSize,\n      hasEnd,\n      endSize,\n      hasStart,\n      startSize,\n      vertical,\n    } = props;\n\n    return {\n      ...(debug && debugRoot()),\n      justifyItems,\n      alignItems,\n      display: 'grid',\n      [vertical ? 'gridTemplateRows' : 'gridTemplateColumns']: [\n        // Heads up!\n        // IE11 Doesn't support grid-gap, insert virtual columns instead\n        hasStart && startSize,\n        gap && hasStart && hasMain && gap,\n        hasMain && mainSize,\n        gap && (hasStart || hasMain) && hasEnd && gap,\n        hasEnd && endSize,\n      ]\n        .filter(Boolean)\n        .join(' '),\n      ...(vertical && {\n        gridAutoFlow: 'row',\n        msGridColumns: '1fr',\n      }),\n    };\n  },\n\n  gap: ({ props }): ICSSInJSStyle => ({\n    ...(props.debug && debugGap({ vertical: props.vertical })),\n  }),\n\n  start: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.debug && debugArea()),\n    alignItems: 'center',\n    display: 'inline-flex',\n    [p.vertical ? 'msGridRow' : 'msGridColumn']: '1',\n  }),\n\n  main: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.debug && debugArea()),\n    alignItems: 'center',\n    display: 'grid',\n    [p.vertical ? 'msGridRow' : 'msGridColumn']: countTrue([p.hasStart, p.hasStart && p.gap, p.hasMain]),\n  }),\n\n  end: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.debug && debugArea()),\n    alignItems: 'center',\n    display: 'inline-flex',\n    [p.vertical ? 'msGridRow' : 'msGridColumn']: countTrue([p.hasStart, p.hasStart && p.gap, p.hasMain && p.gap]),\n  }),\n};\n"],"file":"layoutStyles.js"}