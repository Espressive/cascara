{"version":3,"sources":["themes/teams/components/Chat/chatMessageStylesComfy.ts"],"names":["chatMessageStylesComfy","root","p","props","v","variables","marginLeft","mine","offset","marginRight","maxWidth","minWidth","paddingLeft","padding","paddingRight","paddingTop","paddingBottom","backgroundColor","backgroundColorMine","border","hasMention","isImportant","chatMessageSlotClassNames","bar","hasMentionColor","isImportantColor","position","borderBottomLeftRadius","borderTopLeftRadius","height","left","top","width","attached","author","screenReaderContainerStyles","color","authorColor","fontWeight","authorFontWeight","authorMarginRight","marginBottom","headerMarginBottom","badge","badgePosition","transform","content","hasBadge","reactionGroup","reactionGroupMarginLeft","float","timestamp","timestampColorMine","hasReactionGroup"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\n\nimport { chatMessageSlotClassNames, ChatMessageStylesProps } from '../../../../components/Chat/ChatMessage';\nimport { pxToRem } from '../../../../utils';\nimport { screenReaderContainerStyles } from '../../../../utils/accessibility/Styles/accessibilityStyles';\nimport { ChatMessageVariables } from './chatMessageVariables';\n\n/** ChatMessage styles specific for the default/comfy density. */\nexport const chatMessageStylesComfy: ComponentSlotStylesPrepared<ChatMessageStylesProps, ChatMessageVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    marginLeft: p.mine ? v.offset : 0,\n    marginRight: !p.mine ? v.offset : 0,\n    maxWidth: `calc(100% - ${v.offset})`,\n    minWidth: v.offset,\n\n    paddingLeft: v.padding,\n    paddingRight: v.padding,\n    paddingTop: pxToRem(8),\n    paddingBottom: pxToRem(10),\n\n    backgroundColor: p.mine ? v.backgroundColorMine : v.backgroundColor,\n    border: v.border,\n\n    ...((v.hasMention || v.isImportant) && {\n      [`& .${chatMessageSlotClassNames.bar}`]: {\n        backgroundColor: v.hasMention ? v.hasMentionColor : v.isImportantColor,\n        position: 'absolute',\n\n        borderBottomLeftRadius: 'inherit',\n        borderTopLeftRadius: 'inherit',\n        height: '100%',\n        left: '0',\n        top: '0',\n        width: pxToRem(3),\n      },\n    }),\n\n    ...(p.attached === true && {\n      [p.mine ? 'borderTopRightRadius' : 'borderTopLeftRadius']: 0,\n      [p.mine ? 'borderBottomRightRadius' : 'borderBottomLeftRadius']: 0,\n      paddingTop: pxToRem(5),\n      paddingBottom: pxToRem(7),\n    }),\n    ...(p.attached === 'top' && {\n      [p.mine ? 'borderBottomRightRadius' : 'borderBottomLeftRadius']: 0,\n    }),\n    ...(p.attached === 'bottom' && {\n      [p.mine ? 'borderTopRightRadius' : 'borderTopLeftRadius']: 0,\n      paddingTop: pxToRem(5),\n      paddingBottom: pxToRem(7),\n    }),\n  }),\n\n  author: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    ...((p.mine || p.attached === 'bottom' || p.attached === true) && (screenReaderContainerStyles as ICSSInJSStyle)),\n    color: v.authorColor,\n    fontWeight: v.authorFontWeight,\n    marginRight: v.authorMarginRight,\n    marginBottom: v.headerMarginBottom,\n  }),\n\n  badge: ({ props: p }) => ({\n    [p.badgePosition === 'start' ? 'left' : 'right']: 0,\n    transform: p.badgePosition === 'start' ? 'translateX(-50%)' : 'translateX(50%)',\n    top: pxToRem(4),\n    position: 'absolute',\n  }),\n\n  content: ({ props: p }): ICSSInJSStyle => ({\n    ...(p.hasBadge && p.badgePosition === 'end' && { marginRight: pxToRem(4) }),\n  }),\n\n  reactionGroup: ({ props: p, variables: v }) => ({\n    marginLeft: v.reactionGroupMarginLeft,\n    ...(p.hasBadge && p.badgePosition === 'end' && { marginRight: pxToRem(2) }),\n    float: 'right',\n  }),\n\n  timestamp: ({ props: p, variables: v }) => ({\n    marginBottom: v.headerMarginBottom,\n    ...(p.mine && { color: v.timestampColorMine }),\n    ...((p.attached === 'bottom' || p.attached === true) &&\n      !p.hasReactionGroup &&\n      (screenReaderContainerStyles as ICSSInJSStyle)),\n  }),\n};\n"],"file":"chatMessageStylesComfy.js"}