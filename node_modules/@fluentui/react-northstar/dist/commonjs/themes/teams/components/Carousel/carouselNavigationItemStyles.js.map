{"version":3,"sources":["themes/teams/components/Carousel/carouselNavigationItemStyles.ts"],"names":["carouselNavigationItemStyles","root","p","props","v","variables","active","iconOnly","primary","vertical","thumbnails","colors","colorScheme","color","display","cursor","whiteSpace","border","padding","verticalItemPadding","horizontalPadding","margin","alignItems","justifyContent","iconOnlyColorActive","outline","borderRadius","borderColor","borderColorActive","borderActive","carouselNavigationItemSlotClassNames","indicator","background","indicatorBackgroundColor","content","widthAdjust","hasIndicator","lineHeight","marginTop","marginBottom","width","opacity","minWidth","maxWidth","marginRight","height","indicatorActiveBackgroundColor","hasContent","verticalAlign"],"mappings":"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","sourcesContent":["import { pxToRem } from '../../../../utils';\nimport {\n  CarouselNavigationItemStylesProps,\n  carouselNavigationItemSlotClassNames,\n} from '../../../../components/Carousel/CarouselNavigationItem';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { CarouselNavigationVariables } from './carouselNavigationVariables';\nimport { getColorScheme } from '../../colors';\nimport { getIconFillOrOutlineStyles } from '../../getIconFillOrOutlineStyles';\n\nexport const carouselNavigationItemStyles: ComponentSlotStylesPrepared<\n  CarouselNavigationItemStylesProps,\n  CarouselNavigationVariables\n> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const { active, iconOnly, primary, vertical, thumbnails } = p;\n\n    const colors = getColorScheme(v.colorScheme, null, primary);\n\n    return {\n      color: 'inherit',\n      display: 'block',\n      cursor: 'pointer',\n      whiteSpace: 'nowrap',\n\n      ...(iconOnly && {\n        border: `${pxToRem(2)} solid transparent`,\n      }),\n\n      ...(vertical\n        ? { padding: v.verticalItemPadding }\n        : {\n            padding: v.horizontalPadding,\n          }),\n\n      ...(iconOnly && {\n        margin: pxToRem(1),\n        padding: pxToRem(5), // padding works this way to get the border to only be 30x30px on focus which is the current design\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }),\n\n      // active styles\n      ...(active &&\n        iconOnly && {\n          color: v.iconOnlyColorActive,\n          ...getIconFillOrOutlineStyles({ outline: false }),\n        }),\n\n      // focus styles\n      ':focus-visible': {\n        ...(iconOnly && {\n          borderRadius: '50%',\n          ...(thumbnails && { borderRadius: '0' }),\n          borderColor: v.iconOnlyColorActive,\n          ...getIconFillOrOutlineStyles({ outline: false }),\n        }),\n      },\n\n      ...(iconOnly &&\n        primary && {\n          color: 'inherit',\n          borderColor: v.borderColorActive || colors.borderActive,\n        }),\n\n      ':focus': {\n        outline: 0,\n      },\n\n      // hover styles\n      ':hover': {\n        color: 'inherit',\n\n        [`& .${carouselNavigationItemSlotClassNames.indicator}`]: {\n          background: v.indicatorBackgroundColor,\n        },\n\n        ...(iconOnly && getIconFillOrOutlineStyles({ outline: false })),\n\n        ...(primary && iconOnly && { color: 'inherit' }),\n      },\n    };\n  },\n\n  content: ({ props: p }): ICSSInJSStyle => {\n    const widthAdjust = p.hasIndicator ? 26 : 0;\n\n    return {\n      whiteSpace: 'normal',\n      lineHeight: 1.5,\n      marginTop: pxToRem(-4),\n      marginBottom: pxToRem(-4),\n      display: 'inline-block',\n      ...(p.thumbnails && { width: pxToRem(60), ...(!p.active && { opacity: 0.4 }) }),\n      ...(p.vertical && {\n        width: 'max-content',\n        minWidth: pxToRem(46 - widthAdjust),\n        maxWidth: pxToRem(262 - widthAdjust),\n        marginRight: pxToRem(16),\n      }),\n    };\n  },\n\n  indicator: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    borderRadius: '50%',\n    width: pxToRem(7),\n    height: pxToRem(7),\n    background: v.indicatorBackgroundColor,\n\n    ...(p.active && {\n      background: v.indicatorActiveBackgroundColor,\n    }),\n\n    ...(p.hasContent && {\n      marginRight: pxToRem(10),\n    }),\n\n    ...(!p.iconOnly && {\n      // reduce margins so text has the dominant influence on the vertical height\n      marginTop: 0,\n      marginBottom: pxToRem(-8),\n      verticalAlign: 'top',\n    }),\n  }),\n};\n"],"file":"carouselNavigationItemStyles.js"}