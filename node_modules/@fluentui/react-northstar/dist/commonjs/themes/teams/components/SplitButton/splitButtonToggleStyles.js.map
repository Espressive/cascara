{"version":3,"sources":["themes/teams/components/SplitButton/splitButtonToggleStyles.ts"],"names":["getIndicatorStyles","color","outline","size","content","width","height","backgroundImage","backgroundRepeat","splitButtonToggleStyles","root","p","props","v","variables","theme","siteVariables","borderWidth","borderFocusStyles","borderRadius","focusBorderRadius","focusBorderWidth","focusInnerBorderColor","focusOuterBorderColor","zIndexes","foreground","focusBorderZIndex","borderPadding","toggleButtonHeight","minWidth","toggleButtonColor","backgroundColor","toggleButtonBackgroundColor","toggleButtonBorderRadius","display","justifyContent","alignItems","position","verticalAlign","cursor","padding","borderStyle","borderColor","toggleButtonBorderColor","boxShadow","toggleButtonBoxShadow","borderTopLeftRadius","borderBottomLeftRadius","disabled","toggleButtonColorDisabled","primary","toggleButtonPrimaryColor","toggleButtonIndicatorSize","toggleButtonColorHover","background","toggleButtonBackgroundColorHover","toggleButtonColorActive","toggleButtonBackgroundColorActive","toggleButtonBorderColorActive","toggleButtonBackgroundColorFocus","toggleButtonBorderColorFocus","toggleButtonColorFocus","toggleButtonBorderColorHover","toggleButtonPrimaryBackgroundColor","toggleButtonPrimaryBorderColor","toggleButtonPrimaryBoxShadow","toggleButtonPrimaryBackgroundColorActive","toggleButtonPrimaryBackgroundColorFocus","toggleButtonPrimaryHoverColor","toggleButtonPrimaryHoverBackgroundColor","pointerEvents","toggleButtonBackgroundColorDisabled","borderColorDisabled","smallDimension","smallMinWidth","smallBoxShadow"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { SplitButtonToggleStylesProps } from '../../../../components/SplitButton/SplitButtonToggle';\nimport { SplitButtonVariables } from './splitButtonVariables';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { getIconFillOrOutlineStyles } from '../../getIconFillOrOutlineStyles';\nimport { toggleIndicatorUrl } from './toggleIndicatorUrl';\n\nconst getIndicatorStyles = (color: string, outline: boolean, size: string): ICSSInJSStyle => {\n  return {\n    content: '\"\"',\n    width: size,\n    height: size,\n    backgroundImage: toggleIndicatorUrl(color, outline),\n    backgroundRepeat: 'no-repeat',\n  };\n};\n\nexport const splitButtonToggleStyles: ComponentSlotStylesPrepared<\n  SplitButtonToggleStylesProps,\n  SplitButtonVariables\n> = {\n  root: ({ props: p, variables: v, theme }): ICSSInJSStyle => {\n    const { siteVariables } = theme;\n    const { borderWidth } = siteVariables;\n\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: {\n        borderRadius: v.focusBorderRadius,\n        borderWidth: v.focusBorderWidth,\n        focusInnerBorderColor: v.focusInnerBorderColor,\n        focusOuterBorderColor: v.focusOuterBorderColor,\n        zIndexes: { foreground: v.focusBorderZIndex },\n      },\n      borderPadding: borderWidth,\n    });\n\n    return {\n      height: v.toggleButtonHeight,\n      minWidth: v.toggleButtonHeight,\n      color: v.toggleButtonColor,\n      backgroundColor: v.toggleButtonBackgroundColor,\n      borderRadius: v.toggleButtonBorderRadius,\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'relative',\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n\n      outline: 0,\n      padding: 0,\n      borderWidth,\n      borderStyle: 'solid',\n      borderColor: v.toggleButtonBorderColor,\n      boxShadow: v.toggleButtonBoxShadow,\n\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n\n      ...getIconFillOrOutlineStyles({ outline: true }),\n\n      ':before': {\n        ...getIndicatorStyles(\n          p.disabled ? v.toggleButtonColorDisabled : p.primary ? v.toggleButtonPrimaryColor : v.toggleButtonColor,\n          true,\n          v.toggleButtonIndicatorSize,\n        ),\n      },\n\n      ':hover': {\n        ...getIconFillOrOutlineStyles({ outline: false }),\n        ':before': {\n          ...getIndicatorStyles(v.toggleButtonColorHover, false, v.toggleButtonIndicatorSize),\n        },\n        color: v.toggleButtonColorHover,\n        background: v.toggleButtonBackgroundColorHover,\n      },\n\n      ':active': {\n        color: v.toggleButtonColorActive,\n        backgroundColor: v.toggleButtonBackgroundColorActive,\n        borderColor: v.toggleButtonBorderColorActive,\n        boxShadow: 'none',\n      },\n\n      ':focus': borderFocusStyles[':focus'],\n      ':focus-visible': {\n        backgroundColor: v.toggleButtonBackgroundColorFocus,\n        borderColor: v.toggleButtonBorderColorFocus,\n        color: v.toggleButtonColorFocus,\n        borderWidth,\n\n        ':hover': {\n          borderColor: v.toggleButtonBorderColorHover,\n        },\n      },\n\n      // Overrides for \"primary\" split button\n      ...(p.primary && {\n        color: v.toggleButtonPrimaryColor,\n        backgroundColor: v.toggleButtonPrimaryBackgroundColor,\n        borderColor: v.toggleButtonPrimaryBorderColor,\n        boxShadow: v.toggleButtonPrimaryBoxShadow,\n        borderWidth: `0 0 0 ${siteVariables.borderWidth}`,\n\n        ':active': {\n          backgroundColor: v.toggleButtonPrimaryBackgroundColorActive,\n          boxShadow: 'none',\n        },\n\n        ':focus': borderFocusStyles[':focus'],\n        ':focus-visible': {\n          backgroundColor: v.toggleButtonPrimaryBackgroundColorFocus,\n        },\n\n        ':hover': {\n          color: v.toggleButtonPrimaryHoverColor,\n          backgroundColor: v.toggleButtonPrimaryHoverBackgroundColor,\n        },\n      }),\n\n      // Overrides for \"disabled\" split button\n      ...(p.disabled && {\n        cursor: 'default',\n        color: v.toggleButtonColorDisabled,\n        boxShadow: 'none',\n        pointerEvents: 'none',\n        ':hover': {\n          color: v.toggleButtonColorDisabled,\n        },\n\n        backgroundColor: v.toggleButtonBackgroundColorDisabled,\n\n        borderWidth: `0 0 0 ${siteVariables.borderWidth}`,\n        borderColor: v.borderColorDisabled,\n      }),\n\n      ...(p.size === 'small' && {\n        height: v.smallDimension,\n        width: v.smallDimension,\n        minWidth: v.smallMinWidth,\n        boxShadow: v.smallBoxShadow,\n      }),\n    };\n  },\n};\n"],"file":"splitButtonToggleStyles.js"}