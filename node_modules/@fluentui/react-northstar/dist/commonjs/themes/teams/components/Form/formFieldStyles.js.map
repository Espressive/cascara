{"version":3,"sources":["themes/teams/components/Form/formFieldStyles.ts"],"names":["formFieldStyles","root","props","variables","label","type","inline","required","display","marginBottom","marginRight","content","control","v","message","p","hasErrorMessage","color","colorScheme","red","foreground","paddingLeft","messagePaddingLeft","icon"],"mappings":";;;;;AAEA;;AAGO,IAAMA,eAAsF,GAAG;AACpGC,EAAAA,IAAI,EAAE;AAAA,QAAGC,KAAH,QAAGA,KAAH;AAAA,QAAUC,SAAV,QAAUA,SAAV;AAAA,WAA0C,EAA1C;AAAA,GAD8F;AAEpGC,EAAAA,KAAK,EAAE,sBAA8B;AAAA,QAA3BF,KAA2B,SAA3BA,KAA2B;AAAA,QAC3BG,IAD2B,GACAH,KADA,CAC3BG,IAD2B;AAAA,QACrBC,MADqB,GACAJ,KADA,CACrBI,MADqB;AAAA,QACbC,QADa,GACAL,KADA,CACbK,QADa;AAEnC,6BACM,CAAC,CAACF,IAAD,IAAUA,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,UAAxC,KAAwD;AAC1DG,MAAAA,OAAO,EAAE,OADiD;AAE1DC,MAAAA,YAAY,EAAE,oBAAQ,CAAR;AAF4C,KAD9D,EAKMH,MAAM,IAAI;AAAEI,MAAAA,WAAW,EAAE,oBAAQ,EAAR,CAAf;AAA4BF,MAAAA,OAAO,EAAE;AAArC,KALhB,EAMMD,QAAQ,IAAI;AACd,iBAAW;AACTI,QAAAA,OAAO,EAAE;AADA;AADG,KANlB;AAYD,GAhBmG;AAiBpGC,EAAAA,OAAO,EAAE,wBAA4C;AAAA,QAAzCV,KAAyC,SAAzCA,KAAyC;AAAA,QAAvBW,CAAuB,SAAlCV,SAAkC;AAAA,QAC3CE,IAD2C,GAClCH,KADkC,CAC3CG,IAD2C;AAEnD,6BACMA,IAAI,KACLA,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,UADxB,CAAJ,IAC2C;AAC3CK,MAAAA,WAAW,EAAE,oBAAQ,EAAR;AAD8B,KAFjD;AAMD,GAzBmG;AA0BpGI,EAAAA,OAAO,EAAE;AAAA,QAAUC,CAAV,SAAGb,KAAH;AAAA,QAAwBW,CAAxB,SAAaV,SAAb;AAAA,6BACHY,CAAC,CAACC,eAAF,IAAqB;AAAEC,MAAAA,KAAK,EAAEJ,CAAC,CAACK,WAAF,CAAcC,GAAd,CAAkBC;AAA3B,KADlB;AAEPZ,MAAAA,OAAO,EAAE,OAFF;AAGPa,MAAAA,WAAW,EAAER,CAAC,CAACS;AAHR;AAAA,GA1B2F;AA+BpGC,EAAAA,IAAI,EAAE;AAAA,QAAUR,CAAV,SAAGb,KAAH;AAAA,QAAwBW,CAAxB,SAAaV,SAAb;AAAA,6BACAY,CAAC,CAACC,eAAF,IAAqB;AAAEC,MAAAA,KAAK,EAAEJ,CAAC,CAACK,WAAF,CAAcC,GAAd,CAAkBC;AAA3B,KADrB;AAAA;AA/B8F,CAA/F","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { FormFieldStylesProps } from '../../../../components/Form/FormField';\nimport { pxToRem } from '../../../../utils';\nimport { FormFieldVariables } from './formFieldVariables';\n\nexport const formFieldStyles: ComponentSlotStylesPrepared<FormFieldStylesProps, FormFieldVariables> = {\n  root: ({ props, variables }): ICSSInJSStyle => ({}),\n  label: ({ props }): ICSSInJSStyle => {\n    const { type, inline, required } = props;\n    return {\n      ...((!type || (type !== 'radio' && type !== 'checkbox')) && {\n        display: 'block',\n        marginBottom: pxToRem(4),\n      }),\n      ...(inline && { marginRight: pxToRem(10), display: 'inline' }),\n      ...(required && {\n        '::after': {\n          content: '\"*\"',\n        },\n      }),\n    };\n  },\n  control: ({ props, variables: v }): ICSSInJSStyle => {\n    const { type } = props;\n    return {\n      ...(type &&\n        (type === 'radio' || type === 'checkbox') && {\n          marginRight: pxToRem(10),\n        }),\n    };\n  },\n  message: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    ...(p.hasErrorMessage && { color: v.colorScheme.red.foreground }),\n    display: 'block',\n    paddingLeft: v.messagePaddingLeft,\n  }),\n  icon: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    ...(p.hasErrorMessage && { color: v.colorScheme.red.foreground }),\n  }),\n};\n"],"file":"formFieldStyles.js"}