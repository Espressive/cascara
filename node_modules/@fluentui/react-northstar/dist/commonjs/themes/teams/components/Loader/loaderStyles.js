"use strict";

exports.__esModule = true;
exports.loaderStyles = void 0;

var _utils = require("../../../../utils");

var rootFlexDirections = {
  above: 'column-reverse',
  below: 'column',
  start: 'row-reverse',
  end: 'row'
};
var loaderStyles = {
  root: function root(_ref) {
    var p = _ref.props;
    return {
      alignItems: 'center',
      display: p.inline ? 'inline-flex' : 'flex',
      justifyContent: 'center',
      flexDirection: rootFlexDirections[p.labelPosition]
    };
  },
  indicator: function indicator(_ref2) {
    var p = _ref2.props,
        v = _ref2.variables;
    return {
      height: v.containerHeights[p.size],
      width: v.containerWidths[p.size],
      overflow: 'hidden'
    };
  },
  svg: function svg(_ref3) {
    var p = _ref3.props,
        t = _ref3.theme,
        v = _ref3.variables;
    var outerAnimation = {
      animationName: {
        to: {
          opacity: 1
        }
      },
      animationDelay: '1.5s',
      animationDirection: 'normal',
      animationDuration: '.3s',
      animationFillMode: 'both',
      animationIterationCount: '1',
      animationPlayState: 'running',
      animationTimingFunction: 'ease-out',
      display: 'block',
      overflow: 'hidden',
      position: 'relative'
    };
    var svgAnimation = {
      animationName: {
        to: {
          transform: "translate3d(0, " + v.svgTranslatePosition[p.size] + ", 0)"
        }
      },
      animationDelay: '0s',
      animationDirection: 'normal',
      animationDuration: '2s',
      animationFillMode: 'both',
      animationPlayState: 'running',
      animationTimingFunction: 'steps(60, end)',
      animationIterationCount: 'infinite'
    };
    return Object.assign({}, outerAnimation, {
      ':before': Object.assign({}, svgAnimation, {
        backgroundImage: v.svgContent,
        content: '" "',
        display: 'block',
        overflow: 'hidden',
        height: v.svgHeights[p.size],
        width: v.svgWidths[p.size]
      })
    });
  },
  label: function label() {
    return {
      margin: (0, _utils.pxToRem)(10)
    };
  }
};
exports.loaderStyles = loaderStyles;
//# sourceMappingURL=loaderStyles.js.map
