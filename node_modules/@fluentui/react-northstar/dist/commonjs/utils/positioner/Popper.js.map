{"version":3,"sources":["utils/positioner/Popper.tsx"],"names":["Popper","props","usesRenderProps","children","proposedPlacement","align","position","rtl","latestPlacement","React","useRef","useState","computedPlacement","setComputedPlacement","popperRef","onStateUpdate","state","placement","current","targetRef","containerRef","arrowRef","pointerTargetRef","scheduleUpdate","useCallback","updatePosition","child","Children","only","defaultProps","enabled","modifiers","positionFixed","positioningDependencies"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACO,IAAMA,MAA4C,GAAG,SAA/CA,MAA+C,CAAAC,KAAK,EAAI;AACnE,MAAMC,eAAwB,GAAG,OAAOD,KAAK,CAACE,QAAb,KAA0B,UAA3D;AAEA,MAAMC,iBAAiB,GAAG,qCAAaH,KAAK,CAACI,KAAnB,EAA0BJ,KAAK,CAACK,QAAhC,EAA0CL,KAAK,CAACM,GAAhD,CAA1B;AACA,MAAMC,eAAe,GAAGC,KAAK,CAACC,MAAN,CAAiCN,iBAAjC,CAAxB;;AAJmE,wBAKjBK,KAAK,CAACE,QAAN,CAAmCP,iBAAnC,CALiB;AAAA,MAK5DQ,iBAL4D;AAAA,MAKzCC,oBALyC;;AAOnE,MAAMC,SAAS,GAAGL,KAAK,CAACC,MAAN,CAAqC,IAArC,CAAlB;;AAPmE,mBAQrB,6CACzCT,KADyC;AAG5Ca,IAAAA,SAAS,EAAE,kCAAcb,KAAK,CAACa,SAApB,EAA+BA,SAA/B,CAHiC;AAI5CC,IAAAA,aAAa,EAAE,uBAAAC,KAAK,EAAI;AACtB;AACA;AACA,UAAIA,KAAK,CAACC,SAAN,KAAoBT,eAAe,CAACU,OAAxC,EAAiD;AAC/CV,QAAAA,eAAe,CAACU,OAAhB,GAA0BF,KAAK,CAACC,SAAhC,CAD+C,CAG/C;;AACA,YAAIf,eAAJ,EAAqB;AACnBW,UAAAA,oBAAoB,CAACG,KAAK,CAACC,SAAP,CAApB;AACD;AACF;AACF;AAf2C,KARqB;AAAA,MAQ3DE,SAR2D,cAQ3DA,SAR2D;AAAA,MAQhDC,YARgD,cAQhDA,YARgD;AAAA,MAQlCC,QARkC,cAQlCA,QARkC;;AA0BnE,gDAA0B,YAAM;AAAA;;AAC9B;AACA;AACAF,IAAAA,SAAS,CAACD,OAAV,GAAoB,oCAAYjB,KAAK,CAACkB,SAAlB,IACflB,KAAK,CAACkB,SAAP,CAA8CD,OAD9B,GAEfjB,KAAK,CAACkB,SAFX;AAGAE,IAAAA,QAAQ,CAACH,OAAT,4BAAmBjB,KAAK,CAACqB,gBAAzB,qBAAmB,sBAAwBJ,OAA3C;AACD,GAPD;AASA,MAAMK,cAAc,GAAGd,KAAK,CAACe,WAAN,CAAkB,YAAM;AAAA;;AAC7C,0BAAAV,SAAS,CAACI,OAAV,wCAAmBO,cAAnB;AACD,GAFsB,EAEpB,EAFoB,CAAvB;AAIA,MAAMC,KAAK,GAAGxB,eAAe,GACxBD,KAAK,CAACE,QAAP,CAAqC;AACnCc,IAAAA,SAAS,EAAEL,iBADwB;AAEnCW,IAAAA,cAAc,EAAdA;AAFmC,GAArC,CADyB,GAKxBtB,KAAK,CAACE,QALX;AAOA,SAAOuB,KAAK,gBAAG,oBAAC,sBAAD;AAAK,IAAA,QAAQ,EAAEN;AAAf,KAA8BX,KAAK,CAACkB,QAAN,CAAeC,IAAf,CAAoBF,KAApB,CAA9B,CAAH,GAAqE,IAAjF;AACD,CA/CM;;;AAiDP1B,MAAM,CAAC6B,YAAP,GAAsB;AACpBC,EAAAA,OAAO,EAAE,IADW;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,aAAa,EAAE,KAHK;AAIpBC,EAAAA,uBAAuB,EAAE;AAJL,CAAtB","sourcesContent":["import { useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-bindings';\nimport { Ref, isRefObject } from '@fluentui/react-component-ref';\nimport * as PopperJs from '@popperjs/core';\nimport * as React from 'react';\n\nimport { getPlacement } from './positioningHelper';\nimport { PopperChildrenFn, PopperProps, PopperRefHandle } from './types';\nimport { usePopper } from './usePopper';\n\n/**\n * Popper relies on the 3rd party library [Popper.js](https://github.com/FezVrasta/popper.js) for positioning.\n *\n * @deprecated Please use \"usePopper()\" hook instead.\n */\nexport const Popper: React.FunctionComponent<PopperProps> = props => {\n  const usesRenderProps: boolean = typeof props.children === 'function';\n\n  const proposedPlacement = getPlacement(props.align, props.position, props.rtl);\n  const latestPlacement = React.useRef<PopperJs.Placement>(proposedPlacement);\n  const [computedPlacement, setComputedPlacement] = React.useState<PopperJs.Placement>(proposedPlacement);\n\n  const popperRef = React.useRef<PopperRefHandle | null>(null);\n  const { targetRef, containerRef, arrowRef } = usePopper({\n    ...props,\n\n    popperRef: useMergedRefs(props.popperRef, popperRef),\n    onStateUpdate: state => {\n      // PopperJS performs computations that might update the computed placement: auto positioning, flipping the\n      // placement in case the popper box should be rendered at the edge of the viewport and does not fit\n      if (state.placement !== latestPlacement.current) {\n        latestPlacement.current = state.placement;\n\n        // A state change has sense only if renderProps are passed, otherwise a state value is unused\n        if (usesRenderProps) {\n          setComputedPlacement(state.placement);\n        }\n      }\n    },\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    // A way to sync refs, is needed as Popper component accepts refs as params\n    // Does not make anything worse as Popper component does not have proper handing for ref updates ¯\\_(ツ)_/¯\n    targetRef.current = isRefObject(props.targetRef)\n      ? (props.targetRef as React.RefObject<Element>).current\n      : (props.targetRef as PopperJs.VirtualElement);\n    arrowRef.current = props.pointerTargetRef?.current as HTMLElement;\n  });\n\n  const scheduleUpdate = React.useCallback(() => {\n    popperRef.current?.updatePosition();\n  }, []);\n\n  const child = usesRenderProps\n    ? (props.children as PopperChildrenFn)({\n        placement: computedPlacement,\n        scheduleUpdate,\n      })\n    : (props.children as React.ReactElement);\n\n  return child ? <Ref innerRef={containerRef}>{React.Children.only(child)}</Ref> : null;\n};\n\nPopper.defaultProps = {\n  enabled: true,\n  modifiers: [],\n  positionFixed: false,\n  positioningDependencies: [],\n};\n"],"file":"Popper.js"}