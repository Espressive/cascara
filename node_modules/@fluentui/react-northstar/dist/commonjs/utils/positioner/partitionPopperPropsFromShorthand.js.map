{"version":3,"sources":["utils/positioner/partitionPopperPropsFromShorthand.ts"],"names":["partitionPopperPropsFromShorthand","value","Array","isArray","popper","props"],"mappings":";;;;;;;;;AAGO,SAASA,iCAAT,CACLC,KADK,EAE4E;AACjF,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+C,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAApD,EAA0E;AAAA,eAC3CA,KAD2C;AAAA,QAChEG,MADgE,QAChEA,MADgE;AAAA,QACrDC,KADqD;AAGxE,WAAO,CAACA,KAAD,EAAmCD,MAAnC,CAAP;AACD;;AAED,SAAO,CAACH,KAAD,EAAQ,EAAR,CAAP;AACD","sourcesContent":["import { ObjectShorthandValue, ShorthandValue } from '../../types';\nimport { PopperShorthandProps } from './types';\n\nexport function partitionPopperPropsFromShorthand<P>(\n  value: ShorthandValue<P & { popper?: PopperShorthandProps }>,\n): [ShorthandValue<P> | ObjectShorthandValue<P>, PopperShorthandProps | undefined] {\n  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n    const { popper, ...props } = value as ObjectShorthandValue<P> & { popper: PopperShorthandProps };\n\n    return [props as ObjectShorthandValue<P>, popper];\n  }\n\n  return [value, {}];\n}\n"],"file":"partitionPopperPropsFromShorthand.js"}