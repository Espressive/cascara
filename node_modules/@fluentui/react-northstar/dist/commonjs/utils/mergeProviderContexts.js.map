{"version":3,"sources":["utils/mergeProviderContexts.ts"],"names":["defaultDocument","document","registeredRenderers","WeakMap","getRenderer","createRenderer","target","actualTarget","has","get","createdRenderer","undefined","set","mergePerformanceOptions","sources","Object","assign","mergeBooleanValues","reduce","acc","next","mergeProviderContexts","emptyContext","theme","siteVariables","fontSizes","componentVariables","componentStyles","fontFaces","staticStyles","animations","rtl","disableAnimations","performance","enableSanitizeCssPlugin","process","env","NODE_ENV","enableStylesCaching","enableVariablesCaching","enableBooleanVariablesCaching","telemetry","renderer","contexts","mergedRTL","mergedDisableAnimations"],"mappings":"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","sourcesContent":["import {\n  ProviderContextPrepared,\n  ProviderContextInput,\n  StylesContextPerformance,\n  StylesContextPerformanceInput,\n} from '@fluentui/react-bindings';\nimport { CreateRenderer, Renderer } from '@fluentui/react-northstar-styles-renderer';\nimport { mergeThemes } from '@fluentui/styles';\n\nimport { isBrowser } from './isBrowser';\n\nconst defaultDocument = { document: 'document' };\nconst registeredRenderers = new WeakMap<Document | typeof defaultDocument, Renderer>();\n\nexport const getRenderer = (createRenderer: CreateRenderer, target?: Document): Renderer => {\n  let actualTarget: Document | typeof defaultDocument = target || defaultDocument;\n\n  // A valid comparisons, default renderer will be used\n  if (!isBrowser() || typeof target === 'undefined') {\n    actualTarget = defaultDocument;\n  }\n\n  // SSR logic will be handled by condition above\n  // eslint-disable-next-line no-undef\n  if (isBrowser() && target === document) {\n    actualTarget = defaultDocument;\n  }\n\n  if (registeredRenderers.has(actualTarget)) {\n    return registeredRenderers.get(actualTarget);\n  }\n\n  // To avoid errors related to SSR as `document` may not exist we are using a fake object `defaultDocument`.\n  // When a value matches `defaultDocument` we will pass `undefined` to `createRenderer()` and it should handle it\n  // properly.\n  const createdRenderer = createRenderer(actualTarget === defaultDocument ? undefined : (actualTarget as Document));\n  registeredRenderers.set(actualTarget, createdRenderer);\n\n  return createdRenderer;\n};\n\nexport const mergePerformanceOptions = (\n  target: StylesContextPerformance | StylesContextPerformanceInput,\n  ...sources: StylesContextPerformanceInput[]\n) => {\n  return Object.assign(target, ...sources);\n};\n\nexport const mergeBooleanValues = (target, ...sources) => {\n  return sources.reduce((acc, next) => {\n    return typeof next === 'boolean' ? next : acc;\n  }, target);\n};\n\nexport const mergeProviderContexts = (\n  createRenderer: CreateRenderer,\n  ...contexts: (ProviderContextInput | ProviderContextPrepared)[]\n): ProviderContextPrepared => {\n  const emptyContext: ProviderContextPrepared = {\n    theme: {\n      siteVariables: {\n        fontSizes: {},\n      },\n      componentVariables: {},\n      componentStyles: {},\n      fontFaces: [],\n      staticStyles: [],\n      animations: {},\n    },\n    rtl: false,\n    disableAnimations: false,\n    target: isBrowser() ? document : undefined, // eslint-disable-line no-undef\n    performance: {\n      enableSanitizeCssPlugin: process.env.NODE_ENV !== 'production',\n      enableStylesCaching: true,\n      enableVariablesCaching: true,\n      enableBooleanVariablesCaching: false,\n    },\n    telemetry: undefined,\n    renderer: undefined,\n  };\n\n  return contexts.reduce<ProviderContextPrepared>(\n    (acc: ProviderContextPrepared, next: ProviderContextInput | ProviderContextPrepared) => {\n      if (!next) return acc;\n\n      acc.theme = mergeThemes(acc.theme, next.theme);\n\n      // Latest RTL value wins\n      const mergedRTL = mergeBooleanValues(acc.rtl, next.rtl);\n      if (typeof mergedRTL === 'boolean') {\n        acc.rtl = mergedRTL;\n      }\n\n      // Use provided renderer if it is defined\n      acc.target = next.target || acc.target;\n      acc.renderer = getRenderer(createRenderer, acc.target);\n\n      // Latest disableAnimations value wins\n      const mergedDisableAnimations = mergeBooleanValues(acc.disableAnimations, next.disableAnimations);\n      if (typeof mergedDisableAnimations === 'boolean') {\n        acc.disableAnimations = mergedDisableAnimations;\n      }\n\n      acc.performance = mergePerformanceOptions(acc.performance, next.performance || {});\n\n      acc.telemetry = next.telemetry || acc.telemetry;\n\n      return acc;\n    },\n    emptyContext,\n  );\n};\n"],"file":"mergeProviderContexts.js"}