"use strict";

exports.__esModule = true;
exports.getDateRangeTypeToUse = void 0;

var _dateValues = require("../dateValues/dateValues");

var _isContiguous = require("./isContiguous");

/**
 * Return corrected date range type, given `dateRangeType` and list of working days.
 * For non-contiguous working days and working week range type, returns general week range type.
 * For other cases returns input date range type.
 * @param dateRangeType - input type of range
 * @param workWeekDays - list of working days in a week
 */
var getDateRangeTypeToUse = function getDateRangeTypeToUse(dateRangeType, workWeekDays, firstDayOfWeek) {
  if (workWeekDays && dateRangeType === _dateValues.DateRangeType.WorkWeek) {
    if (!(0, _isContiguous.isContiguous)(workWeekDays, true, firstDayOfWeek) || workWeekDays.length === 0) {
      return _dateValues.DateRangeType.Week;
    }
  }

  return dateRangeType;
};

exports.getDateRangeTypeToUse = getDateRangeTypeToUse;
//# sourceMappingURL=getDateRangeTypeToUse.js.map
