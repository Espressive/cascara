{"version":3,"sources":["utils/date-time-utilities/dateGrid/getBoundedDateRange.ts"],"names":["getBoundedDateRange","dateRange","minDate","maxDate","boundedDateRange","filter","date"],"mappings":";;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD,EAAoBC,OAApB,EAAoCC,OAApC,EAA+D;AAChG,MAAIC,gBAAgB,aAAOH,SAAP,CAApB;;AACA,MAAIC,OAAJ,EAAa;AACXE,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAwB,UAACC,IAAD;AAAA,aAAgB,+BAAgBA,IAAhB,EAAsBJ,OAAtB,KAA0C,CAA1D;AAAA,KAAxB,CAAnB;AACD;;AACD,MAAIC,OAAJ,EAAa;AACXC,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAwB,UAACC,IAAD;AAAA,aAAgB,+BAAgBA,IAAhB,EAAsBH,OAAtB,KAA0C,CAA1D;AAAA,KAAxB,CAAnB;AACD;;AACD,SAAOC,gBAAP;AACD,CATM","sourcesContent":["import { compareDatePart } from '../dateMath/dateMath';\n\n/**\n * Generates a list of dates, bounded by min and max dates\n * @param dateRange - input date range\n * @param minDate - min date to limit the range\n * @param maxDate - max date to limit the range\n */\nexport const getBoundedDateRange = (dateRange: Date[], minDate?: Date, maxDate?: Date): Date[] => {\n  let boundedDateRange = [...dateRange];\n  if (minDate) {\n    boundedDateRange = boundedDateRange.filter((date: Date) => compareDatePart(date, minDate as Date) >= 0);\n  }\n  if (maxDate) {\n    boundedDateRange = boundedDateRange.filter((date: Date) => compareDatePart(date, maxDate as Date) <= 0);\n  }\n  return boundedDateRange;\n};\n"],"file":"getBoundedDateRange.js"}