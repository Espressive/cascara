{"version":3,"sources":["utils/doesNodeContainClick.tsx"],"names":["elementContains","doesNodeContainClick","node","e","target","allowVirtualParents","document","querySelector","clientX","clientY","clientRects","getClientRects","offsetWidth","offsetHeight","length","top","bottom","left","right"],"mappings":";;;;;AACA,SAASA,eAAT,QAAgC,yBAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAClCC,IADkC,EAElCC,CAFkC,EAGlC;AACAC,MAJkC,EAKlCC,mBALkC,EAMtB;AAAA,MAFZD,MAEY;AAFZA,IAAAA,MAEY,GAFOE,QAEP;AAAA;;AAAA,MADZD,mBACY;AADZA,IAAAA,mBACY,GADmB,IACnB;AAAA;;AACZ,MAAI,MAAO,CAACF,CAAD,EAAID,IAAJ,CAAP,SAAJ,EAAgC,OAAO,KAAP,CADpB,CAGZ;;AACA,MAAIC,CAAC,CAACC,MAAN,EAAc;AACZ,YAASD,CAAC,CAACC,MAAX,EAAmB,cAAnB,EAAmC,wBAAnC,EAA6D,IAA7D;;AAEA,QAAIA,MAAM,CAACG,aAAP,CAAqB,+BAArB,CAAJ,EAA2D;AACzD,cAASJ,CAAC,CAACC,MAAX,EAAmB,iBAAnB,EAAsC,wBAAtC;;AACA,aAAOJ,eAAe,CAACE,IAAD,EAAOC,CAAC,CAACC,MAAT,EAAgCC,mBAAhC,CAAtB;AACD;AACF,GAXW,CAaZ;AACA;AACA;AAEA;AACA;;;AAlBY,MAmBJG,OAnBI,GAmBiBL,CAnBjB,CAmBJK,OAnBI;AAAA,MAmBKC,OAnBL,GAmBiBN,CAnBjB,CAmBKM,OAnBL;AAoBZ,MAAI,MAAO,CAACD,OAAD,EAAUC,OAAV,CAAP,SAAJ,EAAyC,OAAO,KAAP,CApB7B,CAsBZ;;AACA,MAAMC,WAAW,GAAGR,IAAI,CAACS,cAAL,EAApB,CAvBY,CAwBZ;AACA;AACA;;AACA,MAAI,CAACT,IAAI,CAACU,WAAN,IAAqB,CAACV,IAAI,CAACW,YAA3B,IAA2C,CAACH,WAA5C,IAA2D,CAACA,WAAW,CAACI,MAA5E,EAAoF,OAAO,KAAP,CA3BxE,CA6BZ;;AA7BY,gBA8ByB,OAAQJ,WAAR,CA9BzB;AAAA,MA8BJK,GA9BI,WA8BJA,GA9BI;AAAA,MA8BCC,MA9BD,WA8BCA,MA9BD;AAAA,MA8BSC,IA9BT,WA8BSA,IA9BT;AAAA,MA8BeC,KA9Bf,WA8BeA,KA9Bf;;AA+BZ,MAAI,MAAO,CAACH,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAoBC,KAApB,CAAP,SAAJ,EAAiD,OAAO,KAAP,CA/BrC,CAiCZ;AACA;;AACA,SAAO,SAAUT,OAAV,EAAmBM,GAAnB,EAAwBC,MAAM,GAAG,KAAjC,KAA2C,SAAUR,OAAV,EAAmBS,IAAnB,EAAyBC,KAAK,GAAG,KAAjC,CAAlD;AACD,CA1CM","sourcesContent":["import * as _ from 'lodash';\nimport { elementContains } from '@fluentui/dom-utilities';\n\n/**\n * Determines if a click's coordinates are within the bounds of a node.\n *\n * @see https://github.com/Semantic-Org/Semantic-UI-React/pull/2384\n *\n * @param node - A DOM node.\n * @param e - A SyntheticEvent or DOM Event.\n * @param target - A target document.\n * @param allowVirtualParents - A setting for `elementContains()`.\n */\nexport const doesNodeContainClick = (\n  node: HTMLElement,\n  e: MouseEvent,\n  // eslint-disable-next-line no-undef\n  target: Document = document,\n  allowVirtualParents: boolean = true,\n): boolean => {\n  if (_.some([e, node], _.isNil)) return false;\n\n  // if there is an e.target and it is in the document, use a simple node.contains() check\n  if (e.target) {\n    _.invoke(e.target, 'setAttribute', 'data-suir-click-target', true);\n\n    if (target.querySelector('[data-suir-click-target=true]')) {\n      _.invoke(e.target, 'removeAttribute', 'data-suir-click-target');\n      return elementContains(node, e.target as HTMLElement, allowVirtualParents);\n    }\n  }\n\n  // Below logic handles cases where the e.target is no longer in the document.\n  // The result of the click likely has removed the e.target node.\n  // Instead of node.contains(), we'll identify the click by X/Y position.\n\n  // return early if the event properties aren't available\n  // prevent measuring the node and repainting if we don't need to\n  const { clientX, clientY } = e;\n  if (_.some([clientX, clientY], _.isNil)) return false;\n\n  // false if the node is not visible\n  const clientRects = node.getClientRects();\n  // Heads Up!\n  // getClientRects returns a DOMRectList, not an array nor a plain object\n  // We explicitly avoid _.isEmpty and check .length to cover all possible shapes\n  if (!node.offsetWidth || !node.offsetHeight || !clientRects || !clientRects.length) return false;\n\n  // false if the node doesn't have a valid bounding rect\n  const { top, bottom, left, right } = _.first(clientRects);\n  if (_.some([top, bottom, left, right], _.isNil)) return false;\n\n  // we add a small decimal to the upper bound just to make it inclusive\n  // don't add an whole pixel (1) as the event/node values may be decimal sensitive\n  return _.inRange(clientY, top, bottom + 0.001) && _.inRange(clientX, left, right + 0.001);\n};\n"],"file":"doesNodeContainClick.js"}