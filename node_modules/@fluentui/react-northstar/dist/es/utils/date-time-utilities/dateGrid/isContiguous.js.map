{"version":3,"sources":["utils/date-time-utilities/dateGrid/isContiguous.ts"],"names":["isContiguous","days","isSingleWeek","firstDayOfWeek","daySet","Set","amountOfNoNeighbors","day","nextDay","has"],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAoBC,YAApB,EAA2CC,cAA3C,EAAkF;AAC5G,MAAMC,MAAM,GAAG,IAAIC,GAAJ,CAAQJ,IAAR,CAAf;AACA,MAAIK,mBAAmB,GAAG,CAA1B;;AACA,uDAAkBL,IAAlB,wCAAwB;AAAA,QAAbM,GAAa;AACtB,QAAMC,OAAO,GAAG,CAACD,GAAG,GAAG,CAAP,IAAY,CAA5B;;AACA,QAAI,EAAEH,MAAM,CAACK,GAAP,CAAWD,OAAX,MAAwB,CAACN,YAAD,IAAiBC,cAAc,KAAKK,OAA5D,CAAF,CAAJ,EAA6E;AAC3EF,MAAAA,mBAAmB;AACpB;AACF,GAR2G,CAU5G;AACA;;;AACA,SAAOA,mBAAmB,GAAG,CAA7B;AACD,CAbM","sourcesContent":["import { DayOfWeek } from '../dateValues/dateValues';\n\n/**\n * Returns whether provided week days are contiguous.\n * @param days - list of days in a week\n * @param isSingleWeek - decides whether the contiguous logic applies across week boundaries or not\n * @param firstDayOfWeek - decides which day of week is the first one in the order.\n */\nexport const isContiguous = (days: DayOfWeek[], isSingleWeek: boolean, firstDayOfWeek: DayOfWeek): boolean => {\n  const daySet = new Set(days);\n  let amountOfNoNeighbors = 0;\n  for (const day of days) {\n    const nextDay = (day + 1) % 7;\n    if (!(daySet.has(nextDay) && (!isSingleWeek || firstDayOfWeek !== nextDay))) {\n      amountOfNoNeighbors++;\n    }\n  }\n\n  // In case the full week is provided, then each day has a neighbor\n  // , otherwise the last day does not have a neighbor.\n  return amountOfNoNeighbors < 2;\n};\n"],"file":"isContiguous.js"}