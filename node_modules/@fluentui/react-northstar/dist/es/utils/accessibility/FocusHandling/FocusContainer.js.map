{"version":3,"sources":["utils/accessibility/FocusHandling/FocusContainer.ts"],"names":["ContainerFocusHandler","getItemsCount","setFocusAt","circular","focusedIndex","noItems","constrainFocusedIndex","itemsCount","getFocusedIndex","syncFocusedIndex","withCurrentIndex","movePrevious","moveNext","moveFirst","moveLast"],"mappings":"AAAA,WAAaA,qBAAb;AAGE,iCACUC,aADV,EAEmBC,UAFnB,EAGUC,QAHV,EAIE;AAAA;;AAAA,QADQA,QACR;AADQA,MAAAA,QACR,GADmB,KACnB;AAAA;;AAAA,SAHQF,aAGR,GAHQA,aAGR;AAAA,SAFiBC,UAEjB,GAFiBA,UAEjB;AAAA,SADQC,QACR,GADQA,QACR;AAAA,SANMC,YAMN,GANqB,CAMrB;;AAAA,SAEMC,OAFN,GAEgB;AAAA,aAAe,KAAI,CAACJ,aAAL,OAAyB,CAAxC;AAAA,KAFhB;AAAE;;AAPN;;AAAA,SAWUK,qBAXV,GAWE,iCAAsC;AACpC,QAAMC,UAAU,GAAG,KAAKN,aAAL,EAAnB;;AACA,QAAI,KAAKG,YAAL,GAAoB,CAAxB,EAA2B;AACzB,WAAKA,YAAL,GAAoB,KAAKD,QAAL,GAAgBI,UAAU,GAAG,CAA7B,GAAiC,CAArD;AACD;;AAED,QAAI,KAAKH,YAAL,IAAqBG,UAAzB,EAAqC;AACnC,WAAKH,YAAL,GAAoB,KAAKD,QAAL,GAAgB,CAAhB,GAAoBI,UAAU,GAAG,CAArD;AACD;AACF,GApBH;;AAAA,SAsBSC,eAtBT,GAsBE,2BAAiC;AAC/B,WAAO,KAAKJ,YAAZ;AACD,GAxBH;;AAAA,SA0BSK,gBA1BT,GA0BE,0BAAwBC,gBAAxB,EAAkD;AAChD,SAAKN,YAAL,GAAoBM,gBAApB;AACD,GA5BH;;AAAA,SA8BSC,YA9BT,GA8BE,wBAA4B;AAC1B,QAAI,KAAKN,OAAL,EAAJ,EAAoB;AAClB;AACD;;AAED,SAAKD,YAAL,IAAqB,CAArB;AACA,SAAKE,qBAAL;AAEA,SAAKJ,UAAL,CAAgB,KAAKE,YAArB;AACD,GAvCH;;AAAA,SAyCSQ,QAzCT,GAyCE,oBAAwB;AACtB,QAAI,KAAKP,OAAL,EAAJ,EAAoB;AAClB;AACD;;AAED,SAAKD,YAAL,IAAqB,CAArB;AACA,SAAKE,qBAAL;AAEA,SAAKJ,UAAL,CAAgB,KAAKE,YAArB;AACD,GAlDH;;AAAA,SAoDSS,SApDT,GAoDE,qBAAyB;AACvB,QAAI,KAAKR,OAAL,EAAJ,EAAoB;AAClB;AACD;;AAED,SAAKD,YAAL,GAAoB,CAApB;AACA,SAAKF,UAAL,CAAgB,KAAKE,YAArB;AACD,GA3DH;;AAAA,SA6DSU,QA7DT,GA6DE,oBAAwB;AACtB,QAAI,KAAKT,OAAL,EAAJ,EAAoB;AAClB;AACD;;AAED,SAAKD,YAAL,GAAoB,KAAKH,aAAL,KAAuB,CAA3C;AACA,SAAKC,UAAL,CAAgB,KAAKE,YAArB;AACD,GApEH;;AAAA;AAAA","sourcesContent":["export class ContainerFocusHandler {\n  private focusedIndex = 0;\n\n  constructor(\n    private getItemsCount: () => number,\n    private readonly setFocusAt: (number) => void,\n    private circular = false,\n  ) {}\n\n  private noItems = (): boolean => this.getItemsCount() === 0;\n\n  private constrainFocusedIndex(): void {\n    const itemsCount = this.getItemsCount();\n    if (this.focusedIndex < 0) {\n      this.focusedIndex = this.circular ? itemsCount - 1 : 0;\n    }\n\n    if (this.focusedIndex >= itemsCount) {\n      this.focusedIndex = this.circular ? 0 : itemsCount - 1;\n    }\n  }\n\n  public getFocusedIndex(): number {\n    return this.focusedIndex;\n  }\n\n  public syncFocusedIndex(withCurrentIndex: number) {\n    this.focusedIndex = withCurrentIndex;\n  }\n\n  public movePrevious(): void {\n    if (this.noItems()) {\n      return;\n    }\n\n    this.focusedIndex -= 1;\n    this.constrainFocusedIndex();\n\n    this.setFocusAt(this.focusedIndex);\n  }\n\n  public moveNext(): void {\n    if (this.noItems()) {\n      return;\n    }\n\n    this.focusedIndex += 1;\n    this.constrainFocusedIndex();\n\n    this.setFocusAt(this.focusedIndex);\n  }\n\n  public moveFirst(): void {\n    if (this.noItems()) {\n      return;\n    }\n\n    this.focusedIndex = 0;\n    this.setFocusAt(this.focusedIndex);\n  }\n\n  public moveLast(): void {\n    if (this.noItems()) {\n      return;\n    }\n\n    this.focusedIndex = this.getItemsCount() - 1;\n    this.setFocusAt(this.focusedIndex);\n  }\n}\n"],"file":"FocusContainer.js"}