{"version":3,"sources":["components/Provider/ProviderConsumer.tsx"],"names":["useFluentContext","PropTypes","React","ProviderConsumer","props","render","context","theme","displayName","propTypes","func","isRequired"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,0BAAjC;AAEA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAUA;AACA;AACA;AACA,OAAO,IAAMC,gBAAN;AAAA,MAAMA,gBAAgE,GAAG,SAAnEA,gBAAmE,CAAAC,KAAK,EAAI;AAAA,QAC/EC,MAD+E,GACpED,KADoE,CAC/EC,MAD+E;AAEvF,QAAMC,OAAO,GAAGN,gBAAgB,EAAhC;AAEA,wBAAO,0CAAGK,MAAM,CAACC,OAAO,CAACC,KAAT,CAAT,CAAP;AACD,GALM;;AAOPJ,EAAAA,gBAAgB,CAACK,WAAjB,GAA+B,kBAA/B;AACAL,EAAAA,gBAAgB,CAACM,SAAjB,GAA6B;AAC3BJ,IAAAA,MAAM,EAAEJ,SAAS,CAACS,IAAV,CAAeC;AADI,GAA7B;AARO,SAAMR,gBAAN;AAAA","sourcesContent":["import { useFluentContext } from '@fluentui/react-bindings';\nimport { ThemePrepared } from '@fluentui/styles';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nexport interface ProviderConsumerProps {\n  /**\n   * Uses the function children pattern to access theme.\n   * `theme.siteVariables` contains the siteVariables passed from the nearest Provider.\n   */\n  render: (theme: ThemePrepared) => React.ReactNode;\n}\n\n/**\n * A ProviderConsumer is used to consume Fluent UI context from Provider.\n */\nexport const ProviderConsumer: React.FunctionComponent<ProviderConsumerProps> = props => {\n  const { render } = props;\n  const context = useFluentContext();\n\n  return <>{render(context.theme)}</>;\n};\n\nProviderConsumer.displayName = 'ProviderConsumer';\nProviderConsumer.propTypes = {\n  render: PropTypes.func.isRequired,\n};\n"],"file":"ProviderConsumer.js"}