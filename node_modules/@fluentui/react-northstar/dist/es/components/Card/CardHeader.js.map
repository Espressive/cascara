{"version":3,"sources":["components/Card/CardHeader.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","PropTypes","React","commonPropTypes","createShorthandFactory","cardHeaderClassName","CardHeader","props","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","bool","Object","keys","create","Component"],"mappings":"AACA,SAEEA,cAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,gBALF,EAMEC,SANF,EAOEC,YAPF,QAQO,0BARP;AASA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SAAiCC,eAAjC,EAAkDC,sBAAlD,QAAkG,aAAlG;AAaA,OAAO,IAAMC,mBAAmB,GAAG,iBAA5B;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,UAAN;AAAA,MAAMA,UACgC,GAAG,SADnCA,UACmC,CAAAC,KAAK,EAAI;AACvD,QAAMC,OAAO,GAAGV,gBAAgB,EAAhC;;AADuD,wBAE1BE,YAAY,CAACM,UAAU,CAACG,WAAZ,EAAyBD,OAAO,CAACE,SAAjC,CAFc;AAAA,QAE/CC,QAF+C,iBAE/CA,QAF+C;AAAA,QAErCC,MAFqC,iBAErCA,MAFqC;;AAGvDD,IAAAA,QAAQ;AAH+C,QAK/CE,SAL+C,GAKYN,KALZ,CAK/CM,SAL+C;AAAA,QAKpCC,MALoC,GAKYP,KALZ,CAKpCO,MALoC;AAAA,QAK5BC,MAL4B,GAKYR,KALZ,CAK5BQ,MAL4B;AAAA,QAKpBC,SALoB,GAKYT,KALZ,CAKpBS,SALoB;AAAA,QAKTC,QALS,GAKYV,KALZ,CAKTU,QALS;AAAA,QAKCC,MALD,GAKYX,KALZ,CAKCW,MALD;AAMvD,QAAMC,WAAW,GAAGxB,cAAc,CAACY,KAAD,CAAlC;AACA,QAAMa,cAAc,GAAGxB,iBAAiB,CAACU,UAAU,CAACe,YAAZ,EAA0Bd,KAA1B,CAAxC;AACA,QAAMe,YAAY,GAAGzB,gBAAgB,CAACU,KAAK,CAACgB,aAAP,EAAsB;AACzDC,MAAAA,SAAS,EAAElB,UAAU,CAACG,WADmC;AAEzDgB,MAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAF4C,KAAtB,CAArC;;AARuD,qBAanC1B,SAAS,CAAwBO,UAAU,CAACG,WAAnC,EAAgD;AAC3EI,MAAAA,SAAS,EAAER,mBADgE;AAE3EqB,MAAAA,gBAAgB,EAAE;AAAA,eAAO;AAAER,UAAAA,MAAM,EAANA;AAAF,SAAP;AAAA,OAFyD;AAG3ES,MAAAA,sBAAsB,EAAE;AAAA,eAAO;AAC7Bd,UAAAA,SAAS,EAATA,SAD6B;AAE7BC,UAAAA,MAAM,EAANA,MAF6B;AAG7BC,UAAAA,MAAM,EAANA,MAH6B;AAI7BC,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAAA,OAHmD;AAS3ES,MAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAT8D,KAAhD,CAb0B;AAAA,QAa/CG,OAb+C,cAa/CA,OAb+C;;AAyBvD,QAAMC,OAAO,gBACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdT,MAAAA,SAAS,EAAEe,OAAO,CAACE;AADL,OAEXV,cAFW,EADlB,EAMGH,QANH,CADF;AAUAL,IAAAA,MAAM;AACN,WAAOiB,OAAP;AACD,GAtCM;;AAwCPvB,EAAAA,UAAU,CAACG,WAAX,GAAyB,YAAzB;AAEAH,EAAAA,UAAU,CAACyB,SAAX,qBACK5B,eAAe,CAAC6B,YAAhB,EADL;AAEEd,IAAAA,MAAM,EAAEjB,SAAS,CAACgC;AAFpB;AAKA3B,EAAAA,UAAU,CAACe,YAAX,GAA0Ba,MAAM,CAACC,IAAP,CAAY7B,UAAU,CAACyB,SAAvB,CAA1B;AAEAzB,EAAAA,UAAU,CAAC8B,MAAX,GAAoBhC,sBAAsB,CAAC;AAAEiC,IAAAA,SAAS,EAAE/B;AAAb,GAAD,CAA1C;AAjDO,SAAMA,UAAN;AAAA","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardHeaderProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A footer can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardHeaderStylesProps = Pick<CardHeaderProps, 'fitted'>;\nexport const cardHeaderClassName = 'ui-card__header';\n\n/**\n * A CardHeader is used to display data in Card header.\n */\nexport const CardHeader: ComponentWithAs<'div', CardHeaderProps> &\n  FluentComponentStaticProps<CardHeaderProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardHeader.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardHeader.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardHeader.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardHeaderStylesProps>(CardHeader.displayName, {\n    className: cardHeaderClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardHeader.displayName = 'CardHeader';\n\nCardHeader.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardHeader.handledProps = Object.keys(CardHeader.propTypes) as any;\n\nCardHeader.create = createShorthandFactory({ Component: CardHeader });\n"],"file":"CardHeader.js"}