{"version":3,"sources":["components/Card/CardBody.tsx"],"names":["React","commonPropTypes","createShorthandFactory","useTelemetry","useStyles","getElementType","useUnhandledProps","useFluentContext","useAccessibility","PropTypes","cardBodyClassName","CardBody","props","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","bool","Object","keys","create","Component"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,SAAmDC,eAAnD,EAAoEC,sBAApE,QAAkG,aAAlG;AACA,SAEEC,YAFF,EAGEC,SAHF,EAIEC,cAJF,EAKEC,iBALF,EAMEC,gBANF,EAOEC,gBAPF,QAQO,0BARP;AASA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AAaA,OAAO,IAAMC,iBAAiB,GAAG,eAA1B;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,QAAN;AAAA,MAAMA,QAA2F,GAAG,SAA9FA,QAA8F,CAAAC,KAAK,EAAI;AAClH,QAAMC,OAAO,GAAGN,gBAAgB,EAAhC;;AADkH,wBAErFJ,YAAY,CAACQ,QAAQ,CAACG,WAAV,EAAuBD,OAAO,CAACE,SAA/B,CAFyE;AAAA,QAE1GC,QAF0G,iBAE1GA,QAF0G;AAAA,QAEhGC,MAFgG,iBAEhGA,MAFgG;;AAGlHD,IAAAA,QAAQ;AAH0G,QAK1GE,SAL0G,GAK/CN,KAL+C,CAK1GM,SAL0G;AAAA,QAK/FC,MAL+F,GAK/CP,KAL+C,CAK/FO,MAL+F;AAAA,QAKvFC,MALuF,GAK/CR,KAL+C,CAKvFQ,MALuF;AAAA,QAK/EC,SAL+E,GAK/CT,KAL+C,CAK/ES,SAL+E;AAAA,QAKpEC,QALoE,GAK/CV,KAL+C,CAKpEU,QALoE;AAAA,QAK1DC,MAL0D,GAK/CX,KAL+C,CAK1DW,MAL0D;AAMlH,QAAMC,WAAW,GAAGnB,cAAc,CAACO,KAAD,CAAlC;AACA,QAAMa,cAAc,GAAGnB,iBAAiB,CAACK,QAAQ,CAACe,YAAV,EAAwBd,KAAxB,CAAxC;AACA,QAAMe,YAAY,GAAGnB,gBAAgB,CAACI,KAAK,CAACgB,aAAP,EAAsB;AACzDC,MAAAA,SAAS,EAAElB,QAAQ,CAACG,WADqC;AAEzDgB,MAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAF4C,KAAtB,CAArC;;AARkH,qBAa9F1B,SAAS,CAAsBO,QAAQ,CAACG,WAA/B,EAA4C;AACvEI,MAAAA,SAAS,EAAER,iBAD4D;AAEvEqB,MAAAA,gBAAgB,EAAE;AAAA,eAAO;AAAER,UAAAA,MAAM,EAANA;AAAF,SAAP;AAAA,OAFqD;AAGvES,MAAAA,sBAAsB,EAAE;AAAA,eAAO;AAC7Bd,UAAAA,SAAS,EAATA,SAD6B;AAE7BC,UAAAA,MAAM,EAANA,MAF6B;AAG7BC,UAAAA,MAAM,EAANA,MAH6B;AAI7BC,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAAA,OAH+C;AASvES,MAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAT0D,KAA5C,CAbqF;AAAA,QAa1GG,OAb0G,cAa1GA,OAb0G;;AAyBlH,QAAMC,OAAO,gBACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdT,MAAAA,SAAS,EAAEe,OAAO,CAACE;AADL,OAEXV,cAFW,EADlB,EAMGH,QANH,CADF;AAUAL,IAAAA,MAAM;AACN,WAAOiB,OAAP;AACD,GArCM;;AAuCPvB,EAAAA,QAAQ,CAACG,WAAT,GAAuB,UAAvB;AAEAH,EAAAA,QAAQ,CAACyB,SAAT,qBACKnC,eAAe,CAACoC,YAAhB,EADL;AAEEd,IAAAA,MAAM,EAAEd,SAAS,CAAC6B;AAFpB;AAKA3B,EAAAA,QAAQ,CAACe,YAAT,GAAwBa,MAAM,CAACC,IAAP,CAAY7B,QAAQ,CAACyB,SAArB,CAAxB;AAEAzB,EAAAA,QAAQ,CAAC8B,MAAT,GAAkBvC,sBAAsB,CAAC;AAAEwC,IAAAA,SAAS,EAAE/B;AAAb,GAAD,CAAxC;AAhDO,SAAMA,QAAN;AAAA","sourcesContent":["import * as React from 'react';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes, createShorthandFactory } from '../../utils';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  useStyles,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\n\nexport interface CardBodyProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A body can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardBodyStylesProps = Pick<CardBodyProps, 'fitted'>;\nexport const cardBodyClassName = 'ui-card__body';\n\n/**\n * A CardBody is used to display data in Card body.\n */\nexport const CardBody: ComponentWithAs<'div', CardBodyProps> & FluentComponentStaticProps<CardBodyProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardBody.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardBody.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardBody.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardBodyStylesProps>(CardBody.displayName, {\n    className: cardBodyClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardBody.displayName = 'CardBody';\n\nCardBody.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardBody.handledProps = Object.keys(CardBody.propTypes) as any;\n\nCardBody.create = createShorthandFactory({ Component: CardBody });\n"],"file":"CardBody.js"}