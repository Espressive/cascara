import * as React from 'react';
import { commonPropTypes, createShorthandFactory } from '../../utils';
import { useTelemetry, useStyles, getElementType, useUnhandledProps, useAccessibility, useFluentContext } from '@fluentui/react-bindings';
export var cardColumnClassName = 'ui-card__column';
/**
 * A CardColumn is used to display content in card as column
 */

export var CardColumn = /*#__PURE__*/function () {
  var CardColumn = function CardColumn(props) {
    var context = useFluentContext();

    var _useTelemetry = useTelemetry(CardColumn.displayName, context.telemetry),
        setStart = _useTelemetry.setStart,
        setEnd = _useTelemetry.setEnd;

    setStart();
    var className = props.className,
        design = props.design,
        styles = props.styles,
        variables = props.variables,
        children = props.children;
    var ElementType = getElementType(props);
    var unhandledProps = useUnhandledProps(CardColumn.handledProps, props);
    var getA11yProps = useAccessibility(props.accessibility, {
      debugName: CardColumn.displayName,
      rtl: context.rtl
    });

    var _useStyles = useStyles(CardColumn.displayName, {
      className: cardColumnClassName,
      mapPropsToInlineStyles: function mapPropsToInlineStyles() {
        return {
          className: className,
          design: design,
          styles: styles,
          variables: variables
        };
      },
      rtl: context.rtl
    }),
        classes = _useStyles.classes;

    var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({
      className: classes.root
    }, unhandledProps)), children);
    setEnd();
    return element;
  };

  CardColumn.displayName = 'CardColumn';
  CardColumn.propTypes = Object.assign({}, commonPropTypes.createCommon());
  CardColumn.handledProps = Object.keys(CardColumn.propTypes);
  CardColumn.create = createShorthandFactory({
    Component: CardColumn
  });
  return CardColumn;
}();
//# sourceMappingURL=CardColumn.js.map
