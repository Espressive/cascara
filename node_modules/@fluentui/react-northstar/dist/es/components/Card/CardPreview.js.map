{"version":3,"sources":["components/Card/CardPreview.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","useFluentContext","PropTypes","React","commonPropTypes","createShorthandFactory","cardPreviewClassName","CardPreview","props","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","horizontal","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","bool","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardPreviewProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** If preview is in horizontal card. */\n  horizontal?: boolean;\n\n  /** A preview can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardPreviewStylesProps = Pick<CardPreviewProps, 'horizontal' | 'fitted'>;\nexport const cardPreviewClassName = 'ui-card__preview';\n\n/**\n * A CardPreview is used to display data Card preview.\n */\nexport const CardPreview: ComponentWithAs<'div', CardPreviewProps> &\n  FluentComponentStaticProps<CardPreviewProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardPreview.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, horizontal, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardPreview.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardPreview.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardPreviewStylesProps>(CardPreview.displayName, {\n    className: cardPreviewClassName,\n    mapPropsToStyles: () => ({ horizontal, fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nCardPreview.displayName = 'CardPreview';\n\nCardPreview.propTypes = {\n  ...commonPropTypes.createCommon(),\n  horizontal: PropTypes.bool,\n  fitted: PropTypes.bool,\n};\n\nCardPreview.handledProps = Object.keys(CardPreview.propTypes) as any;\n\nCardPreview.create = createShorthandFactory({ Component: CardPreview });\n"],"file":"CardPreview.js"}