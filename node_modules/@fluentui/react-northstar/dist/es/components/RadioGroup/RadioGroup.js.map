{"version":3,"sources":["components/RadioGroup/RadioGroup.tsx"],"names":["radioGroupBehavior","customPropTypes","PropTypes","React","childrenExist","commonPropTypes","rtlTextContainer","createShorthandFactory","RadioGroupItem","useAutoControlled","useTelemetry","useFluentContext","getElementType","useUnhandledProps","useAccessibility","useStyles","radioGroupClassName","RadioGroup","props","context","displayName","telemetry","setStart","setEnd","children","vertical","items","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","nextItem","event","setCheckedItem","prevItem","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","defaultValue","defaultCheckedValue","value","checkedValue","initialValue","undefined","setCheckedValue","useState","shouldFocus","setShouldFocus","getItemProps","item","direction","findNextEnabledCheckedItem","checkedValueChange","nextCheckedValue","itemProps","preventDefault","length","currentIndex","newIndex","disabled","handleItemOverrides","predefinedProps","checked","onClick","renderItems","isNoneValueSelected","index","create","defaultProps","tabIndex","overrideProps","element","unstable_wrapWithFocusZone","root","getAttributes","forElements","propTypes","createCommon","content","oneOfType","number","string","collectionShorthand","onCheckedValueChange","func","bool","Object","keys","Item","Component"],"mappings":"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","sourcesContent":["// TODO:\n// vertical - padding variable?\nimport { Accessibility, radioGroupBehavior, RadioGroupBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { RadioGroupItem, RadioGroupItemProps } from './RadioGroupItem';\nimport { ComponentEventHandler, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  useAutoControlled,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface RadioGroupProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<RadioGroupBehaviorProps>;\n\n  /** Value of the currently checked radio item. */\n  checkedValue?: number | string;\n\n  /**\n   * Called after radio group value is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All value props.\n   */\n  onCheckedValueChange?: ComponentEventHandler<RadioGroupItemProps>;\n\n  /** Initial checkedValue value. */\n  defaultCheckedValue?: number | string;\n\n  /** Shorthand array of props for RadioGroup. */\n  items?: ShorthandCollection<RadioGroupItemProps>;\n\n  /** A vertical radio group displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport const radioGroupClassName = 'ui-radiogroup';\n\nexport type RadioGroupStylesProps = Required<Pick<RadioGroupProps, 'vertical'>>;\n\n/**\n * A RadioGroup allows user to select a value from a small set of mutually exclusive options.\n *\n * @accessibility\n * Implements [ARIA Radio Group](https://www.w3.org/TR/wai-aria-practices-1.1/#radiobutton) design pattern.\n * @accessibilityIssues\n * [JAWS narrates instruction message on each radio in radiogroup](https://github.com/FreedomScientific/VFO-standards-support/issues/473)\n */\nexport const RadioGroup: ComponentWithAs<'div', RadioGroupProps> &\n  FluentComponentStaticProps<RadioGroupProps> & {\n    Item: typeof RadioGroupItem;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(RadioGroup.displayName, context.telemetry);\n  setStart();\n\n  const { children, vertical, items, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(RadioGroup.handledProps, props);\n\n  const getA11yProps = useAccessibility<RadioGroupBehaviorProps>(props.accessibility, {\n    debugName: RadioGroup.displayName,\n    actionHandlers: {\n      nextItem: event => setCheckedItem(event, 1),\n      prevItem: event => setCheckedItem(event, -1),\n    },\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<RadioGroupStylesProps>(RadioGroup.displayName, {\n    className: radioGroupClassName,\n    mapPropsToStyles: () => ({\n      vertical,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [checkedValue, setCheckedValue] = useAutoControlled({\n    defaultValue: props.defaultCheckedValue,\n    value: props.checkedValue,\n    initialValue: undefined,\n  });\n\n  const [shouldFocus, setShouldFocus] = React.useState(false);\n\n  const getItemProps = (item): RadioGroupItemProps => {\n    return (item as React.ReactElement<RadioGroupItemProps>).props || item;\n  };\n\n  const setCheckedItem = (event, direction) => {\n    const nextItem = findNextEnabledCheckedItem(direction);\n\n    if (nextItem) {\n      checkedValueChange({\n        nextCheckedValue: nextItem.value,\n        shouldFocus: true,\n        event,\n        itemProps: nextItem,\n      });\n    }\n    event.preventDefault();\n  };\n\n  const findNextEnabledCheckedItem = (direction): RadioGroupItemProps => {\n    if (!props.items || !props.items.length) {\n      return undefined;\n    }\n\n    const currentIndex =\n      // if none of the values selected, set current index to the first item\n      checkedValue !== undefined ? _.findIndex(props.items, item => getItemProps(item).value === checkedValue) : 0;\n\n    for (let newIndex = currentIndex + direction; newIndex !== currentIndex; newIndex += direction) {\n      if (newIndex < 0) {\n        newIndex = props.items.length - 1;\n      } else if (newIndex >= props.items.length) {\n        newIndex = 0;\n      }\n\n      if (newIndex === currentIndex) {\n        return undefined;\n      }\n\n      const itemProps = getItemProps(props.items[newIndex]);\n      if (!itemProps.disabled) {\n        return itemProps;\n      }\n    }\n    return undefined;\n  };\n\n  const handleItemOverrides = predefinedProps => ({\n    checked: typeof checkedValue !== 'undefined' && checkedValue === predefinedProps.value,\n    onClick: (event, itemProps) => {\n      const { value, disabled } = itemProps;\n      if (!disabled && value !== checkedValue) {\n        checkedValueChange({ nextCheckedValue: value, shouldFocus: false, event, itemProps });\n      }\n      _.invoke(predefinedProps, 'onClick', event, itemProps);\n    },\n    shouldFocus,\n  });\n\n  const renderItems = (vertical: boolean) => {\n    const isNoneValueSelected = checkedValue === undefined;\n    return _.map(items, (item, index) =>\n      RadioGroupItem.create(item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            vertical,\n            ...(index === 0 && isNoneValueSelected && { tabIndex: 0 }),\n          }),\n        overrideProps: handleItemOverrides,\n      }),\n    );\n  };\n\n  const checkedValueChange = ({\n    nextCheckedValue,\n    shouldFocus,\n    event,\n    itemProps,\n  }: {\n    nextCheckedValue: number | string;\n    shouldFocus: boolean;\n    event: React.SyntheticEvent;\n    itemProps: RadioGroupItemProps;\n  }) => {\n    setCheckedValue(nextCheckedValue);\n    setShouldFocus(shouldFocus);\n    _.invoke(props, 'onCheckedValueChange', event, itemProps);\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n      })}\n    >\n      {childrenExist(children) ? children : renderItems(vertical)}\n    </ElementType>,\n  );\n\n  setEnd();\n  return element;\n};\n\nRadioGroup.displayName = 'RadioGroup';\n\nRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  checkedValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  defaultCheckedValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  items: customPropTypes.collectionShorthand,\n  onCheckedValueChange: PropTypes.func,\n  vertical: PropTypes.bool,\n};\n\nRadioGroup.defaultProps = {\n  accessibility: radioGroupBehavior,\n};\n\nRadioGroup.handledProps = Object.keys(RadioGroup.propTypes) as any;\n\nRadioGroup.Item = RadioGroupItem;\n\nRadioGroup.create = createShorthandFactory({\n  Component: RadioGroup,\n});\n"],"file":"RadioGroup.js"}