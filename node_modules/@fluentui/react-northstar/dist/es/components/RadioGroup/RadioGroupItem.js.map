{"version":3,"sources":["components/RadioGroup/RadioGroupItem.tsx"],"names":["radioGroupItemBehavior","Ref","customPropTypes","React","PropTypes","createShorthandFactory","commonPropTypes","shouldPreventDefaultOnKeyDown","Box","useAutoControlled","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","RadioButtonIcon","radioGroupItemClassName","radioGroupItemSlotClassNames","indicator","label","RadioGroupItem","props","context","displayName","telemetry","setStart","setEnd","checkedIndicator","disabled","vertical","className","design","styles","variables","shouldFocus","elementRef","useRef","ElementType","unhandledProps","handledProps","defaultValue","defaultChecked","value","checked","initialValue","setChecked","prevChecked","handleClick","e","useEffect","current","undefined","focus","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","resolvedStyles","getA11yProps","accessibility","debugName","actionHandlers","performClick","preventDefault","mapPropsToBehavior","handleChange","element","unstable_wrapWithFocusZone","root","onClick","onChange","create","defaultProps","as","propTypes","createCommon","content","bool","shorthandAllowingChildren","itemShorthand","name","string","func","oneOfType","number","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, radioGroupItemBehavior, RadioGroupItemBehaviorProps } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  useAutoControlled,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport { RadioButtonIcon } from '@fluentui/react-icons-northstar';\n\nexport interface RadioGroupItemSlotClassNames {\n  indicator: string;\n  label: string;\n}\n\nexport interface RadioGroupItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<RadioGroupItemBehaviorProps>;\n\n  /** Whether or not radio item is checked. */\n  checked?: boolean;\n\n  /**\n   * Called after radio item checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<RadioGroupItemProps>;\n\n  /** The label of the radio item. */\n  label?: ShorthandValue<BoxProps>;\n\n  /** Initial checked value. */\n  defaultChecked?: boolean;\n\n  /** A radio item can appear disabled and be unable to change states. */\n  disabled?: boolean;\n\n  /** The radio item indicator can be customized. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** The checked radio item indicator can be customized. */\n  checkedIndicator?: ShorthandValue<BoxProps>;\n\n  /** The HTML input name. */\n  name?: string;\n\n  /**\n   * Called after radio item is clicked.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<RadioGroupItemProps>;\n\n  /** Whether should focus when checked */\n  shouldFocus?: boolean; // TODO: RFC #306\n\n  /** The HTML input value. */\n  value?: string | number;\n\n  /** A vertical radio group displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport const radioGroupItemClassName = 'ui-radiogroup__item';\nexport const radioGroupItemSlotClassNames: RadioGroupItemSlotClassNames = {\n  indicator: `${radioGroupItemClassName}__indicator`,\n  label: `${radioGroupItemClassName}__label`,\n};\n\nexport type RadioGroupItemStylesProps = Required<Pick<RadioGroupItemProps, 'disabled' | 'vertical' | 'checked'>>;\n\n/**\n * A RadioGroupItem represents single input element within a RadioGroup.\n *\n * @accessibility\n * Radio items need to be grouped to correctly handle accessibility.\n */\nexport const RadioGroupItem: ComponentWithAs<'div', RadioGroupItemProps> &\n  FluentComponentStaticProps<RadioGroupItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(RadioGroupItem.displayName, context.telemetry);\n  setStart();\n  const {\n    label,\n    checkedIndicator,\n    indicator,\n    disabled,\n    vertical,\n    className,\n    design,\n    styles,\n    variables,\n    shouldFocus,\n  } = props;\n  const elementRef = React.useRef<HTMLElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(RadioGroupItem.handledProps, props);\n\n  const [checked, setChecked] = useAutoControlled({\n    defaultValue: props.defaultChecked,\n    value: props.checked,\n    initialValue: false,\n  });\n\n  const prevChecked = React.useRef<boolean>(checked);\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    _.invoke(props, 'onClick', e, props);\n    setChecked(prevChecked => {\n      return !prevChecked;\n    });\n  };\n\n  // This behavior is not conformant with native input radio, it was added to avoid breaking change\n  // and it should be fixed to be conformant with native, only calling onChange when item is clicked (checked will always be true)\n  React.useEffect(() => {\n    if (prevChecked.current !== checked) {\n      _.invoke(props, 'onChange', undefined, { ...props, checked });\n      prevChecked.current = checked;\n    }\n  });\n\n  React.useEffect(() => {\n    if (checked && shouldFocus) elementRef.current.focus();\n  }, [checked, shouldFocus]);\n\n  const { classes, styles: resolvedStyles } = useStyles<RadioGroupItemStylesProps>(RadioGroupItem.displayName, {\n    className: radioGroupItemClassName,\n    mapPropsToStyles: () => ({\n      vertical,\n      disabled,\n      checked,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<RadioGroupItemBehaviorProps>(props.accessibility, {\n    debugName: RadioGroupItem.displayName,\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        handleClick(e);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      checked,\n      disabled,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleChange = (e: React.ChangeEvent) => {\n    // RadioGroupItem component doesn't present any `input` component in markup, however all of our\n    // components should handle events transparently.\n    _.invoke(props, 'onChange', e, { ...props, checked });\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <Ref innerRef={elementRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          onClick: handleClick,\n          onChange: handleChange,\n          ...unhandledProps,\n        })}\n      >\n        {Box.create(checked ? checkedIndicator : indicator, {\n          defaultProps: () => ({\n            className: radioGroupItemSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n        })}\n        {Box.create(label, {\n          defaultProps: () => ({\n            as: 'span',\n            className: radioGroupItemSlotClassNames.label,\n            styles: resolvedStyles.label,\n          }),\n        })}\n      </ElementType>\n    </Ref>,\n  );\n  setEnd();\n  return element;\n};\n\nRadioGroupItem.displayName = 'RadioGroupItem';\n\nRadioGroupItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  checkedIndicator: customPropTypes.shorthandAllowingChildren,\n  label: customPropTypes.itemShorthand,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  onChange: PropTypes.func,\n  shouldFocus: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool,\n};\n\nRadioGroupItem.defaultProps = {\n  accessibility: radioGroupItemBehavior,\n  indicator: <RadioButtonIcon outline />,\n  checkedIndicator: <RadioButtonIcon />,\n};\n\nRadioGroupItem.handledProps = Object.keys(RadioGroupItem.propTypes) as any;\n\nRadioGroupItem.create = createShorthandFactory({ Component: RadioGroupItem, mappedProp: 'label' });\n"],"file":"RadioGroupItem.js"}