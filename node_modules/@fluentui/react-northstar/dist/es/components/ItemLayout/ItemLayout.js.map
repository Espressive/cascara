{"version":3,"sources":["components/ItemLayout/ItemLayout.tsx"],"names":["useStyles","useFluentContext","useTelemetry","useUnhandledProps","React","PropTypes","cx","createShorthandFactory","pxToRem","commonPropTypes","rtlTextContainer","Layout","itemLayoutClassName","itemLayoutSlotClassNames","header","headerMedia","main","content","contentMedia","media","endMedia","ItemLayout","props","context","displayName","telemetry","setStart","setEnd","as","debug","renderMainArea","rootCSS","mediaCSS","endMediaCSS","className","design","styles","variables","unhandledProps","handledProps","mapPropsToInlineStyles","rtl","classes","resolvedStyles","startArea","mainArea","endArea","mergedMediaClasses","mergedEndMediaClasses","element","root","createFor","propTypes","createCommon","accessibility","children","any","bool","renderContentArea","func","renderHeaderArea","object","headerCSS","headerMediaCSS","contentCSS","contentMediaCSS","defaultProps","headerArea","contentArea","gridTemplateRows","mergedClasses","mediaClasses","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  ComponentWithAs,\n  ComponentSlotClasses,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport {\n  createShorthandFactory,\n  pxToRem,\n  UIComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport { Layout } from '../Layout/Layout';\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface ItemLayoutSlotClassNames {\n  header: string;\n  headerMedia: string;\n  main: string;\n  content: string;\n  contentMedia: string;\n  media: string;\n  endMedia: string;\n}\n\nexport interface ItemLayoutProps extends UIComponentProps, ContentComponentProps<any> {\n  contentMedia?: any;\n  /** Toggle debug mode */\n  debug?: boolean;\n  header?: any;\n  endMedia?: any;\n  headerMedia?: any;\n  media?: any;\n  renderContentArea?: (props: ItemLayoutProps, classes: ComponentSlotClasses) => React.ReactNode;\n  renderHeaderArea?: (props: ItemLayoutProps, classes: ComponentSlotClasses) => React.ReactNode;\n  renderMainArea?: (props: ItemLayoutProps, classes: ComponentSlotClasses) => React.ReactNode;\n  /** Styled applied to the root element of the rendered component. */\n  rootCSS?: React.CSSProperties;\n  /** Styled applied to the media element of the rendered component. */\n  mediaCSS?: React.CSSProperties;\n  /** Styled applied to the header element of the rendered component. */\n  headerCSS?: React.CSSProperties;\n  /** Styled applied to the header media element of the rendered component. */\n  headerMediaCSS?: React.CSSProperties;\n  /** Styled applied to the content element of the rendered component. */\n  contentCSS?: React.CSSProperties;\n  /** Styled applied to the content element of the rendered component. */\n  contentMediaCSS?: React.CSSProperties;\n  /** Styled applied to the end media element of the rendered component. */\n  endMediaCSS?: React.CSSProperties;\n}\n\nexport const itemLayoutClassName = 'ui-itemlayout';\nexport const itemLayoutSlotClassNames: ItemLayoutSlotClassNames = {\n  header: `${itemLayoutClassName}__header`,\n  headerMedia: `${itemLayoutClassName}__headerMedia`,\n  main: `${itemLayoutClassName}__main`,\n  content: `${itemLayoutClassName}__content`,\n  contentMedia: `${itemLayoutClassName}__contentMedia`,\n  media: `${itemLayoutClassName}__media`,\n  endMedia: `${itemLayoutClassName}__endMedia`,\n};\n\nexport type ItemLayoutStylesProps = never;\n\n/**\n * (DEPRECATED) The Item Layout handles layout styles for menu items, list items and other similar item templates.\n */\nexport const ItemLayout: ComponentWithAs<'div', ItemLayoutProps> &\n  FluentComponentStaticProps<ItemLayoutProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ItemLayout.displayName, context.telemetry);\n  setStart();\n  const {\n    as,\n    debug,\n    endMedia,\n    media,\n    renderMainArea,\n    rootCSS,\n    mediaCSS,\n    endMediaCSS,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const unhandledProps = useUnhandledProps(ItemLayout.handledProps, props);\n\n  const { classes, styles: resolvedStyles } = useStyles<ItemLayoutStylesProps>(ItemLayout.displayName, {\n    className: itemLayoutClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const startArea = media;\n  const mainArea = renderMainArea(props, classes);\n  const endArea = endMedia;\n\n  const mergedMediaClasses = cx(itemLayoutSlotClassNames.media, classes.media);\n  const mergedEndMediaClasses = cx(itemLayoutSlotClassNames.endMedia, classes.endMedia);\n\n  const element = (\n    <Layout\n      as={as as React.ElementType}\n      className={classes.root}\n      styles={resolvedStyles.root}\n      rootCSS={rootCSS}\n      alignItems=\"center\"\n      gap={pxToRem(8)}\n      debug={debug}\n      reducing\n      start={\n        startArea && (\n          <span style={mediaCSS} className={mergedMediaClasses}>\n            {rtlTextContainer.createFor({ element: startArea })}\n          </span>\n        )\n      }\n      main={mainArea}\n      end={\n        endArea && (\n          <span style={endMediaCSS} className={mergedEndMediaClasses}>\n            {rtlTextContainer.createFor({ element: endArea })}\n          </span>\n        )\n      }\n      {...unhandledProps}\n    />\n  );\n  setEnd();\n  return element;\n};\n\nItemLayout.displayName = 'ItemLayout';\n\nItemLayout.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  contentMedia: PropTypes.any,\n  content: PropTypes.any,\n  debug: PropTypes.bool,\n  header: PropTypes.any,\n  endMedia: PropTypes.any,\n  headerMedia: PropTypes.any,\n  media: PropTypes.any,\n  renderContentArea: PropTypes.func,\n  renderHeaderArea: PropTypes.func,\n  renderMainArea: PropTypes.func,\n  rootCSS: PropTypes.object,\n  mediaCSS: PropTypes.object,\n  headerCSS: PropTypes.object,\n  headerMediaCSS: PropTypes.object,\n  contentCSS: PropTypes.object,\n  contentMediaCSS: PropTypes.object,\n  endMediaCSS: PropTypes.object,\n};\n\nItemLayout.defaultProps = {\n  renderMainArea: (props, classes) => {\n    const { renderHeaderArea, renderContentArea } = props;\n\n    const headerArea = renderHeaderArea(props, classes);\n    const contentArea = renderContentArea(props, classes);\n\n    return (\n      <div\n        className={itemLayoutSlotClassNames.main}\n        style={{\n          gridTemplateRows: '1fr 1fr',\n        }}\n      >\n        {headerArea}\n        {contentArea}\n      </div>\n    );\n  },\n\n  renderHeaderArea: (props, classes) => {\n    const { debug, header, headerMedia, headerCSS, headerMediaCSS } = props;\n\n    const mergedClasses = cx(itemLayoutSlotClassNames.header, classes.header);\n    const mediaClasses = cx(itemLayoutSlotClassNames.headerMedia, classes.headerMedia);\n\n    return !header && !headerMedia ? null : (\n      <Layout\n        className={mergedClasses}\n        alignItems=\"end\"\n        gap={pxToRem(8)}\n        debug={debug}\n        main={rtlTextContainer.createFor({ element: header })}\n        rootCSS={headerCSS}\n        end={\n          headerMedia && (\n            <span style={headerMediaCSS} className={mediaClasses}>\n              {rtlTextContainer.createFor({ element: headerMedia })}\n            </span>\n          )\n        }\n      />\n    );\n  },\n\n  renderContentArea: (props, classes) => {\n    const { debug, content, contentMedia, contentCSS, contentMediaCSS } = props;\n\n    const mergedClasses = cx(itemLayoutSlotClassNames.content, classes.content);\n    const mediaClasses = cx(itemLayoutSlotClassNames.contentMedia, classes.contentMedia);\n\n    return !content && !contentMedia ? null : (\n      <Layout\n        className={mergedClasses}\n        alignItems=\"start\"\n        gap={pxToRem(8)}\n        debug={debug}\n        rootCSS={contentCSS}\n        main={rtlTextContainer.createFor({ element: content })}\n        end={\n          contentMedia && (\n            <span style={contentMediaCSS} className={mediaClasses}>\n              {rtlTextContainer.createFor({ element: contentMedia })}\n            </span>\n          )\n        }\n      />\n    );\n  },\n};\n\nItemLayout.handledProps = Object.keys(ItemLayout.propTypes) as any;\n\nItemLayout.create = createShorthandFactory({ Component: ItemLayout, mappedProp: 'content' });\n"],"file":"ItemLayout.js"}