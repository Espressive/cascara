import { Accessibility } from '@fluentui/accessibility';
import { ComponentWithAs } from '@fluentui/react-bindings';
import * as PopperJs from '@popperjs/core';
import * as React from 'react';
import { UIComponentProps, ChildrenComponentProps, ContentComponentProps } from '../../utils';
import { PopperChildrenProps } from '../../utils/positioner';
import { FluentComponentStaticProps } from '../../types';
export interface TooltipContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {
    /**
     * Accessibility behavior if overridden by the user.
     */
    accessibility?: Accessibility<never>;
    /** An actual placement value from Popper. */
    placement?: PopperChildrenProps['placement'];
    /** Defines whether tooltip is displayed. */
    open?: boolean;
    /** A tooltip can show a pointer to trigger. */
    pointing?: boolean;
    /** A ref to a pointer element. */
    pointerRef?: React.Ref<HTMLDivElement>;
}
export declare type TooltipContentStylesProps = Required<Pick<TooltipContentProps, 'pointing' | 'open'>> & {
    basePlacement: PopperJs.BasePlacement;
};
export declare const tooltipContentClassName = "ui-tooltip__content";
/**
 * A TooltipContent contains the content of a Tooltip component.
 */
export declare const TooltipContent: ComponentWithAs<'div', TooltipContentProps> & FluentComponentStaticProps<TooltipContentProps>;
