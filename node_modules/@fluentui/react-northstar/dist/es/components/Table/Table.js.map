{"version":3,"sources":["components/Table/Table.tsx"],"names":["tableBehavior","getElementType","useTelemetry","mergeVariablesOverrides","useUnhandledProps","useAccessibility","useStyles","useFluentContext","customPropTypes","PropTypes","React","commonPropTypes","childrenExist","createShorthandFactory","TableRow","TableCell","tableClassName","tableSlotClassNames","header","Table","props","context","displayName","telemetry","setStart","setEnd","children","rows","compact","accessibility","className","design","styles","variables","hasChildren","ElementType","unhandledProps","handledProps","getA11yProps","debugName","rtl","mapPropsToInlineStyles","classes","renderRows","row","create","defaultProps","onClick","e","overrideProps","predefinedProps","renderHeader","element","unstable_wrapWithFocusZone","root","Cell","Row","Component","propTypes","createCommon","content","itemShorthand","collectionShorthand","bool","Object","keys"],"mappings":"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","sourcesContent":["import { Accessibility, tableBehavior, TableBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useTelemetry,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  childrenExist,\n  createShorthandFactory,\n} from '../../utils';\nimport { TableRow, TableRowProps } from './TableRow';\nimport { TableCell } from './TableCell';\n\nimport { ShorthandCollection, ShorthandValue, FluentComponentStaticProps } from '../../types';\n\nexport interface TableSlotClassNames {\n  header: string;\n}\n\nexport interface TableProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * */\n  accessibility?: Accessibility<TableBehaviorProps>;\n\n  /** The columns of the Table with a space-separated list of values.\n   */\n  header?: ShorthandValue<TableRowProps>;\n\n  /** The rows of the Table with a space-separated list of values.\n   */\n  rows?: ShorthandCollection<TableRowProps>;\n\n  /**\n   * Render table in compact mode\n   */\n  compact?: boolean;\n}\n\nexport const tableClassName = 'ui-table';\nexport const tableSlotClassNames: TableSlotClassNames = {\n  header: `${tableClassName}__header`,\n};\n\nexport type TableStylesProps = never;\n\n/**\n * A Table is used to display data in tabular layout\n * * @accessibility\n * Implements ARIA [Data Grid](https://www.w3.org/TR/wai-aria-practices/#dataGrid) design pattern for presenting tabular information.\n * When gridcell contains actionable element, use [gridCellWithFocusableElementBehavior](/components/table/accessibility#grid-cell-with-focusable-element-behavior-ts). [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-practices/#gridNav_focus)\n * Use [gridCellMultipleFocusableBehavior](/components/table/accessibility#gridCellMultipleFocusableBehavior), when gridcell contains:\n * \\- editable content\n * \\- multiple actionable elements\n * \\- component that utilizes arrow keys in its navigation, like menu button, dropdown, radio group, slider, etc.\n * [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-practices/#gridNav_inside)\n * @accessibilityIssues\n * [NVDA narrate table title(aria-label) twice](https://github.com/nvaccess/nvda/issues/10548)\n * [Accessibility DOM > Table > gridcell > when gridcell is focused, then selected state is send to reader](https://bugs.chromium.org/p/chromium/issues/detail?id=1030378)\n * [JAWS narrate grid name twice, once as table and second time as grid](https://github.com/FreedomScientific/VFO-standards-support/issues/346)\n * [JAWS doesn't narrate grid column name, when focus is on actionable element in the cell] (https://github.com/FreedomScientific/VFO-standards-support/issues/348)\n * [aria-sort is not output at child elements](https://github.com/FreedomScientific/VFO-standards-support/issues/319)\n * [VoiceOver not announcing rows correctly for a grid with presentation elements inside](https://bugs.chromium.org/p/chromium/issues/detail?id=1054424)\n * VoiceOver doesn't narrate aria-rowcount value in table or grid\n */\nexport const Table: ComponentWithAs<'div', TableProps> &\n  FluentComponentStaticProps<TableProps> & {\n    Cell: typeof TableCell;\n    Row: typeof TableRow;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Table.displayName, context.telemetry);\n  setStart();\n  const { children, rows, header, compact, accessibility, className, design, styles, variables } = props;\n  const hasChildren = childrenExist(children);\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Table.handledProps, props);\n\n  const getA11yProps = useAccessibility<TableBehaviorProps>(accessibility, {\n    debugName: Table.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TableStylesProps>(Table.displayName, {\n    className: tableClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const renderRows = () => {\n    return _.map(rows, (row: TableRowProps) => {\n      return TableRow.create(row, {\n        defaultProps: () =>\n          getA11yProps('row', {\n            compact,\n            onClick: (e, props) => {\n              _.invoke(row, 'onClick', e, props);\n            },\n          }),\n        overrideProps: predefinedProps => ({\n          variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n        }),\n      });\n    });\n  };\n\n  const renderHeader = () => {\n    return TableRow.create(header, {\n      defaultProps: () =>\n        getA11yProps('row', {\n          header: true,\n          compact,\n          className: tableSlotClassNames.header,\n        }),\n      overrideProps: predefinedProps => ({\n        variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n      }),\n    });\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {hasChildren && children}\n      {/* <thead> */}\n      {!hasChildren && renderHeader()}\n      {/* </thead> */}\n      {/* <tbody> */}\n      {!hasChildren && renderRows()}\n      {/* </tbody> */}\n    </ElementType>,\n  );\n  setEnd();\n  return element;\n};\n\nTable.displayName = 'Table';\n\nTable.Cell = TableCell;\n\nTable.Row = TableRow;\n\nTable.create = createShorthandFactory({\n  Component: Table,\n});\n\nTable.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  header: customPropTypes.itemShorthand,\n  rows: customPropTypes.collectionShorthand,\n  compact: PropTypes.bool,\n};\n\nTable.handledProps = Object.keys(Table.propTypes) as any;\n\nTable.defaultProps = {\n  accessibility: tableBehavior,\n};\n"],"file":"Table.js"}