{"version":3,"sources":["components/Table/TableRow.tsx"],"names":["tableRowBehavior","getElementType","mergeVariablesOverrides","useAccessibility","useStyles","useTelemetry","useUnhandledProps","useFluentContext","Ref","customPropTypes","PropTypes","React","childrenExist","commonPropTypes","createShorthandFactory","TableCell","tableRowClassName","TableRow","props","context","displayName","telemetry","setStart","setEnd","rowRef","useRef","className","design","styles","items","header","compact","children","accessibility","variables","selected","hasChildren","ElementType","unhandledProps","handledProps","getA11yProps","debugName","actionHandlers","unsetRowTabbable","e","current","setAttribute","performClick","currentTarget","target","preventDefault","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","renderCells","item","create","defaultProps","overrideProps","predefinedProps","element","unstable_wrapWithFocusZone","root","propTypes","createCommon","content","collectionShorthand","bool","Object","keys","Component","mappedArrayProp"],"mappings":";;AAAA,SAAwBA,gBAAxB,QAAsE,yBAAtE;AACA,SAEEC,cAFF,EAGEC,uBAHF,EAIEC,gBAJF,EAKEC,SALF,EAMEC,YANF,EAOEC,iBAPF,EAQEC,gBARF,QASO,0BATP;AAUA,SAASC,GAAT,QAAoB,+BAApB;AACA,OAAO,KAAKC,eAAZ,MAAiC,2BAAjC;AAGA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,sBAAzC,QAAyF,aAAzF;AACA,SAASC,SAAT,QAA0C,aAA1C;AA6BA,OAAO,IAAMC,iBAAiB,GAAG,eAA1B;;AAIP;AACA;AACA;AACA,OAAO,IAAMC,QAAN;AAAA,MAAMA,QAA2F,GAAG,SAA9FA,QAA8F,CAAAC,KAAK,EAAI;AAClH,QAAMC,OAAO,GAAGZ,gBAAgB,EAAhC;;AADkH,wBAErFF,YAAY,CAACY,QAAQ,CAACG,WAAV,EAAuBD,OAAO,CAACE,SAA/B,CAFyE;AAAA,QAE1GC,QAF0G,iBAE1GA,QAF0G;AAAA,QAEhGC,MAFgG,iBAEhGA,MAFgG;;AAGlHD,IAAAA,QAAQ;AACR,QAAME,MAAM,GAAGb,KAAK,CAACc,MAAN,EAAf;AAJkH,QAK1GC,SAL0G,GAKNR,KALM,CAK1GQ,SAL0G;AAAA,QAK/FC,MAL+F,GAKNT,KALM,CAK/FS,MAL+F;AAAA,QAKvFC,MALuF,GAKNV,KALM,CAKvFU,MALuF;AAAA,QAK/EC,KAL+E,GAKNX,KALM,CAK/EW,KAL+E;AAAA,QAKxEC,MALwE,GAKNZ,KALM,CAKxEY,MALwE;AAAA,QAKhEC,OALgE,GAKNb,KALM,CAKhEa,OALgE;AAAA,QAKvDC,QALuD,GAKNd,KALM,CAKvDc,QALuD;AAAA,QAK7CC,aAL6C,GAKNf,KALM,CAK7Ce,aAL6C;AAAA,QAK9BC,SAL8B,GAKNhB,KALM,CAK9BgB,SAL8B;AAAA,QAKnBC,QALmB,GAKNjB,KALM,CAKnBiB,QALmB;AAOlH,QAAMC,WAAW,GAAGxB,aAAa,CAACoB,QAAD,CAAjC;AACA,QAAMK,WAAW,GAAGpC,cAAc,CAACiB,KAAD,CAAlC;AACA,QAAMoB,cAAc,GAAGhC,iBAAiB,CAACW,QAAQ,CAACsB,YAAV,EAAwBrB,KAAxB,CAAxC;AACA,QAAMsB,YAAY,GAAGrC,gBAAgB,CAAC8B,aAAD,EAAgB;AACnDQ,MAAAA,SAAS,EAAExB,QAAQ,CAACG,WAD+B;AAEnDsB,MAAAA,cAAc,EAAE;AACd;AACAC,QAAAA,gBAAgB,EAAE,0BAAAC,CAAC,EAAI;AACrBpB,UAAAA,MAAM,CAACqB,OAAP,CAAeC,YAAf,CAA4B,UAA5B,EAAwC,IAAxC;AACD,SAJa;AAKdC,QAAAA,YAAY,EAAE,sBAAAH,CAAC,EAAI;AACjB,cAAIA,CAAC,CAACI,aAAF,KAAoBJ,CAAC,CAACK,MAA1B,EAAkC;AAChC,oBAAS/B,KAAT,EAAgB,SAAhB,EAA2B0B,CAA3B,EAA8B1B,KAA9B;;AACA0B,YAAAA,CAAC,CAACM,cAAF;AACD;AACF;AAVa,OAFmC;AAcnDC,MAAAA,kBAAkB,EAAE;AAAA,eAAO;AACzBhB,UAAAA,QAAQ,EAARA,QADyB;AAEzBL,UAAAA,MAAM,EAANA;AAFyB,SAAP;AAAA,OAd+B;AAkBnDsB,MAAAA,GAAG,EAAEjC,OAAO,CAACiC;AAlBsC,KAAhB,CAArC;;AAVkH,qBA+B9FhD,SAAS,CAAsBa,QAAQ,CAACG,WAA/B,EAA4C;AACvEM,MAAAA,SAAS,EAAEV,iBAD4D;AAEvEqC,MAAAA,gBAAgB,EAAE;AAAA,eAAO;AACvBvB,UAAAA,MAAM,EAANA,MADuB;AAEvBC,UAAAA,OAAO,EAAPA;AAFuB,SAAP;AAAA,OAFqD;AAMvEuB,MAAAA,sBAAsB,EAAE;AAAA,eAAO;AAC7B5B,UAAAA,SAAS,EAATA,SAD6B;AAE7BC,UAAAA,MAAM,EAANA,MAF6B;AAG7BC,UAAAA,MAAM,EAANA,MAH6B;AAI7BM,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAAA,OAN+C;AAYvEkB,MAAAA,GAAG,EAAEjC,OAAO,CAACiC;AAZ0D,KAA5C,CA/BqF;AAAA,QA+B1GG,OA/B0G,cA+B1GA,OA/B0G;;AA8ClH,QAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,aAAO,KAAM3B,KAAN,EAAa,UAAC4B,IAAD,EAA0B;AAC5C,eAAO1C,SAAS,CAAC2C,MAAV,CAAiBD,IAAjB,EAAuB;AAC5BE,UAAAA,YAAY,EAAE;AAAA,mBAAMnB,YAAY,CAAC,MAAD,EAAS,EAAT,CAAlB;AAAA,WADc;AAE5BoB,UAAAA,aAAa,EAAE,uBAAAC,eAAe;AAAA,mBAAK;AACjC3B,cAAAA,SAAS,EAAEhC,uBAAuB,CAACgC,SAAD,EAAY2B,eAAe,CAAC3B,SAA5B;AADD,aAAL;AAAA;AAFF,SAAvB,CAAP;AAMD,OAPM,CAAP;AAQD,KATD;;AAWA,QAAM4B,OAAO,gBACX,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAEtC;AAAf,OACGgB,YAAY,CAACuB,0BAAb,eACC,oBAAC,WAAD,EACMvB,YAAY,CAAC,MAAD;AACdd,MAAAA,SAAS,EAAE6B,OAAO,CAACS;AADL,OAEX1B,cAFW,EADlB,EAMGF,WAAW,IAAIJ,QANlB,EAOG,CAACI,WAAD,IAAgBoB,WAAW,EAP9B,CADD,CADH,CADF;AAeAjC,IAAAA,MAAM;AACN,WAAOuC,OAAP;AACD,GA1EM;;AA4EP7C,EAAAA,QAAQ,CAACG,WAAT,GAAuB,UAAvB;AAEAH,EAAAA,QAAQ,CAACgD,SAAT,qBACKpD,eAAe,CAACqD,YAAhB,CAA6B;AAC9BC,IAAAA,OAAO,EAAE;AADqB,GAA7B,CADL;AAIEtC,IAAAA,KAAK,EAAEpB,eAAe,CAAC2D,mBAJzB;AAKEtC,IAAAA,MAAM,EAAEpB,SAAS,CAAC2D,IALpB;AAMEtC,IAAAA,OAAO,EAAErB,SAAS,CAAC2D,IANrB;AAOElC,IAAAA,QAAQ,EAAEzB,SAAS,CAAC2D;AAPtB;AAUApD,EAAAA,QAAQ,CAACsB,YAAT,GAAwB+B,MAAM,CAACC,IAAP,CAAYtD,QAAQ,CAACgD,SAArB,CAAxB;AAEAhD,EAAAA,QAAQ,CAAC0C,YAAT,GAAwB;AACtB1B,IAAAA,aAAa,EAAEjC;AADO,GAAxB;AAIAiB,EAAAA,QAAQ,CAACyC,MAAT,GAAkB5C,sBAAsB,CAAC;AAAE0D,IAAAA,SAAS,EAAEvD,QAAb;AAAuBwD,IAAAA,eAAe,EAAE;AAAxC,GAAD,CAAxC;AA9FO,SAAMxD,QAAN;AAAA","sourcesContent":["import { Accessibility, tableRowBehavior, GridRowBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  mergeVariablesOverrides,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useFluentContext,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\n\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { FluentComponentStaticProps, ShorthandCollection } from '../../types';\nimport { childrenExist, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\nimport { TableCell, TableCellProps } from './TableCell';\n\nexport interface TableRowProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * */\n  accessibility?: Accessibility<GridRowBehaviorProps>;\n\n  /**\n   * Row cells\n   */\n  items?: ShorthandCollection<TableCellProps>;\n\n  /**\n   * Is the row a table header\n   */\n  header?: boolean;\n\n  /**\n   * Render table in compact mode\n   */\n  compact?: boolean;\n\n  /**\n   * Whether a row is currently selected or not.\n   */\n  selected?: boolean;\n}\n\nexport const tableRowClassName = 'ui-table__row';\n\nexport type TableRowStylesProps = Pick<TableRowProps, 'header' | 'compact'>;\n\n/**\n * Component represents a single row in a tabular structure\n */\nexport const TableRow: ComponentWithAs<'div', TableRowProps> & FluentComponentStaticProps<TableRowProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TableRow.displayName, context.telemetry);\n  setStart();\n  const rowRef = React.useRef<HTMLElement>();\n  const { className, design, styles, items, header, compact, children, accessibility, variables, selected } = props;\n\n  const hasChildren = childrenExist(children);\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TableRow.handledProps, props);\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: TableRow.displayName,\n    actionHandlers: {\n      // https://github.com/microsoft/fluent-ui-react/issues/2150\n      unsetRowTabbable: e => {\n        rowRef.current.setAttribute('tabindex', '-1');\n      },\n      performClick: e => {\n        if (e.currentTarget === e.target) {\n          _.invoke(props, 'onClick', e, props);\n          e.preventDefault();\n        }\n      },\n    },\n    mapPropsToBehavior: () => ({\n      selected,\n      header,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TableRowStylesProps>(TableRow.displayName, {\n    className: tableRowClassName,\n    mapPropsToStyles: () => ({\n      header,\n      compact,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const renderCells = () => {\n    return _.map(items, (item: TableCellProps) => {\n      return TableCell.create(item, {\n        defaultProps: () => getA11yProps('cell', {}),\n        overrideProps: predefinedProps => ({\n          variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n        }),\n      });\n    });\n  };\n\n  const element = (\n    <Ref innerRef={rowRef}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            ...unhandledProps,\n          })}\n        >\n          {hasChildren && children}\n          {!hasChildren && renderCells()}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n  return element;\n};\n\nTableRow.displayName = 'TableRow';\n\nTableRow.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  items: customPropTypes.collectionShorthand,\n  header: PropTypes.bool,\n  compact: PropTypes.bool,\n  selected: PropTypes.bool,\n};\n\nTableRow.handledProps = Object.keys(TableRow.propTypes) as any;\n\nTableRow.defaultProps = {\n  accessibility: tableRowBehavior,\n};\n\nTableRow.create = createShorthandFactory({ Component: TableRow, mappedArrayProp: 'items' });\n"],"file":"TableRow.js"}