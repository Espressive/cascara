{"version":3,"sources":["components/Table/TableCell.tsx"],"names":["customPropTypes","tableCellBehavior","Ref","PropTypes","React","childrenExist","commonPropTypes","createShorthandFactory","useTelemetry","useStyles","useFluentContext","getElementType","useUnhandledProps","useAccessibility","Box","tableCellClassName","tableCellSlotClassNames","content","TableCell","props","context","displayName","telemetry","setStart","setEnd","cellRef","useRef","children","truncateContent","className","design","styles","variables","hasChildren","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","focusCell","e","preventDefault","current","focus","performClick","currentTarget","target","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","element","unstable_wrapWithFocusZone","root","create","defaultProps","propTypes","createCommon","every","disallow","oneOfType","arrayOf","nodeContent","bool","Object","keys","Component","mappedProp"],"mappings":";AAAA,OAAO,KAAKA,eAAZ,MAAiC,2BAAjC;AACA,SAAwBC,iBAAxB,QAAyE,yBAAzE;AACA,SAASC,GAAT,QAAoB,+BAApB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SACEC,aADF,EAGEC,eAHF,EAKEC,sBALF,QAOO,aAPP;AAQA,SAEEC,YAFF,EAGEC,SAHF,EAIEC,gBAJF,EAKEC,cALF,EAMEC,iBANF,EAOEC,gBAPF,QAQO,0BARP;AAUA,SAASC,GAAT,QAA8B,YAA9B;AAyBA,OAAO,IAAMC,kBAAkB,GAAG,gBAA3B;AACP,OAAO,IAAMC,uBAAgD,GAAG;AAC9DC,EAAAA,OAAO,EAAKF,kBAAL;AADuD,CAAzD;AAIP;AACA;AACA;;AACA,OAAO,IAAMG,SAAN;AAAA,MAAMA,SAA8F,GAAG,SAAjGA,SAAiG,CAAAC,KAAK,EAAI;AACrH,QAAMC,OAAO,GAAGV,gBAAgB,EAAhC;;AADqH,wBAExFF,YAAY,CAACU,SAAS,CAACG,WAAX,EAAwBD,OAAO,CAACE,SAAhC,CAF4E;AAAA,QAE7GC,QAF6G,iBAE7GA,QAF6G;AAAA,QAEnGC,MAFmG,iBAEnGA,MAFmG;;AAGrHD,IAAAA,QAAQ;AACR,QAAME,OAAO,GAAGrB,KAAK,CAACsB,MAAN,EAAhB;AAJqH,QAM7GC,QAN6G,GAMhCR,KANgC,CAM7GQ,QAN6G;AAAA,QAMnGV,OANmG,GAMhCE,KANgC,CAMnGF,OANmG;AAAA,QAM1FW,eAN0F,GAMhCT,KANgC,CAM1FS,eAN0F;AAAA,QAMzEC,SANyE,GAMhCV,KANgC,CAMzEU,SANyE;AAAA,QAM9DC,MAN8D,GAMhCX,KANgC,CAM9DW,MAN8D;AAAA,QAMtDC,MANsD,GAMhCZ,KANgC,CAMtDY,MANsD;AAAA,QAM9CC,SAN8C,GAMhCb,KANgC,CAM9Ca,SAN8C;AAOrH,QAAMC,WAAW,GAAG5B,aAAa,CAACsB,QAAD,CAAjC;AACA,QAAMO,WAAW,GAAGvB,cAAc,CAACQ,KAAD,CAAlC;AACA,QAAMgB,cAAc,GAAGvB,iBAAiB,CAACM,SAAS,CAACkB,YAAX,EAAyBjB,KAAzB,CAAxC;AACA,QAAMkB,YAAY,GAAGxB,gBAAgB,CAACM,KAAK,CAACmB,aAAP,EAAsB;AACzDC,MAAAA,SAAS,EAAErB,SAAS,CAACG,WADoC;AAEzDmB,MAAAA,cAAc,EAAE;AACdC,QAAAA,SAAS,EAAE,mBAAAC,CAAC,EAAI;AACdA,UAAAA,CAAC,CAACC,cAAF;AACAlB,UAAAA,OAAO,CAACmB,OAAR,CAAgBC,KAAhB;AACD,SAJa;AAKdC,QAAAA,YAAY,EAAE,sBAAAJ,CAAC,EAAI;AACjB,cAAIA,CAAC,CAACK,aAAF,KAAoBL,CAAC,CAACM,MAA1B,EAAkC;AAChC,oBAAS7B,KAAT,EAAgB,SAAhB,EAA2BuB,CAA3B,EAA8BvB,KAA9B;;AACAuB,YAAAA,CAAC,CAACC,cAAF;AACD;AACF;AAVa,OAFyC;AAczDM,MAAAA,GAAG,EAAE7B,OAAO,CAAC6B;AAd4C,KAAtB,CAArC;;AAVqH,qBA2BzExC,SAAS,CAAuBS,SAAS,CAACG,WAAjC,EAA8C;AACjGQ,MAAAA,SAAS,EAAEd,kBADsF;AAEjGmC,MAAAA,gBAAgB,EAAE;AAAA,eAAO;AACvBtB,UAAAA,eAAe,EAAfA;AADuB,SAAP;AAAA,OAF+E;AAKjGuB,MAAAA,sBAAsB,EAAE;AAAA,eAAO;AAC7BtB,UAAAA,SAAS,EAATA,SAD6B;AAE7BC,UAAAA,MAAM,EAANA,MAF6B;AAG7BC,UAAAA,MAAM,EAANA,MAH6B;AAI7BC,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAAA,OALyE;AAWjGiB,MAAAA,GAAG,EAAE7B,OAAO,CAAC6B;AAXoF,KAA9C,CA3BgE;AAAA,QA2B7GG,OA3B6G,cA2B7GA,OA3B6G;AAAA,QA2B5FC,cA3B4F,cA2BpGtB,MA3BoG;;AAyCrH,QAAMuB,OAAO,gBACX,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAE7B;AAAf,OACGY,YAAY,CAACkB,0BAAb,eACC,oBAAC,WAAD,EACMlB,YAAY,CAAC,MAAD;AACdR,MAAAA,SAAS,EAAEuB,OAAO,CAACI;AADL,OAEXrB,cAFW,EADlB,EAMGF,WAAW,GACRN,QADQ,GAERb,GAAG,CAAC2C,MAAJ,CAAWxC,OAAX,EAAoB;AAClByC,MAAAA,YAAY,EAAE;AAAA,eAAO;AAAE7B,UAAAA,SAAS,EAAEb,uBAAuB,CAACC,OAArC;AAA8Cc,UAAAA,MAAM,EAAEsB,cAAc,CAACpC;AAArE,SAAP;AAAA;AADI,KAApB,CARN,CADD,CADH,CADF;AAkBAO,IAAAA,MAAM;AACN,WAAO8B,OAAP;AACD,GA7DM;;AA+DPpC,EAAAA,SAAS,CAACG,WAAV,GAAwB,WAAxB;AAEAH,EAAAA,SAAS,CAACyC,SAAV,qBACKrD,eAAe,CAACsD,YAAhB,CAA6B;AAC9B3C,IAAAA,OAAO,EAAE;AADqB,GAA7B,CADL;AAIEA,IAAAA,OAAO,EAAEjB,eAAe,CAAC6D,KAAhB,CAAsB,CAC7B7D,eAAe,CAAC8D,QAAhB,CAAyB,CAAC,UAAD,CAAzB,CAD6B,EAE7B3D,SAAS,CAAC4D,SAAV,CAAoB,CAAC5D,SAAS,CAAC6D,OAAV,CAAkBhE,eAAe,CAACiE,WAAlC,CAAD,EAAiDjE,eAAe,CAACiE,WAAjE,CAApB,CAF6B,CAAtB,CAJX;AAQErC,IAAAA,eAAe,EAAEzB,SAAS,CAAC+D;AAR7B;AAWAhD,EAAAA,SAAS,CAACkB,YAAV,GAAyB+B,MAAM,CAACC,IAAP,CAAYlD,SAAS,CAACyC,SAAtB,CAAzB;AAEAzC,EAAAA,SAAS,CAACwC,YAAV,GAAyB;AACvBpB,IAAAA,aAAa,EAAErC;AADQ,GAAzB;AAIAiB,EAAAA,SAAS,CAACuC,MAAV,GAAmBlD,sBAAsB,CAAC;AAAE8D,IAAAA,SAAS,EAAEnD,SAAb;AAAwBoD,IAAAA,UAAU,EAAE;AAApC,GAAD,CAAzC;AAlFO,SAAMpD,SAAN;AAAA","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport { Accessibility, tableCellBehavior, TableCellBehaviorProps } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport {\n  childrenExist,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  createShorthandFactory,\n  UIComponentProps,\n} from '../../utils';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  useStyles,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n} from '@fluentui/react-bindings';\n\nimport { Box, BoxProps } from '../Box/Box';\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\n\nexport interface TableCellProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available TableCellBehavior\n   * */\n  accessibility?: Accessibility<TableCellBehaviorProps>;\n\n  /**\n   * Truncate cell's content\n   */\n  truncateContent?: boolean;\n}\n\nexport type TableCellStylesProps = Pick<TableCellProps, 'truncateContent'>;\n\nexport interface TableCellSlotClassNames {\n  content: string;\n}\n\nexport const tableCellClassName = 'ui-table__cell';\nexport const tableCellSlotClassNames: TableCellSlotClassNames = {\n  content: `${tableCellClassName}__content`,\n};\n\n/**\n * Component represents a table cell.\n */\nexport const TableCell: ComponentWithAs<'div', TableCellProps> & FluentComponentStaticProps<TableCellProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TableCell.displayName, context.telemetry);\n  setStart();\n  const cellRef = React.useRef<HTMLElement>();\n\n  const { children, content, truncateContent, className, design, styles, variables } = props;\n  const hasChildren = childrenExist(children);\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TableCell.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: TableCell.displayName,\n    actionHandlers: {\n      focusCell: e => {\n        e.preventDefault();\n        cellRef.current.focus();\n      },\n      performClick: e => {\n        if (e.currentTarget === e.target) {\n          _.invoke(props, 'onClick', e, props);\n          e.preventDefault();\n        }\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<TableCellStylesProps>(TableCell.displayName, {\n    className: tableCellClassName,\n    mapPropsToStyles: () => ({\n      truncateContent,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <Ref innerRef={cellRef}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            ...unhandledProps,\n          })}\n        >\n          {hasChildren\n            ? children\n            : Box.create(content, {\n                defaultProps: () => ({ className: tableCellSlotClassNames.content, styles: resolvedStyles.content }),\n              })}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n  return element;\n};\n\nTableCell.displayName = 'TableCell';\n\nTableCell.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  content: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(customPropTypes.nodeContent), customPropTypes.nodeContent]),\n  ]),\n  truncateContent: PropTypes.bool,\n};\n\nTableCell.handledProps = Object.keys(TableCell.propTypes) as any;\n\nTableCell.defaultProps = {\n  accessibility: tableCellBehavior,\n};\n\nTableCell.create = createShorthandFactory({ Component: TableCell, mappedProp: 'content' });\n"],"file":"TableCell.js"}