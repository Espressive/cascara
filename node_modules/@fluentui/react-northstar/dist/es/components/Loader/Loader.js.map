{"version":3,"sources":["components/Loader/Loader.tsx"],"names":["loaderBehavior","customPropTypes","useTelemetry","useFluentContext","getElementType","useUnhandledProps","useStyles","useAccessibility","PropTypes","React","createShorthandFactory","commonPropTypes","getOrGenerateIdFromShorthand","Box","Text","loaderClassName","loaderSlotClassNames","indicator","label","svg","Loader","props","context","displayName","telemetry","setStart","setEnd","delay","inline","labelPosition","className","design","styles","variables","size","ElementType","unhandledProps","handledProps","delayTimer","useRef","useState","visible","setVisible","labelId","current","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","resolvedStyles","getA11yProps","accessibility","debugName","mapPropsToBehavior","useEffect","setTimeout","clearTimeout","svgElement","create","defaultProps","element","root","children","id","propTypes","createCommon","content","number","itemShorthand","bool","oneOf","Object","keys","Component","mappedProp","shorthandConfig"],"mappings":"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","sourcesContent":["import { Accessibility, loaderBehavior, LoaderBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport {\n  ComponentWithAs,\n  ShorthandConfig,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useStyles,\n  useAccessibility,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  SizeValue,\n  getOrGenerateIdFromShorthand,\n} from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Text, TextProps } from '../Text/Text';\n\nexport interface LoaderSlotClassNames {\n  indicator: string;\n  label: string;\n  svg: string;\n}\n\nexport interface LoaderProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<LoaderBehaviorProps>;\n\n  /** Time in milliseconds after component mount before spinner is visible. */\n  delay?: number;\n\n  /** A loader can contain an indicator. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** Loaders can appear inline with content. */\n  inline?: boolean;\n\n  /** A loader can contain a label. */\n  label?: ShorthandValue<TextProps>;\n\n  /** A label in the loader can have different positions. */\n  labelPosition?: 'above' | 'below' | 'start' | 'end';\n\n  /** A size of the loader. */\n  size?: SizeValue;\n\n  /** A loader can contain a custom svg element. */\n  svg?: ShorthandValue<BoxProps>;\n}\n\nexport interface LoaderState {\n  visible: boolean;\n  labelId: string;\n}\n\nexport const loaderClassName = 'ui-loader';\nexport const loaderSlotClassNames: LoaderSlotClassNames = {\n  indicator: `${loaderClassName}__indicator`,\n  label: `${loaderClassName}__label`,\n  svg: `${loaderClassName}__svg`,\n};\n\nexport type LoaderStylesProps = Pick<LoaderProps, 'inline' | 'labelPosition' | 'size'>;\n\n/**\n * A loader alerts a user that content is being loaded or processed and they should wait for the activity to complete.\n *\n * @accessibility\n * Implements [ARIA progressbar](https://www.w3.org/TR/wai-aria-1.1/#progressbar) role.\n */\nexport const Loader: ComponentWithAs<'div', LoaderProps> &\n  FluentComponentStaticProps<LoaderProps> & {\n    shorthandConfig: ShorthandConfig<LoaderProps>;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Loader.displayName, context.telemetry);\n  setStart();\n  const { delay, label, indicator, svg, inline, labelPosition, className, design, styles, variables, size } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Loader.handledProps, props);\n\n  const delayTimer = React.useRef<number>();\n  const [visible, setVisible] = React.useState(props.delay === 0);\n\n  const labelId = React.useRef<string>();\n  labelId.current = getOrGenerateIdFromShorthand('loader-label-', label, labelId.current);\n\n  const { classes, styles: resolvedStyles } = useStyles<LoaderStylesProps>(Loader.displayName, {\n    className: loaderClassName,\n    mapPropsToStyles: () => ({\n      inline,\n      labelPosition,\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<LoaderBehaviorProps>(props.accessibility, {\n    debugName: Loader.displayName,\n    mapPropsToBehavior: () => ({\n      labelId: labelId.current,\n    }),\n    rtl: context.rtl,\n  });\n\n  React.useEffect(() => {\n    if (delay > 0) {\n      // @ts-ignore We have a collision between types from DOM and @types/node\n      delayTimer.current = setTimeout(() => {\n        setVisible(true);\n      }, delay);\n    }\n\n    return () => clearTimeout(delayTimer.current);\n  }, [delay]);\n\n  const svgElement = Box.create(svg, {\n    defaultProps: () => ({ className: loaderSlotClassNames.svg, styles: resolvedStyles.svg }),\n  });\n\n  const element = visible && (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {Box.create(indicator, {\n        defaultProps: () =>\n          getA11yProps('indicator', {\n            children: svgElement,\n            className: loaderSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n      })}\n      {Text.create(label, {\n        defaultProps: () =>\n          getA11yProps('label', {\n            className: loaderSlotClassNames.label,\n            styles: resolvedStyles.label,\n            id: labelId.current,\n          }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nLoader.displayName = 'Loader';\n\nLoader.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  delay: PropTypes.number,\n  indicator: customPropTypes.itemShorthand,\n  inline: PropTypes.bool,\n  label: customPropTypes.itemShorthand,\n  labelPosition: PropTypes.oneOf(['above', 'below', 'start', 'end']),\n  size: customPropTypes.size,\n  svg: customPropTypes.itemShorthand,\n};\n\nLoader.defaultProps = {\n  accessibility: loaderBehavior,\n  delay: 0,\n  indicator: {},\n  labelPosition: 'below',\n  svg: '',\n  size: 'medium',\n};\n\nLoader.handledProps = Object.keys(Loader.propTypes) as any;\n\nLoader.create = createShorthandFactory({ Component: Loader, mappedProp: 'label' });\n\nLoader.shorthandConfig = { mappedProp: 'label' };\n"],"file":"Loader.js"}