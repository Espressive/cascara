{"version":3,"sources":["components/Chat/ChatItem.tsx"],"names":["getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","customPropTypes","PropTypes","React","childrenExist","commonPropTypes","createShorthandFactory","rtlTextContainer","Box","useChatDensityContext","ChatItemContextProvider","chatItemClassName","chatItemSlotClassNames","message","gutter","ChatItem","props","context","displayName","telemetry","setStart","setEnd","chatDensity","accessibility","attached","children","className","contentPosition","density","design","styles","variables","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","renderContent","gutterElement","create","defaultProps","messageElement","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","as","propTypes","createCommon","content","oneOfType","bool","oneOf","itemShorthand","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport {\n  ChildrenComponentProps,\n  childrenExist,\n  commonPropTypes,\n  createShorthandFactory,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ChatDensity, useChatDensityContext } from './chatDensityContext';\nimport { ChatItemContextProvider } from './chatItemContext';\n\nexport interface ChatItemSlotClassNames {\n  message: string;\n  gutter: string;\n}\n\nexport const chatItemClassName = 'ui-chat__item';\nexport const chatItemSlotClassNames: ChatItemSlotClassNames = {\n  message: `${chatItemClassName}__message`,\n  gutter: `${chatItemClassName}__gutter`,\n};\n\nexport interface ChatItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /** Controls item's relation to other chat items. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Indicates whether the content is positioned at the start or the end. */\n  contentPosition?: 'start' | 'end';\n\n  /** Chat density. Is automatically set by the Chat. */\n  density?: ChatDensity;\n\n  /** Chat items can have a gutter. */\n  gutter?: ShorthandValue<BoxProps>;\n\n  /** Chat items can have a message. */\n  message?: ShorthandValue<BoxProps>;\n}\n\nexport type ChatItemStylesProps = Pick<ChatItemProps, 'attached' | 'contentPosition' | 'density'>;\n\n/**\n * A ChatItem is container for single entity in Chat (e.g. message, notification, etc).\n */\nexport const ChatItem: ComponentWithAs<'li', ChatItemProps> & FluentComponentStaticProps<ChatItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ChatItem.displayName, context.telemetry);\n  setStart();\n\n  const chatDensity = useChatDensityContext();\n  const {\n    accessibility,\n    attached,\n    children,\n    className,\n    contentPosition,\n    density = chatDensity,\n    design,\n    gutter,\n    message,\n    styles,\n    variables,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: ChatItem.displayName,\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ChatItemStylesProps>(ChatItem.displayName, {\n    className: chatItemClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      contentPosition,\n      density,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const renderContent = () => {\n    const gutterElement = Box.create(gutter, {\n      defaultProps: () =>\n        getA11Props('gutter', {\n          className: chatItemSlotClassNames.gutter,\n          styles: resolvedStyles.gutter,\n        }),\n    });\n    const messageElement = Box.create(message, {\n      defaultProps: () =>\n        getA11Props('message', {\n          className: chatItemSlotClassNames.message,\n          styles: resolvedStyles.message,\n        }),\n    });\n\n    return (\n      <ChatItemContextProvider value={{ attached }}>\n        {(contentPosition === 'start' || density === 'compact') && gutterElement}\n        {messageElement}\n        {contentPosition === 'end' && density === 'comfy' && gutterElement}\n      </ChatItemContextProvider>\n    );\n  };\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatItem.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nChatItem.displayName = 'ChatItem';\n\nChatItem.defaultProps = {\n  as: 'li',\n  contentPosition: 'start',\n  attached: false,\n};\nChatItem.propTypes = {\n  ...commonPropTypes.createCommon({ content: false }),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  contentPosition: PropTypes.oneOf(['start', 'end']),\n  density: PropTypes.oneOf<ChatDensity>(['comfy', 'compact']),\n  gutter: customPropTypes.itemShorthand,\n  message: customPropTypes.itemShorthand,\n};\nChatItem.handledProps = Object.keys(ChatItem.propTypes) as any;\n\nChatItem.create = createShorthandFactory({ Component: ChatItem, mappedProp: 'message' });\n"],"file":"ChatItem.js"}