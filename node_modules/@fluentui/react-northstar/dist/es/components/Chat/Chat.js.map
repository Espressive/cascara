{"version":3,"sources":["components/Chat/Chat.tsx"],"names":["chatBehavior","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","customPropTypes","PropTypes","React","childrenExist","commonPropTypes","createShorthandFactory","rtlTextContainer","ChatDensityContextProvider","defaultChatDensity","ChatItem","ChatMessage","ChatMessageDetails","ChatMessageHeader","ChatMessageReadStatus","chatClassName","chatSlotClassNames","item","Chat","props","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","density","design","items","styles","variables","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","unstable_wrapWithFocusZone","root","getAttributes","forElements","create","defaultProps","as","propTypes","createCommon","content","arrayOf","itemShorthand","oneOf","Object","keys","Item","Message","MessageHeader","MessageDetails","MessageReadStatus","Component"],"mappings":"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","sourcesContent":["import { Accessibility, chatBehavior, ChatBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps, ShorthandCollection } from '../../types';\nimport {\n  ChildrenComponentProps,\n  childrenExist,\n  commonPropTypes,\n  createShorthandFactory,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport { ChatDensity, ChatDensityContextProvider, defaultChatDensity } from './chatDensityContext';\nimport { ChatItem, ChatItemProps } from './ChatItem';\nimport { ChatMessage } from './ChatMessage';\nimport { ChatMessageDetails } from './ChatMessageDetails';\nimport { ChatMessageHeader } from './ChatMessageHeader';\nimport { ChatMessageReadStatus } from './ChatMessageReadStatus';\n\nexport interface ChatSlotClassNames {\n  item: string;\n}\n\nexport interface ChatProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatBehaviorProps>;\n\n  /** Chat density. */\n  density?: ChatDensity;\n\n  /** Shorthand array of the items inside the chat. */\n  items?: ShorthandCollection<ChatItemProps>;\n}\n\nexport type ChatStylesProps = Pick<ChatProps, 'density'>;\nexport const chatClassName = 'ui-chat';\nexport const chatSlotClassNames: ChatSlotClassNames = {\n  item: `${chatClassName}__item`,\n};\n\n/**\n * A Chat displays messages from a conversation between multiple users.\n */\nexport const Chat: ComponentWithAs<'ul', ChatProps> &\n  FluentComponentStaticProps<ChatProps> & {\n    Item: typeof ChatItem;\n    Message: typeof ChatMessage;\n    MessageDetails: typeof ChatMessageDetails;\n    MessageReadStatus: typeof ChatMessageReadStatus;\n    MessageHeader: typeof ChatMessageHeader;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Chat.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, density, design, items, styles, variables } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Chat.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<ChatStylesProps>(Chat.displayName, {\n    className: chatClassName,\n    mapPropsToStyles: () => ({ density }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Chat.handledProps, props);\n\n  const element = getA11Props.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      <ChatDensityContextProvider value={density}>\n        {childrenExist(children)\n          ? children\n          : _.map(items, item =>\n              ChatItem.create(item, {\n                defaultProps: () => ({ className: chatSlotClassNames.item }),\n              }),\n            )}\n      </ChatDensityContextProvider>\n    </ElementType>,\n  );\n  setEnd();\n\n  return element;\n};\n\nChat.displayName = 'Chat';\n\nChat.defaultProps = {\n  accessibility: chatBehavior,\n  as: 'ul',\n  density: defaultChatDensity,\n};\nChat.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  items: PropTypes.arrayOf(customPropTypes.itemShorthand),\n  density: PropTypes.oneOf<ChatDensity>(['comfy', 'compact']),\n};\nChat.handledProps = Object.keys(Chat.propTypes) as any;\n\nChat.Item = ChatItem;\nChat.Message = ChatMessage;\nChat.MessageHeader = ChatMessageHeader;\nChat.MessageDetails = ChatMessageDetails;\nChat.MessageReadStatus = ChatMessageReadStatus;\n\nChat.create = createShorthandFactory({ Component: Chat });\n"],"file":"Chat.js"}