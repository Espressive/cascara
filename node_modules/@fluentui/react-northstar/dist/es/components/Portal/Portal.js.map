{"version":3,"sources":["components/Portal/Portal.tsx"],"names":["FocusTrapZone","useFluentContext","useTelemetry","useAutoControlled","EventListener","handleRef","Ref","customPropTypes","PropTypes","React","childrenExist","doesNodeContainClick","commonPropTypes","rtlTextContainer","createShorthandFactory","PortalInner","Portal","props","context","displayName","telemetry","setStart","setEnd","children","content","trapFocus","trigger","triggerAccessibility","portalRef","useRef","triggerRef","defaultValue","defaultOpen","value","open","initialValue","setOpen","renderPortal","contentToRender","focusTrapZoneProps","length","handleMount","handleUnmount","getAttributes","forElements","handleDocumentClick","target","renderTrigger","handleTriggerRef","cloneElement","onClick","handleTriggerClick","attributes","keyHandlers","node","current","e","unhandledProps","isOpen","element","propTypes","createCommon","accessibility","as","className","styled","bool","onMount","func","onUnmount","ref","object","onTriggerClick","onOutsideClick","oneOfType","handledProps","Object","keys","create","Component","defaultProps"],"mappings":"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","sourcesContent":["import { AccessibilityAttributes } from '@fluentui/accessibility';\nimport {\n  AccessibilityHandlerProps,\n  FocusTrapZone,\n  FocusTrapZoneProps,\n  useFluentContext,\n  useTelemetry,\n  useAutoControlled,\n} from '@fluentui/react-bindings';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  childrenExist,\n  doesNodeContainClick,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { PortalInner } from './PortalInner';\n\nexport type TriggerAccessibility = {\n  attributes?: AccessibilityAttributes;\n  keyHandlers?: AccessibilityHandlerProps;\n};\n\nexport interface PortalProps extends ChildrenComponentProps, ContentComponentProps {\n  /** Initial value of open. */\n  defaultOpen?: boolean;\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param data - All props.\n   */\n  onMount?: (props: PortalProps) => void;\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param data - All props.\n   */\n  onUnmount?: (props: PortalProps) => void;\n\n  /** Controls whether or not the portal is displayed. */\n  open?: boolean;\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger?: JSX.Element;\n\n  /** Controls whether or not focus trap should be applied, using boolean or FocusTrapZoneProps type value */\n  trapFocus?: FocusTrapZoneProps | boolean;\n\n  /** Accessibility behavior object to apply on trigger node. */\n  triggerAccessibility?: TriggerAccessibility;\n\n  /** Sets trigger node to passed ref. */\n  triggerRef?: React.Ref<any>;\n\n  /**\n   * Called when trigger node was clicked.\n   *\n   * @param data - All props.\n   */\n  onTriggerClick?: (e: React.MouseEvent) => void;\n\n  /**\n   * Called when `click` event was invoked outside portal or trigger nodes.\n   *\n   * @param data - All props.\n   */\n  onOutsideClick?: (e: React.MouseEvent) => void;\n}\n\n/**\n * (DEPRECATED) A Portal allows to render children outside of their parent.\n *\n * @deprecated Please use \"Popup\" or \"Dialog\" components instead.\n */\nexport const Portal: React.FC<PortalProps> & FluentComponentStaticProps<PortalProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Portal.displayName, context.telemetry);\n  setStart();\n  const { children, content, trapFocus, trigger, triggerAccessibility } = props;\n  const portalRef = React.useRef<HTMLElement>();\n  const triggerRef = React.useRef<HTMLElement>();\n\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  const renderPortal = (): JSX.Element | undefined => {\n    const contentToRender = childrenExist(children) ? children : content;\n    const focusTrapZoneProps = (_.keys(trapFocus).length && trapFocus) || {};\n    return (\n      open && (\n        <Ref innerRef={portalRef}>\n          <PortalInner\n            onMount={handleMount}\n            onUnmount={handleUnmount}\n            {...rtlTextContainer.getAttributes({ forElements: [contentToRender] })}\n          >\n            {trapFocus ? <FocusTrapZone {...focusTrapZoneProps}>{contentToRender}</FocusTrapZone> : contentToRender}\n            <EventListener listener={handleDocumentClick} target={context.target} type=\"click\" />\n          </PortalInner>\n        </Ref>\n      )\n    );\n  };\n\n  const renderTrigger = (): JSX.Element | undefined => {\n    return (\n      trigger && (\n        <Ref innerRef={handleTriggerRef}>\n          {React.cloneElement(trigger, {\n            onClick: handleTriggerClick,\n            ...triggerAccessibility.attributes,\n            ...triggerAccessibility.keyHandlers,\n          })}\n        </Ref>\n      )\n    );\n  };\n\n  const handleMount = () => {\n    _.invoke(props, 'onMount', props);\n  };\n\n  const handleUnmount = () => {\n    _.invoke(props, 'onUnmount', props);\n  };\n\n  const handleTriggerRef = (node: HTMLElement) => {\n    triggerRef.current = node;\n    handleRef(props.triggerRef, node);\n  };\n\n  const handleTriggerClick = (e: React.MouseEvent, ...unhandledProps) => {\n    _.invoke(props, 'onTriggerClick', e); // Call handler from parent component\n    _.invoke(trigger, 'props.onClick', e, ...unhandledProps); // Call original event handler\n    setOpen(isOpen => !isOpen);\n  };\n\n  const handleDocumentClick = (e: MouseEvent) => {\n    if (\n      !portalRef || // no portal\n      doesNodeContainClick(triggerRef.current, e, context.target) || // event happened in trigger (delegate to trigger handlers)\n      doesNodeContainClick(portalRef.current, e, context.target) // event happened in the portal\n    ) {\n      return; // ignore the click\n    }\n    _.invoke(props, 'onOutsideClick', e);\n    setOpen(false);\n  };\n\n  const element = (\n    <>\n      {renderPortal()}\n      {renderTrigger()}\n    </>\n  );\n  setEnd();\n  return element;\n};\n\nPortal.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    as: false,\n    className: false,\n    styled: false,\n  }),\n  defaultOpen: PropTypes.bool,\n  onMount: PropTypes.func,\n  onUnmount: PropTypes.func,\n  open: PropTypes.bool,\n  trigger: PropTypes.element,\n  triggerRef: customPropTypes.ref,\n  triggerAccessibility: PropTypes.object,\n  onTriggerClick: PropTypes.func,\n  onOutsideClick: PropTypes.func,\n  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n};\n\nPortal.handledProps = Object.keys(Portal.propTypes) as any;\n\nPortal.create = createShorthandFactory({\n  Component: Portal,\n});\n\nPortal.defaultProps = {\n  triggerAccessibility: {},\n};\n"],"file":"Portal.js"}