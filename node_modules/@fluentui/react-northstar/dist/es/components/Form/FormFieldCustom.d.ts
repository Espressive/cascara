import { Accessibility, FormFieldBehaviorProps } from '@fluentui/accessibility';
import * as React from 'react';
import { UIComponentProps, ChildrenComponentProps } from '../../utils';
import { FluentComponentStaticProps } from '../../types';
export interface FormFieldCustomProps extends UIComponentProps, ChildrenComponentProps {
    /**
     * Accessibility behavior if overridden by the user.
     */
    accessibility?: Accessibility<FormFieldBehaviorProps>;
    /** The HTML input id. This will be set on the control element and will be use for linking it with the label for correct accessibility. */
    id?: string;
    /** A field can have its label next to instead of above it. */
    inline?: boolean;
    /** The HTML input name. */
    name?: string;
    /** A field can show that input is mandatory. */
    required?: boolean;
    /** The HTML input type. */
    type?: string;
}
export declare const formFieldCustomClassName = "ui-form__fieldcustom";
export declare type FormFieldCustomStylesProps = Required<Pick<FormFieldCustomProps, 'type' | 'inline' | 'required'>>;
/**
 * A FormFieldCustom represents a Form element containing a label and an input.
 */
export declare const FormFieldCustom: React.FC<FormFieldCustomProps> & FluentComponentStaticProps<FormFieldCustomProps>;
