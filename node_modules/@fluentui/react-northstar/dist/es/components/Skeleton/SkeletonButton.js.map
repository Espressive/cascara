{"version":3,"sources":["components/Skeleton/SkeletonButton.tsx"],"names":["customPropTypes","PropTypes","compose","commonPropTypes","SkeletonShape","skeletonButtonClassName","SkeletonButton","className","displayName","overrideStyles","shorthandConfig","handledProps","mapPropsToStylesProps","size","fluid","iconOnly","circular","propTypes","createCommon","bool","defaultProps","as"],"mappings":"AAAA,OAAO,KAAKA,eAAZ,MAAiC,2BAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,eAAT,QAA2C,aAA3C;AACA,SAAuDC,aAAvD,QAA4E,iBAA5E;AAoBA,OAAO,IAAMC,uBAAuB,GAAG,qBAAhC;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,cAAN;AAAA,MAAMA,cAAc,GAAGJ,OAAO,CAMnCE,aANmC,EAMpB;AACfG,IAAAA,SAAS,EAAEF,uBADI;AAEfG,IAAAA,WAAW,EAAE,gBAFE;AAGfC,IAAAA,cAAc,EAAE,IAHD;AAIfC,IAAAA,eAAe,EAAE,EAJF;AAKfC,IAAAA,YAAY,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,UAArB,EAAiC,OAAjC,CALC;AAMfC,IAAAA,qBAAqB,EAAE;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,UAASC,KAAT,QAASA,KAAT;AAAA,UAAgBC,QAAhB,QAAgBA,QAAhB;AAAA,UAA0BC,QAA1B,QAA0BA,QAA1B;AAAA,aAA0C;AAC/DH,QAAAA,IAAI,EAAJA,IAD+D;AAE/DC,QAAAA,KAAK,EAALA,KAF+D;AAG/DC,QAAAA,QAAQ,EAARA,QAH+D;AAI/DC,QAAAA,QAAQ,EAARA;AAJ+D,OAA1C;AAAA;AANR,GANoB,CAA9B;AAoBPV,EAAAA,cAAc,CAACW,SAAf,qBACKd,eAAe,CAACe,YAAhB,EADL;AAEEL,IAAAA,IAAI,EAAEb,eAAe,CAACa,IAFxB;AAGEG,IAAAA,QAAQ,EAAEf,SAAS,CAACkB,IAHtB;AAIEJ,IAAAA,QAAQ,EAAEd,SAAS,CAACkB,IAJtB;AAKEL,IAAAA,KAAK,EAAEb,SAAS,CAACkB;AALnB;AAQAb,EAAAA,cAAc,CAACc,YAAf,GAA8B;AAC5BC,IAAAA,EAAE,EAAE,MADwB;AAE5BR,IAAAA,IAAI,EAAE;AAFsB,GAA9B;AA5BO,SAAMP,cAAN;AAAA","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes, SizeValue } from '../../utils';\nimport { SkeletonShapeProps, SkeletonShapeStylesProps, SkeletonShape } from './SkeletonShape';\n\nexport interface SkeletonButtonOwnProps {\n  /** A skeleton button can be sized. */\n  size?: SizeValue;\n\n  /** A skeleton button can fill the width of its container. */\n  fluid?: boolean;\n\n  /** A skeleton button can appear circular. */\n  circular?: boolean;\n\n  /** A skeleton button can contain only an icon. */\n  iconOnly?: boolean;\n}\nexport interface SkeletonButtonProps extends SkeletonButtonOwnProps, SkeletonShapeProps {}\n\nexport type SkeletonButtonStylesProps = Required<\n  Pick<SkeletonButtonOwnProps, 'size' | 'fluid' | 'circular' | 'iconOnly'>\n>;\nexport const skeletonButtonClassName = 'ui-skeleton__button';\n\n/**\n * An SkeletonButton represents a buton component that will be loaded\n */\nexport const SkeletonButton = compose<\n  'span',\n  SkeletonButtonOwnProps,\n  SkeletonButtonStylesProps,\n  SkeletonShapeProps,\n  SkeletonShapeStylesProps\n>(SkeletonShape, {\n  className: skeletonButtonClassName,\n  displayName: 'SkeletonButton',\n  overrideStyles: true,\n  shorthandConfig: {},\n  handledProps: ['size', 'circular', 'iconOnly', 'fluid'],\n  mapPropsToStylesProps: ({ size, fluid, iconOnly, circular }) => ({\n    size,\n    fluid,\n    iconOnly,\n    circular,\n  }),\n});\n\nSkeletonButton.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nSkeletonButton.defaultProps = {\n  as: 'span',\n  size: 'medium',\n};\n"],"file":"SkeletonButton.js"}