import * as React from 'react';
import { pillActionBehavior } from '@fluentui/accessibility';
import { getElementType, useUnhandledProps, useAccessibility, useFluentContext, useStyles, useTelemetry } from '@fluentui/react-bindings';
import { childrenExist, commonPropTypes, rtlTextContainer } from '../../utils';
import { CloseIcon } from '@fluentui/react-icons-northstar';
export var pillActionClassName = 'ui-pill__action';
/**
 * A PillAction allows user to execute an action.
 */

export var PillAction = /*#__PURE__*/function () {
  var PillAction = function PillAction(props) {
    var context = useFluentContext();

    var _useTelemetry = useTelemetry(PillAction.displayName, context.telemetry),
        setStart = _useTelemetry.setStart,
        setEnd = _useTelemetry.setEnd;

    setStart();
    var accessibility = props.accessibility,
        children = props.children,
        className = props.className,
        content = props.content,
        design = props.design,
        styles = props.styles,
        variables = props.variables,
        size = props.size;
    var getA11Props = useAccessibility(accessibility, {
      debugName: PillAction.displayName,
      rtl: context.rtl
    });

    var _useStyles = useStyles(PillAction.displayName, {
      className: pillActionClassName,
      mapPropsToStyles: function mapPropsToStyles() {
        return {
          size: size
        };
      },
      mapPropsToInlineStyles: function mapPropsToInlineStyles() {
        return {
          className: className,
          design: design,
          styles: styles,
          variables: variables
        };
      },
      rtl: context.rtl
    }),
        classes = _useStyles.classes;

    var ElementType = getElementType(props);
    var unhandledProps = useUnhandledProps(PillAction.handledProps, props);
    var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
      className: classes.root
    }, rtlTextContainer.getAttributes({
      forElements: [children]
    }), unhandledProps)), childrenExist(children) ? children : content);
    setEnd();
    return element;
  };

  PillAction.displayName = 'PillAction';
  PillAction.propTypes = Object.assign({}, commonPropTypes.createCommon());
  PillAction.handledProps = Object.keys(PillAction.propTypes);
  PillAction.defaultProps = {
    accessibility: pillActionBehavior,
    content: /*#__PURE__*/React.createElement(CloseIcon, null)
  };
  PillAction.shorthandConfig = {
    mappedProp: 'content'
  };
  return PillAction;
}();
//# sourceMappingURL=PillAction.js.map
