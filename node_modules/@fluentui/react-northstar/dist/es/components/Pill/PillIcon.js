import * as React from 'react';
import { pillIconBehavior } from '@fluentui/accessibility';
import * as PropTypes from 'prop-types';
import * as customPropTypes from '@fluentui/react-proptypes';
import { getElementType, useUnhandledProps, useAccessibility, useFluentContext, useStyles, useTelemetry } from '@fluentui/react-bindings';
import { childrenExist, commonPropTypes, rtlTextContainer } from '../../utils';
export var pillIconClassName = 'ui-pill__icon';
/**
 * A PillIcon allows user set an icon.
 */

export var PillIcon = /*#__PURE__*/function () {
  var PillIcon = function PillIcon(props) {
    var context = useFluentContext();

    var _useTelemetry = useTelemetry(PillIcon.displayName, context.telemetry),
        setStart = _useTelemetry.setStart,
        setEnd = _useTelemetry.setEnd;

    setStart();
    var accessibility = props.accessibility,
        children = props.children,
        className = props.className,
        content = props.content,
        design = props.design,
        styles = props.styles,
        variables = props.variables,
        size = props.size,
        selectable = props.selectable,
        image = props.image;
    var getA11Props = useAccessibility(accessibility, {
      debugName: PillIcon.displayName,
      rtl: context.rtl
    });

    var _useStyles = useStyles(PillIcon.displayName, {
      className: pillIconClassName,
      mapPropsToStyles: function mapPropsToStyles() {
        return {
          size: size,
          selectable: selectable,
          hasImage: !!image
        };
      },
      mapPropsToInlineStyles: function mapPropsToInlineStyles() {
        return {
          className: className,
          design: design,
          styles: styles,
          variables: variables
        };
      },
      rtl: context.rtl
    }),
        classes = _useStyles.classes;

    var ElementType = getElementType(props);
    var unhandledProps = useUnhandledProps(PillIcon.handledProps, props);
    var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
      className: classes.root
    }, rtlTextContainer.getAttributes({
      forElements: [children]
    }), unhandledProps)), childrenExist(children) ? children : content);
    setEnd();
    return element;
  };

  PillIcon.defaultProps = {
    accessibility: pillIconBehavior,
    as: 'span'
  };
  PillIcon.displayName = 'PillIcon';
  PillIcon.propTypes = Object.assign({}, commonPropTypes.createCommon(), {
    selectable: PropTypes.bool,
    size: PropTypes.oneOf(['small', 'smaller', 'medium']),
    image: customPropTypes.shorthandAllowingChildren
  });
  PillIcon.handledProps = Object.keys(PillIcon.propTypes);
  PillIcon.shorthandConfig = {
    mappedProp: 'content'
  };
  return PillIcon;
}();
//# sourceMappingURL=PillIcon.js.map
