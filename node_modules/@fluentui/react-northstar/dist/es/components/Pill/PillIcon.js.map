{"version":3,"sources":["components/Pill/PillIcon.tsx"],"names":["React","pillIconBehavior","PropTypes","customPropTypes","getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","childrenExist","commonPropTypes","rtlTextContainer","pillIconClassName","PillIcon","props","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","styles","variables","size","selectable","image","getA11Props","debugName","rtl","mapPropsToStyles","hasImage","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","defaultProps","as","propTypes","createCommon","bool","oneOf","shorthandAllowingChildren","Object","keys","shorthandConfig","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Accessibility, pillIconBehavior } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\nimport { FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { PillImageProps } from './PillImage';\n\nexport interface PillIconProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * A Pill Icon can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n\n  /**\n   * A Pill Icon can represent selection state\n   */\n  selectable?: boolean;\n\n  /**\n   * A PillImage shorthand for the image slot.\n   */\n  image?: ShorthandValue<PillImageProps>;\n}\n\nexport type PillIconStylesProps = Required<Pick<PillIconProps, 'size' | 'selectable'>> & {\n  hasImage: boolean;\n};\nexport const pillIconClassName = 'ui-pill__icon';\n\n/**\n * A PillIcon allows user set an icon.\n */\nexport const PillIcon: ComponentWithAs<'span', PillIconProps> & FluentComponentStaticProps<PillIconProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PillIcon.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, content, design, styles, variables, size, selectable, image } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: PillIcon.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillIconStylesProps>(PillIcon.displayName, {\n    className: pillIconClassName,\n    mapPropsToStyles: () => ({ size, selectable, hasImage: !!image }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PillIcon.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nPillIcon.defaultProps = {\n  accessibility: pillIconBehavior,\n  as: 'span',\n};\n\nPillIcon.displayName = 'PillIcon';\n\nPillIcon.propTypes = {\n  ...commonPropTypes.createCommon(),\n  selectable: PropTypes.bool,\n  size: PropTypes.oneOf(['small', 'smaller', 'medium']),\n  image: customPropTypes.shorthandAllowingChildren,\n};\n\nPillIcon.handledProps = Object.keys(PillIcon.propTypes) as any;\n\nPillIcon.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"PillIcon.js"}