{"version":3,"sources":["components/Tree/TreeItem.tsx"],"names":["treeItemBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","useFluentContext","customPropTypes","PropTypes","React","handleRef","Ref","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","shouldPreventDefaultOnKeyDown","TreeTitle","TreeContext","treeItemClassName","TreeItem","props","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","contentRef","design","title","renderItemTitle","expanded","level","index","styles","variables","treeSize","selectionIndicator","selectable","id","parent","useContext","getItemById","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","selected","hasSubtree","childrenIds","getA11Props","actionHandlers","performClick","e","preventDefault","stopPropagation","focusParent","handleFocusParent","collapse","expand","focusFirstChild","handleFocusFirstChild","handleSiblingsExpand","performSelection","handleSelection","debugName","mapPropsToBehavior","indeterminate","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","handleTitleOverrides","predefinedProps","onClick","titleProps","handleClick","target","currentTarget","handleKeyDown","key","length","match","toFocusID","ref","useCallback","node","ElementType","unhandledProps","handledProps","element","root","onKeyDown","getAttributes","forElements","create","defaultProps","as","render","overrideProps","elementWithRef","propTypes","createCommon","content","string","isRequired","number","items","collectionShorthand","onFocusFirstChild","func","onFocusParent","onTitleClick","onSiblingsExpand","bool","itemShorthand","shorthandAllowingChildren","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, treeItemBehavior, TreeItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ComponentKeyboardEventHandler,\n} from '../../types';\nimport { TreeTitle, TreeTitleProps } from './TreeTitle';\nimport { BoxProps } from '../Box/Box';\nimport { TreeContext } from './context';\n\nexport interface TreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeItemBehaviorProps>;\n\n  /** Ref for the item DOM element. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /** Id needed to identify this item inside the Tree. */\n  id: string;\n\n  /** The index of the item among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandCollection<TreeItemProps>;\n\n  /** Level of the tree/subtree that contains this item. */\n  level?: number;\n\n  /** Called when the item's first child is about to be focused. */\n  onFocusFirstChild?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's parent is about to be focused. */\n  onFocusParent?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<TreeItemProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's siblings are about to be expanded. */\n  onSiblingsExpand?: ComponentEventHandler<TreeItemProps>;\n\n  /** Whether or not the item is in the expanded state. Only makes sense if item has children items. If set to true, item is initialy expanded. */\n  expanded?: boolean;\n\n  /** The id of the parent tree item, if any. */\n  parent?: string;\n\n  /**\n   * A custom render iterator for rendering each tree title.\n   * The default component, props, and children are available for each tree title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /** Size of the tree/subtree that contains this item. */\n  treeSize?: number;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<TreeTitleProps>;\n\n  /** Whether or not the item can be selectable. */\n  selectable?: boolean;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /**\n   * Called on item key down.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<TreeItemProps>;\n}\n\nexport type TreeItemStylesProps = Required<Pick<TreeItemProps, 'level'>> & {\n  selectable?: boolean;\n};\nexport const treeItemClassName = 'ui-tree__item';\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport const TreeItem: ComponentWithAs<'div', TreeItemProps> & FluentComponentStaticProps<TreeItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    contentRef,\n    design,\n    title,\n    renderItemTitle,\n    expanded,\n    level,\n    index,\n    styles,\n    variables,\n    treeSize,\n    selectionIndicator,\n    selectable,\n    id,\n    parent,\n  } = props;\n\n  const {\n    getItemById,\n    registerItemRef,\n    toggleItemActive,\n    focusItemById,\n    expandSiblings,\n    toggleItemSelect,\n    getToFocusIDByFirstCharacter,\n  } = React.useContext(TreeContext);\n\n  const { selected, hasSubtree, childrenIds } = getItemById(id);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        toggleItemActive(e, id);\n        _.invoke(props, 'onTitleClick', e, props);\n      },\n      focusParent: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusParent(e);\n      },\n      collapse: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      expand: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      focusFirstChild: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusFirstChild(e);\n      },\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleSiblingsExpand(e);\n      },\n      performSelection: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        handleSelection(e);\n      },\n    },\n    debugName: TreeItem.displayName,\n    mapPropsToBehavior: () => ({\n      expanded,\n      level,\n      index,\n      hasSubtree,\n      treeSize,\n      selected: selected === true,\n      selectable,\n      indeterminate: selected === 'indeterminate',\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TreeItemStylesProps>(TreeItem.displayName, {\n    className: treeItemClassName,\n    mapPropsToStyles: () => ({\n      level,\n      selectable,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const handleSelection = e => {\n    if (selectable) {\n      toggleItemSelect(e, id);\n    }\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n\n  const handleFocusFirstChild = e => {\n    _.invoke(props, 'onFocusFirstChild', e, props);\n    focusItemById(childrenIds?.[0]);\n  };\n\n  const handleFocusParent = e => {\n    _.invoke(props, 'onFocusParent', e, props);\n    focusItemById(parent);\n  };\n\n  const handleSiblingsExpand = e => {\n    _.invoke(props, 'onSiblingsExpand', e, props);\n    expandSiblings(e, props.id);\n  };\n\n  const handleTitleOverrides = (predefinedProps: TreeTitleProps) => ({\n    id,\n    onClick: (e, titleProps) => {\n      _.invoke(props, 'onTitleClick', e, props);\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (e.target === e.currentTarget) {\n      // onClick listener for mouse click on treeItem DOM only,\n      // which could be triggered by VO+space on selectable tree parent node\n      handleSelection(e);\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key && e.key.length === 1 && e.key.match(/\\S/) && e.key !== '*') {\n      e.preventDefault();\n      e.stopPropagation();\n      const toFocusID = getToFocusIDByFirstCharacter(e, props.id);\n      if (toFocusID !== props.id) {\n        focusItemById(toFocusID);\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const ref = React.useCallback(\n    node => {\n      registerItemRef(id, node);\n      handleRef(contentRef, node);\n    },\n    [id, contentRef, registerItemRef],\n  );\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeItem.handledProps, props);\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        id,\n        selected: selected === true,\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children)\n        ? children\n        : TreeTitle.create(title, {\n            defaultProps: () =>\n              getA11Props('title', {\n                hasSubtree,\n                as: hasSubtree ? 'span' : 'a',\n                level,\n                treeSize,\n                expanded,\n                index,\n                selected: selected === true,\n                selectable,\n                parent,\n                ...(hasSubtree && {\n                  indeterminate: selected === 'indeterminate',\n                }),\n                selectionIndicator,\n              }),\n            render: renderItemTitle,\n            overrideProps: handleTitleOverrides,\n          })}\n    </ElementType>\n  );\n\n  const elementWithRef = <Ref innerRef={ref}>{element}</Ref>;\n  setEnd();\n\n  return elementWithRef;\n};\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentRef: customPropTypes.ref,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  level: PropTypes.number,\n  onFocusFirstChild: PropTypes.func,\n  onFocusParent: PropTypes.func,\n  onTitleClick: PropTypes.func,\n  onSiblingsExpand: PropTypes.func,\n  expanded: PropTypes.bool,\n  parent: PropTypes.string,\n  renderItemTitle: PropTypes.func,\n  treeSize: PropTypes.number,\n  title: customPropTypes.itemShorthand,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  selectable: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n};\n\nTreeItem.defaultProps = {\n  accessibility: treeItemBehavior,\n  selectable: true,\n};\n\nTreeItem.handledProps = Object.keys(TreeItem.propTypes) as any;\n\nTreeItem.create = createShorthandFactory({\n  Component: TreeItem,\n  mappedProp: 'title',\n});\n"],"file":"TreeItem.js"}