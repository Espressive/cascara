{"version":3,"sources":["components/Tree/context.ts"],"names":["React","TreeContext","createContext","getItemById","id","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","e"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAcA,OAAO,IAAMC,WAAW,gBAAGD,KAAK,CAACE,aAAN,CAA4C;AACrEC,EAAAA,WAAW,EAAE,qBAAAC,EAAE;AAAA,WAAK;AAAEA,MAAAA,EAAE,EAAFA;AAAF,KAAL;AAAA,GADsD;AAErEC,EAAAA,eAAe,OAFsD;AAGrEC,EAAAA,gBAAgB,OAHqD;AAIrEC,EAAAA,aAAa,OAJwD;AAKrEC,EAAAA,cAAc,OALuD;AAMrEC,EAAAA,gBAAgB,OANqD;AAOrEC,EAAAA,4BAA4B,EAAE,sCAACC,CAAD,EAAIP,EAAJ;AAAA,WAAWA,EAAX;AAAA;AAPuC,CAA5C,CAApB","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { FlatTreeItem } from './hooks/flattenTree';\n\nexport interface TreeRenderContextValue {\n  getItemById: (id: string) => FlatTreeItem & { [key: string]: any };\n  registerItemRef: (id: string, node: HTMLElement) => void;\n  toggleItemActive: (e: React.SyntheticEvent, idToToggle: string) => void;\n  focusItemById: (id: string) => void;\n  expandSiblings: (e: React.SyntheticEvent, id: string) => void;\n  toggleItemSelect: (e: React.SyntheticEvent, idToToggle: string) => void;\n  getToFocusIDByFirstCharacter: (e: React.KeyboardEvent, idToStartSearch: string) => string;\n}\n\nexport const TreeContext = React.createContext<TreeRenderContextValue>({\n  getItemById: id => ({ id } as any),\n  registerItemRef: _.noop,\n  toggleItemActive: _.noop,\n  focusItemById: _.noop,\n  expandSiblings: _.noop,\n  toggleItemSelect: _.noop,\n  getToFocusIDByFirstCharacter: (e, id) => id,\n});\n"],"file":"context.js"}