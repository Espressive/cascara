{"version":3,"sources":["components/Menu/MenuDivider.tsx"],"names":["menuDividerBehavior","getElementType","mergeVariablesOverrides","useFluentContext","useAccessibility","useTelemetry","useStyles","useUnhandledProps","useContextSelectors","PropTypes","React","createShorthandFactory","commonPropTypes","childrenExist","rtlTextContainer","MenuContext","menuDividerClassName","MenuDivider","forwardRef","inputProps","ref","context","displayName","telemetry","setStart","setEnd","parentProps","variables","v","slotProps","divider","accessibility","behaviors","props","children","content","vertical","inSubmenu","pills","pointing","primary","className","design","styles","secondary","getA11yProps","debugName","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","unstable_props","classes","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","defaultProps","as","propTypes","createCommon","bool","oneOf","Object","keys","shorthandConfig","mappedProp","create","Component"],"mappings":"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","sourcesContent":["import { Accessibility, MenuDividerBehaviorProps, menuDividerBehavior } from '@fluentui/accessibility';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  mergeVariablesOverrides,\n  useFluentContext,\n  useAccessibility,\n  useTelemetry,\n  useStyles,\n  useUnhandledProps,\n  useContextSelectors,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  childrenExist,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport { MenuContext, MenuDividerSubscribedValue } from './menuContext';\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface MenuDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<MenuDividerBehaviorProps>;\n\n  inSubmenu?: boolean;\n  secondary?: boolean;\n  pills?: boolean;\n  pointing?: boolean | 'start' | 'end';\n  primary?: boolean;\n  vertical?: boolean;\n}\n\nexport type MenuDividerStylesProps = Required<\n  Pick<MenuDividerProps, 'vertical' | 'inSubmenu' | 'pills' | 'primary' | 'pointing' | 'secondary'>\n> & {\n  hasContent: boolean;\n};\n\nexport const menuDividerClassName = 'ui-menu__divider';\n\n/**\n * A MenuDivider is non-actionable element that visually segments items of Menu.\n */\nexport const MenuDivider = (React.forwardRef<HTMLLIElement, MenuDividerProps>((inputProps, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(MenuDivider.displayName, context.telemetry);\n  setStart();\n\n  const parentProps = (useContextSelectors(MenuContext, {\n    variables: v => v.variables,\n    slotProps: v => v.slotProps.divider,\n    accessibility: v => v.behaviors.divider,\n  }) as unknown) as MenuDividerSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n  const props = {\n    ...parentProps.slotProps,\n    accessibility: parentProps.accessibility,\n    variables: parentProps.variables,\n    ...inputProps,\n  };\n\n  const {\n    accessibility = menuDividerBehavior,\n    children,\n    content,\n    vertical,\n    inSubmenu,\n    pills,\n    pointing,\n    primary,\n    className,\n    design,\n    styles,\n    secondary,\n    variables,\n  } = props;\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: MenuDivider.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<MenuDividerStylesProps>(MenuDivider.displayName, {\n    className: menuDividerClassName,\n    mapPropsToStyles: () => ({\n      hasContent: !!content || !!children,\n      pills,\n      pointing,\n      vertical,\n      inSubmenu,\n      primary,\n      secondary,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables: mergeVariablesOverrides(variables, parentProps.variables),\n    }),\n    rtl: context.rtl,\n    unstable_props: props,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(MenuDivider.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n        ref,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'li', HTMLLIElement, MenuDividerProps> &\n  FluentComponentStaticProps<MenuDividerProps>;\n\nMenuDivider.defaultProps = {\n  as: 'li',\n};\n\nMenuDivider.displayName = 'MenuDivider';\n\nMenuDivider.propTypes = {\n  ...commonPropTypes.createCommon(),\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool,\n  pointing: PropTypes.oneOf(['start', 'end', true, false]),\n};\n\nMenuDivider.handledProps = Object.keys(MenuDivider.propTypes) as any;\n\nMenuDivider.shorthandConfig = {\n  mappedProp: 'content',\n};\n\nMenuDivider.create = createShorthandFactory({ Component: MenuDivider, mappedProp: 'content' });\n"],"file":"MenuDivider.js"}