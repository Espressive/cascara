{"version":3,"sources":["components/Datepicker/validateDate.tsx"],"names":["isRestrictedDate","validateDate","futureSelectedDate","futureFormattedDate","calendarOptions","dateFormatting","required","isNaN","getTime","isOutOfBoundsErrorMessage","invalidInputErrorMessage","isRequiredErrorMessage"],"mappings":"AAAA,SAASA,gBAAT,QAA4E,iCAA5E;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAC1BC,kBAD0B,EAE1BC,mBAF0B,EAG1BC,eAH0B,EAI1BC,cAJ0B,EAK1BC,QAL0B,EAMf;AACX,MAAIJ,kBAAkB,IAAI,CAACK,KAAK,CAACL,kBAAkB,CAACM,OAAnB,EAAD,CAAhC,EAAgE;AAC9D,QAAIR,gBAAgB,CAACE,kBAAD,EAAqBE,eAArB,CAApB,EAA2D;AACzD,aAAOC,cAAc,CAACI,yBAAtB;AACD;AACF,GAJD,MAIO,IAAIN,mBAAJ,EAAyB;AAC9B,WAAOE,cAAc,CAACK,wBAAtB;AACD,GAFM,MAEA,IAAIJ,QAAQ,IAAI,CAACJ,kBAAjB,EAAqC;AAC1C,WAAOG,cAAc,CAACM,sBAAtB;AACD;;AACD,SAAO,EAAP;AACD,CAjBM","sourcesContent":["import { isRestrictedDate, IRestrictedDatesOptions, ICalendarStrings } from '../../utils/date-time-utilities';\n\nexport const validateDate = (\n  futureSelectedDate: Date,\n  futureFormattedDate: string,\n  calendarOptions: IRestrictedDatesOptions,\n  dateFormatting: ICalendarStrings,\n  required: boolean,\n): string => {\n  if (futureSelectedDate && !isNaN(futureSelectedDate.getTime())) {\n    if (isRestrictedDate(futureSelectedDate, calendarOptions)) {\n      return dateFormatting.isOutOfBoundsErrorMessage;\n    }\n  } else if (futureFormattedDate) {\n    return dateFormatting.invalidInputErrorMessage;\n  } else if (required && !futureSelectedDate) {\n    return dateFormatting.isRequiredErrorMessage;\n  }\n  return '';\n};\n"],"file":"validateDate.js"}