import * as React from 'react';
import { childrenExist, createShorthandFactory, commonPropTypes, rtlTextContainer } from '../../utils';
import { useTelemetry, useFluentContext, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';
export var headerDescriptionClassName = 'ui-header__description';

/**
 * A HeaderDescription provides more detailed information about the Header.
 */
export var HeaderDescription = /*#__PURE__*/function () {
  var HeaderDescription = function HeaderDescription(props) {
    var context = useFluentContext();

    var _useTelemetry = useTelemetry(HeaderDescription.displayName, context.telemetry),
        setStart = _useTelemetry.setStart,
        setEnd = _useTelemetry.setEnd;

    setStart();
    var children = props.children,
        content = props.content,
        color = props.color,
        className = props.className,
        design = props.design,
        styles = props.styles,
        variables = props.variables;
    var ElementType = getElementType(props);
    var unhandledProps = useUnhandledProps(HeaderDescription.handledProps, props);
    var getA11yProps = useAccessibility(props.accessibility, {
      debugName: HeaderDescription.displayName,
      rtl: context.rtl
    });

    var _useStyles = useStyles(HeaderDescription.displayName, {
      className: headerDescriptionClassName,
      mapPropsToStyles: function mapPropsToStyles() {
        return {
          color: color
        };
      },
      mapPropsToInlineStyles: function mapPropsToInlineStyles() {
        return {
          className: className,
          design: design,
          styles: styles,
          variables: variables
        };
      },
      rtl: context.rtl
    }),
        classes = _useStyles.classes;

    var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({
      className: classes.root
    }, unhandledProps, rtlTextContainer.getAttributes({
      forElements: [children, content]
    }))), childrenExist(children) ? children : content);
    setEnd();
    return element;
  };

  HeaderDescription.displayName = 'HeaderDescription';
  HeaderDescription.propTypes = Object.assign({}, commonPropTypes.createCommon({
    color: true
  }));
  HeaderDescription.defaultProps = {
    as: 'p'
  };
  HeaderDescription.handledProps = Object.keys(HeaderDescription.propTypes);
  HeaderDescription.create = createShorthandFactory({
    Component: HeaderDescription,
    mappedProp: 'content'
  });
  return HeaderDescription;
}();
//# sourceMappingURL=HeaderDescription.js.map
