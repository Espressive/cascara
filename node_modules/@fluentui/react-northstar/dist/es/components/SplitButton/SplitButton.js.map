{"version":3,"sources":["components/SplitButton/SplitButton.tsx"],"names":["splitButtonBehavior","customPropTypes","PropTypes","React","ALIGNMENTS","POSITIONS","AUTOSIZES","isFromKeyboard","checkIsFromKeyboard","commonPropTypes","createShorthand","createShorthandFactory","SplitButtonToggle","Button","MenuButton","Ref","useTelemetry","useAutoControlled","useAccessibility","getElementType","useFluentContext","useUnhandledProps","useStyles","splitButtonClassName","SplitButton","props","context","displayName","telemetry","setStart","setEnd","button","disabled","menu","primary","secondary","toggleButton","size","position","align","flipBoundary","overflowBoundary","popperRef","positionFixed","offset","unstable_disableTether","unstable_pinned","autoSize","className","design","styles","accessibility","variables","targetRef","useRef","ElementType","unhandledProps","handledProps","defaultValue","defaultOpen","value","open","initialValue","setOpen","useState","setIsFromKeyboard","getA11yProps","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleMenuButtonOverrides","predefinedProps","onMenuItemClick","e","menuItemProps","onOpenChange","popupProps","stopPropagation","handleMenuButtonTriggerOverrides","onClick","buttonProps","onFocus","element","root","create","defaultProps","on","trigger","menuButton","overrideProps","target","current","isOpen","Toggle","propTypes","createCommon","content","itemShorthand","bool","oneOfType","arrayOf","itemShorthandWithoutJSX","onMainButtonClick","func","ref","every","disallow","oneOf","object","number","Object","keys","Component"],"mappings":"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","sourcesContent":["import { Accessibility, splitButtonBehavior, SplitButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { ALIGNMENTS, POSITIONS, AUTOSIZES } from '../../utils/positioner';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  isFromKeyboard as checkIsFromKeyboard,\n  commonPropTypes,\n  SizeValue,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { SplitButtonToggle, SplitButtonToggleProps } from './SplitButtonToggle';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { MenuButton, MenuButtonProps } from '../MenuButton/MenuButton';\nimport { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PopupProps } from '../Popup/Popup';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { PositioningProps, AutoSize } from '../../utils/positioner/types';\n\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  useAutoControlled,\n  useAccessibility,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface SplitButtonProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<SplitButtonBehaviorProps>;\n\n  /** Shorthand for the main button. */\n  button?: ShorthandValue<ButtonProps>;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** A split button can be disabled. */\n  disabled?: boolean;\n\n  /** Shorthand for the menu. */\n  menu?: ShorthandValue<MenuProps> | ShorthandCollection<MenuItemProps>;\n\n  /**\n   * Called after user's click on the main button.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMainButtonClick?: ComponentEventHandler<ButtonProps>;\n\n  /**\n   * Called after user's click on a menu item.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMenuItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: ComponentEventHandler<SplitButtonProps>;\n\n  /** Defines whether menu is displayed. */\n  open?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  primary?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  secondary?: boolean;\n\n  /** A split button can be sized */\n  size?: SizeValue;\n\n  /** Shorthand for the toggle button. */\n  toggleButton?: ShorthandValue<SplitButtonToggleProps>;\n}\n\nexport const splitButtonClassName = 'ui-splitbutton';\n\nexport type SplitButtonStylesProps = Required<Pick<SplitButtonProps, 'size'>> & { isFromKeyboard: boolean };\n\n/**\n * A SplitButton enables users to take one of several related actions, one being dominant and rest being displayed in a menu.\n */\nexport const SplitButton: ComponentWithAs<'div', SplitButtonProps> &\n  FluentComponentStaticProps<SplitButtonProps> & {\n    Toggle: typeof SplitButtonToggle;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(SplitButton.displayName, context.telemetry);\n  setStart();\n\n  const {\n    button,\n    disabled,\n    menu,\n    primary,\n    secondary,\n    toggleButton,\n    size,\n    position,\n    align,\n    flipBoundary,\n    overflowBoundary,\n    popperRef,\n    positionFixed,\n    offset,\n    unstable_disableTether,\n    unstable_pinned,\n    autoSize,\n    className,\n    design,\n    styles,\n    accessibility,\n    variables,\n  } = props;\n\n  const targetRef = React.useRef<HTMLDivElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(SplitButton.handledProps, props);\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  const [isFromKeyboard, setIsFromKeyboard] = React.useState<boolean>(false);\n\n  const getA11yProps = useAccessibility<SplitButtonBehaviorProps>(accessibility, {\n    debugName: SplitButton.displayName,\n    mapPropsToBehavior: () => ({\n      open,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<SplitButtonStylesProps>(SplitButton.displayName, {\n    className: splitButtonClassName,\n    mapPropsToStyles: () => ({\n      isFromKeyboard,\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleMenuButtonOverrides = (predefinedProps: MenuButtonProps) => ({\n    onMenuItemClick: (e: React.SyntheticEvent, menuItemProps: MenuItemProps) => {\n      setOpen(false);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: false });\n\n      _.invoke(predefinedProps, 'onMenuItemClick', e, menuItemProps);\n      _.invoke(props, 'onMenuItemClick', e, menuItemProps);\n    },\n    onOpenChange: (e: React.SyntheticEvent, popupProps: PopupProps) => {\n      e.stopPropagation();\n      setOpen(popupProps.open);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: popupProps.open });\n    },\n  });\n\n  const handleMenuButtonTriggerOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onMainButtonClick', e, buttonProps);\n    },\n    onFocus: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, buttonProps);\n      setIsFromKeyboard(checkIsFromKeyboard());\n    },\n  });\n\n  const element = (\n    <Ref innerRef={targetRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ...unhandledProps,\n        })}\n      >\n        {MenuButton.create(\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('menuButton', {\n                menu,\n                on: [],\n                open,\n                trigger: createShorthand(Button, button, {\n                  defaultProps: () => ({\n                    styles: resolvedStyles.menuButton,\n                    primary,\n                    secondary,\n                    disabled,\n                  }),\n                  overrideProps: handleMenuButtonTriggerOverrides,\n                }),\n                target: targetRef.current,\n                position,\n                align,\n                flipBoundary,\n                overflowBoundary,\n                popperRef,\n                positionFixed,\n                offset,\n                unstable_disableTether,\n                unstable_pinned,\n                autoSize,\n              }),\n            overrideProps: handleMenuButtonOverrides,\n          },\n        )}\n\n        {SplitButtonToggle.create(toggleButton, {\n          defaultProps: () =>\n            getA11yProps('toggleButton', {\n              disabled,\n              primary,\n              secondary,\n              size,\n            }),\n          overrideProps: (predefinedProps: ButtonProps) => ({\n            onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n              _.invoke(predefinedProps, 'onClick', e, buttonProps);\n\n              setOpen(isOpen => {\n                const open = !isOpen;\n                _.invoke(props, 'onOpenChange', e, { ...props, open });\n                return open;\n              });\n            },\n          }),\n        })}\n      </ElementType>\n    </Ref>\n  );\n\n  setEnd();\n  return element;\n};\n\nSplitButton.displayName = 'SplitButton';\n\nSplitButton.Toggle = SplitButtonToggle;\n\nSplitButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  button: customPropTypes.itemShorthand,\n  defaultOpen: PropTypes.bool,\n  menu: PropTypes.oneOfType([\n    customPropTypes.itemShorthand,\n    PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX),\n  ]),\n  onMainButtonClick: PropTypes.func,\n  onMenuItemClick: PropTypes.func,\n  onOpenChange: PropTypes.func,\n  open: PropTypes.bool,\n  size: customPropTypes.size,\n  popperRef: customPropTypes.ref,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  toggleButton: customPropTypes.itemShorthand,\n  position: PropTypes.oneOf(POSITIONS),\n  align: PropTypes.oneOf(ALIGNMENTS),\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  positionFixed: PropTypes.bool,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  autoSize: PropTypes.oneOf<AutoSize>(AUTOSIZES),\n};\n\nSplitButton.defaultProps = {\n  accessibility: splitButtonBehavior,\n  toggleButton: {},\n  position: 'below',\n  align: 'start',\n};\n\nSplitButton.handledProps = Object.keys(SplitButton.propTypes) as any;\n\nSplitButton.create = createShorthandFactory({\n  Component: SplitButton,\n});\n"],"file":"SplitButton.js"}