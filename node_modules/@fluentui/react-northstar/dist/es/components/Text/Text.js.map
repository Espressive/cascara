{"version":3,"sources":["components/Text/Text.tsx"],"names":["customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getElementType","useUnhandledProps","useFluentContext","useAccessibility","useStyles","useTelemetry","textClassName","Text","props","context","displayName","telemetry","setStart","setEnd","accessibility","align","atMention","children","className","color","content","design","disabled","error","important","size","styles","success","timestamp","truncated","temporary","variables","weight","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","unhandledProps","handledProps","ElementType","element","root","getAttributes","forElements","defaultProps","as","propTypes","createCommon","oneOfType","bool","oneOf","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n  SizeValue,\n  AlignValue,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\n\nexport interface TextProps\n  extends UIComponentProps,\n    ContentComponentProps,\n    ChildrenComponentProps,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** At mentions can be formatted to draw users' attention. Mentions for \"me\" can be formatted to appear differently. */\n  atMention?: boolean | 'me';\n\n  /** Set as disabled Text component */\n  disabled?: boolean;\n\n  /** Set as error Text component */\n  error?: boolean;\n\n  /** The text can appear more important and draw user's attention */\n  important?: boolean;\n\n  /** The size for the Text component */\n  size?: SizeValue;\n\n  /** The weight for the Text component */\n  weight?: 'light' | 'semilight' | 'regular' | 'semibold' | 'bold';\n\n  /** Set as success Text component */\n  success?: boolean;\n\n  /** The text can signify a temporary state */\n  temporary?: boolean;\n\n  /** Align text content. */\n  align?: AlignValue;\n\n  /** Set as timestamp Text component */\n  timestamp?: boolean;\n\n  /** Truncates text as needed */\n  truncated?: boolean;\n}\n\nexport type TextStylesProps = Pick<\n  TextProps,\n  | 'atMention'\n  | 'color'\n  | 'important'\n  | 'timestamp'\n  | 'truncated'\n  | 'disabled'\n  | 'error'\n  | 'success'\n  | 'temporary'\n  | 'align'\n  | 'weight'\n  | 'size'\n>;\n\nexport const textClassName = 'ui-text';\n\n/**\n * A Text consistently styles and formats occurrences of text.\n */\nexport const Text: ComponentWithAs<'span', TextProps> & FluentComponentStaticProps<TextProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Text.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    align,\n    atMention,\n    children,\n    className,\n    color,\n    content,\n    design,\n    disabled,\n    error,\n    important,\n    size,\n    styles,\n    success,\n    timestamp,\n    truncated,\n    temporary,\n    variables,\n    weight,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Text.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TextStylesProps>(Text.displayName, {\n    className: textClassName,\n    mapPropsToStyles: () => ({\n      atMention,\n      color,\n      important,\n      timestamp,\n      truncated,\n      disabled,\n      error,\n      success,\n      temporary,\n      align,\n      weight,\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(Text.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nText.displayName = 'Text';\n\nText.defaultProps = {\n  as: 'span',\n};\nText.propTypes = {\n  ...commonPropTypes.createCommon({ color: true }),\n  atMention: PropTypes.oneOfType<any>([PropTypes.bool, PropTypes.oneOf(['me'])]),\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  important: PropTypes.bool,\n  size: customPropTypes.size,\n  weight: PropTypes.oneOf(['light', 'semilight', 'regular', 'semibold', 'bold']),\n  success: PropTypes.bool,\n  temporary: PropTypes.bool,\n  align: customPropTypes.align,\n  timestamp: PropTypes.bool,\n  truncated: PropTypes.bool,\n};\nText.handledProps = Object.keys(Text.propTypes) as any;\n\nText.create = createShorthandFactory({ Component: Text, mappedProp: 'content' });\n"],"file":"Text.js"}