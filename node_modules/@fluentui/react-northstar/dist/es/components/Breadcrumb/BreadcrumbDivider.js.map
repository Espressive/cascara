{"version":3,"sources":["components/Breadcrumb/BreadcrumbDivider.tsx"],"names":["React","compose","useFluentContext","useTelemetry","useAccessibility","useStyles","useUnhandledProps","getElementType","childrenExist","commonPropTypes","breadcrumbDividerBehavior","breadcrumbDividerClassName","BreadcrumbDivider","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","children","content","className","design","styles","variables","getA11yProps","debugName","rtl","mapPropsToInlineStyles","unstable_props","classes","unhandledProps","handledProps","ElementType","result","root","defaultProps","as","propTypes","createCommon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  compose,\n  useFluentContext,\n  useTelemetry,\n  useAccessibility,\n  useStyles,\n  useUnhandledProps,\n  getElementType,\n  childrenExist,\n} from '@fluentui/react-bindings';\nimport { commonPropTypes, UIComponentProps, ContentComponentProps, ChildrenComponentProps } from '../../utils';\nimport { Accessibility, breadcrumbDividerBehavior, BreadcrumbDividerBehaviorProps } from '@fluentui/accessibility';\n\nexport interface BreadcrumbDividerProps\n  extends UIComponentProps<BreadcrumbDividerProps>,\n    ContentComponentProps,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<BreadcrumbDividerBehaviorProps>;\n}\n\nexport type BreadcrumbDividerStylesProps = never;\n\nexport const breadcrumbDividerClassName = 'ui-breadcrumb__divider';\n\n/**\n * BreadcrumbDivider divides BreadcrumbItem components within Breadcrumb\n */\nexport const BreadcrumbDivider = compose<'span', BreadcrumbDividerProps, BreadcrumbDividerStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n    const { accessibility, children, content, className, design, styles, variables } = props;\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<BreadcrumbDividerStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const result = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n\n    setEnd();\n\n    return result;\n  },\n  {\n    className: breadcrumbDividerClassName,\n    displayName: 'BreadcrumbDivider',\n    handledProps: ['accessibility', 'as', 'children', 'className', 'content', 'design', 'styles', 'variables'],\n  },\n);\n\nBreadcrumbDivider.defaultProps = {\n  as: 'span',\n  children: '/',\n  accessibility: breadcrumbDividerBehavior,\n};\n\nBreadcrumbDivider.propTypes = commonPropTypes.createCommon();\n"],"file":"BreadcrumbDivider.js"}