{"version":3,"sources":["components/Button/ButtonGroup.tsx"],"names":["buttonGroupBehavior","customPropTypes","PropTypes","React","childrenExist","commonPropTypes","rtlTextContainer","createShorthandFactory","createShorthand","Button","getElementType","useAccessibility","useUnhandledProps","useTelemetry","useStyles","useFluentContext","buttonGroupClassName","ButtonGroup","props","context","displayName","telemetry","setStart","setEnd","children","buttons","circular","content","className","design","styles","variables","ElementType","unhandledProps","handledProps","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","resolvedStyles","getA11yProps","accessibility","debugName","getStyleForButtonIndex","isFirst","isLast","resultStyles","firstButton","lastButton","middleButton","emptyButtons","element","root","getAttributes","forElements","button","idx","defaultProps","length","propTypes","createCommon","collectionShorthand","bool","Object","keys","create","Component","mappedProp","mappedArrayProp"],"mappings":"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","sourcesContent":["import { Accessibility, ButtonGroupBehaviorProps, buttonGroupBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport { ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n  createShorthand,\n} from '../../utils';\nimport { Button, ButtonProps } from './Button';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useAccessibility,\n  useUnhandledProps,\n  useTelemetry,\n  useStyles,\n  useFluentContext,\n} from '@fluentui/react-bindings';\n\nexport interface ButtonGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ButtonGroupBehaviorProps>;\n\n  /** The buttons contained inside the ButtonGroup. */\n  buttons?: ShorthandCollection<ButtonProps>;\n\n  /** The buttons inside group can appear circular. */\n  circular?: boolean;\n}\n\nexport type ButtonGroupStylesProps = Required<Pick<ButtonGroupProps, 'circular'>>;\n\nexport const buttonGroupClassName = 'ui-buttons';\n\n/**\n * A ButtonGroup represents multiple related actions as a group.\n */\nexport const ButtonGroup: ComponentWithAs<'div', ButtonGroupProps> &\n  FluentComponentStaticProps<ButtonGroupProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ButtonGroup.displayName, context.telemetry);\n  setStart();\n  const { children, buttons, circular, content, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ButtonGroup.handledProps, props);\n  const { classes, styles: resolvedStyles } = useStyles<ButtonGroupStylesProps>(ButtonGroup.displayName, {\n    className: buttonGroupClassName,\n    mapPropsToStyles: () => ({\n      circular,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<ButtonGroupBehaviorProps>(props.accessibility, {\n    debugName: ButtonGroup.displayName,\n    rtl: context.rtl,\n  });\n\n  const getStyleForButtonIndex = (styles, isFirst, isLast) => {\n    let resultStyles = {};\n    if (isFirst) {\n      resultStyles = styles.firstButton;\n    }\n    if (isLast) {\n      resultStyles = { ...resultStyles, ...styles.lastButton };\n    }\n    if (!isFirst && !isLast) {\n      resultStyles = styles.middleButton;\n    }\n    return resultStyles;\n  };\n\n  const emptyButtons = _.isNil(buttons);\n\n  const element = (\n    <ElementType\n      {...{\n        ...getA11yProps('root', {\n          className: classes.root,\n          ...unhandledProps,\n        }),\n        ...(emptyButtons && { ...rtlTextContainer.getAttributes({ forElements: [children, content] }) }),\n      }}\n    >\n      {emptyButtons\n        ? childrenExist(children)\n          ? children\n          : content\n        : _.map(buttons, (button, idx) =>\n            createShorthand(Button, button, {\n              defaultProps: () => ({\n                circular,\n                styles: getStyleForButtonIndex(resolvedStyles, idx === 0, idx === buttons.length - 1),\n              }),\n            }),\n          )}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nButtonGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  buttons: customPropTypes.collectionShorthand,\n  circular: PropTypes.bool,\n};\n\nButtonGroup.defaultProps = {\n  accessibility: buttonGroupBehavior,\n};\n\nButtonGroup.handledProps = Object.keys(ButtonGroup.propTypes) as any;\n\nButtonGroup.create = createShorthandFactory({\n  Component: ButtonGroup,\n  mappedProp: 'content',\n  mappedArrayProp: 'buttons',\n});\n"],"file":"ButtonGroup.js"}