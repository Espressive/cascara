{"version":3,"sources":["components/Reaction/ReactionGroup.tsx"],"names":["customPropTypes","React","childrenExist","commonPropTypes","rtlTextContainer","createShorthandFactory","Reaction","getElementType","useUnhandledProps","useFluentContext","useAccessibility","useTelemetry","useStyles","reactionGroupClassName","ReactionGroup","props","context","displayName","telemetry","setStart","setEnd","children","items","content","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToInlineStyles","classes","resolvedStyles","element","root","getAttributes","forElements","reaction","create","defaultProps","propTypes","createCommon","collectionShorthand","Object","keys","Component","mappedProp","mappedArrayProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport { ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { Reaction, ReactionProps } from './Reaction';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useTelemetry,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface ReactionGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** The reactions contained inside the reaction group. */\n  items?: ShorthandCollection<ReactionProps>;\n}\n\nexport const reactionGroupClassName = 'ui-reactions';\n\nexport type ReactionGroupStylesProps = never;\n\n/**\n * A ReactionGroup groups multiple Reaction elements.\n */\nexport const ReactionGroup: ComponentWithAs<'div', ReactionGroupProps> &\n  FluentComponentStaticProps<ReactionGroupProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ReactionGroup.displayName, context.telemetry);\n  setStart();\n  const { children, items, content, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ReactionGroup.handledProps, props);\n\n  const getA11yProps = useAccessibility<never>(props.accessibility, {\n    debugName: ReactionGroup.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<ReactionGroupStylesProps>(ReactionGroup.displayName, {\n    className: reactionGroupClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = _.isNil(items) ? (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children, content] })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  ) : (\n    <ElementType {...unhandledProps} className={classes.root}>\n      {_.map(items, reaction =>\n        Reaction.create(reaction, {\n          defaultProps: () => ({\n            styles: resolvedStyles.reaction,\n          }),\n        }),\n      )}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nReactionGroup.displayName = 'ReactionGroup';\n\nReactionGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  items: customPropTypes.collectionShorthand,\n};\n\nReactionGroup.handledProps = Object.keys(ReactionGroup.propTypes) as any;\n\nReactionGroup.create = createShorthandFactory({\n  Component: ReactionGroup,\n  mappedProp: 'content',\n  mappedArrayProp: 'items',\n});\n"],"file":"ReactionGroup.js"}