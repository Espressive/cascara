{"version":3,"sources":["components/Alert/Alert.tsx"],"names":["alertBehavior","customPropTypes","PropTypes","React","commonPropTypes","childrenExist","createShorthandFactory","Box","Text","ButtonGroup","AlertDismissAction","useAccessibility","getElementType","useStyles","useTelemetry","useFluentContext","useUnhandledProps","useAutoControlled","alertClassName","alertSlotClassNames","content","actions","icon","header","body","Alert","props","context","displayName","telemetry","setStart","setEnd","warning","danger","info","success","attached","fitted","dismissible","variables","className","design","styles","children","dismissAction","defaultValue","defaultVisible","value","visible","initialValue","setVisible","useState","bodyId","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleDismissOverrides","predefinedProps","onClick","e","buttonProps","handleFocus","renderContent","bodyContent","create","defaultProps","id","overrideProps","element","unstable_wrapWithFocusZone","root","onFocus","propTypes","createCommon","oneOfType","itemShorthand","collectionShorthand","shorthandAllowingChildren","oneOf","bool","onVisibleChange","func","Object","keys","Component","DismissAction"],"mappings":"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","sourcesContent":["import { Accessibility, alertBehavior, AlertBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  UIComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n  createShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ButtonProps } from '../Button/Button';\nimport { Text, TextProps } from '../Text/Text';\n\nimport { ButtonGroup, ButtonGroupProps } from '../Button/ButtonGroup';\nimport { AlertDismissAction, AlertDismissActionProps } from './AlertDismissAction';\nimport {\n  ComponentWithAs,\n  useAccessibility,\n  getElementType,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  useAutoControlled,\n} from '@fluentui/react-bindings';\n\nexport interface AlertSlotClassNames {\n  content: string;\n  actions: string;\n  icon: string;\n  header: string;\n  body: string;\n}\n\nexport interface AlertProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available alertWarningBehavior\n   */\n  accessibility?: Accessibility<AlertBehaviorProps>;\n\n  /** An alert can contain action buttons. */\n  actions?: ShorthandValue<ButtonGroupProps> | ShorthandCollection<ButtonProps>;\n\n  /** An alert may contain an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** An alert may contain a header. */\n  header?: ShorthandValue<TextProps>;\n\n  /** An alert's position relative to neighboring items. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** An alert can only take up the width of its content. */\n  fitted?: boolean;\n\n  /** An alert may be formatted to display a danger message. */\n  danger?: boolean;\n\n  /** A default value for the `visible` prop. */\n  defaultVisible?: boolean;\n\n  /** An alert can be dismissible. */\n  dismissible?: boolean;\n\n  /**\n   * A button shorthand for the dismiss action slot. To use this slot the alert should be\n   * dismissible.\n   */\n  dismissAction?: ShorthandValue<AlertDismissActionProps>;\n\n  /** An alert may be formatted to display information. */\n  info?: boolean;\n\n  /**\n   * Called after user will dismiss the alert.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onVisibleChange?: ComponentEventHandler<AlertProps>;\n\n  /**\n   * Called after the alert is focused.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<AlertProps>;\n\n  /** An alert can be formatted to display a successful message. */\n  success?: boolean;\n\n  /** An alert can be set to visible to force itself to be shown. */\n  visible?: boolean;\n\n  /** An alert can be formatted to display a warning message. */\n  warning?: boolean;\n\n  /** An alert can have a body that contains header and content elements. */\n  body?: ShorthandValue<BoxProps>;\n}\n\nexport type AlertStylesProps = Required<\n  Pick<AlertProps, 'danger' | 'warning' | 'info' | 'success' | 'attached' | 'fitted' | 'dismissible' | 'visible'>\n>;\n\nexport const alertClassName = 'ui-alert';\nexport const alertSlotClassNames: AlertSlotClassNames = {\n  content: `${alertClassName}__content`,\n  actions: `${alertClassName}__actions`,\n  icon: `${alertClassName}__icon`,\n  header: `${alertClassName}__header`,\n  body: `${alertClassName}__body`,\n};\n\n/**\n * An Alert displays a brief, important message to attract a user's attention without interrupting their current task.\n *\n * @accessibility\n * Implements [ARIA Alert](https://www.w3.org/TR/wai-aria-practices-1.1/#alert) design pattern.\n */\nexport const Alert: ComponentWithAs<'div', AlertProps> &\n  FluentComponentStaticProps<AlertProps> & {\n    DismissAction: typeof AlertDismissAction;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Alert.displayName, context.telemetry);\n  setStart();\n  const {\n    warning,\n    danger,\n    info,\n    success,\n    attached,\n    fitted,\n    dismissible,\n    variables,\n    className,\n    design,\n    styles,\n    children,\n    actions,\n    dismissAction,\n    content,\n    icon,\n    header,\n    body,\n  } = props;\n\n  const [visible, setVisible] = useAutoControlled({\n    defaultValue: props.defaultVisible,\n    value: props.visible,\n    initialValue: true,\n  });\n\n  const [bodyId] = React.useState(_.uniqueId('alert-body-'));\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Alert.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Alert.displayName,\n    mapPropsToBehavior: () => ({\n      warning,\n      danger,\n      bodyId,\n      visible,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<AlertStylesProps>(Alert.displayName, {\n    className: alertClassName,\n    mapPropsToStyles: () => ({\n      warning,\n      danger,\n      info,\n      success,\n      attached,\n      fitted,\n      dismissible,\n      visible,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleDismissOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onVisibleChange', e, { ...props, visible: false });\n      setVisible(false);\n    },\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const renderContent = () => {\n    const bodyContent = (\n      <>\n        {Text.create(header, {\n          defaultProps: () =>\n            getA11yProps('header', {\n              className: alertSlotClassNames.header,\n              styles: resolvedStyles.header,\n            }),\n        })}\n        {Box.create(content, {\n          defaultProps: () =>\n            getA11yProps('content', {\n              className: alertSlotClassNames.content,\n              styles: resolvedStyles.content,\n            }),\n        })}\n      </>\n    );\n\n    return (\n      <>\n        {Box.create(icon, {\n          defaultProps: () =>\n            getA11yProps('icon', {\n              className: alertSlotClassNames.icon,\n              styles: resolvedStyles.icon,\n            }),\n        })}\n        {Box.create(body, {\n          defaultProps: () =>\n            getA11yProps('body', {\n              className: alertSlotClassNames.body,\n              styles: resolvedStyles.body,\n              id: bodyId,\n            }),\n          overrideProps: {\n            children: bodyContent,\n          },\n        })}\n\n        {ButtonGroup.create(actions, {\n          defaultProps: () =>\n            getA11yProps('actions', {\n              className: alertSlotClassNames.actions,\n              styles: resolvedStyles.actions,\n            }),\n        })}\n        {dismissible &&\n          AlertDismissAction.create(dismissAction, {\n            defaultProps: () =>\n              getA11yProps('dismissAction', {\n                danger,\n                warning,\n                info,\n                success,\n                variables,\n              }),\n            overrideProps: handleDismissOverrides,\n          })}\n      </>\n    );\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onFocus: handleFocus,\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n};\n\nAlert.defaultProps = {\n  accessibility: alertBehavior,\n  dismissAction: {},\n  body: {},\n};\n\nAlert.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actions: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  icon: customPropTypes.shorthandAllowingChildren,\n  header: customPropTypes.itemShorthand,\n  attached: PropTypes.oneOf([true, false, 'top', 'bottom']),\n  fitted: PropTypes.bool,\n  danger: PropTypes.bool,\n  defaultVisible: PropTypes.bool,\n  dismissible: PropTypes.bool,\n  dismissAction: customPropTypes.shorthandAllowingChildren,\n  info: PropTypes.bool,\n  onVisibleChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  success: PropTypes.bool,\n  visible: PropTypes.bool,\n  warning: PropTypes.bool,\n  body: customPropTypes.shorthandAllowingChildren,\n};\n\nAlert.displayName = 'Alert';\n\nAlert.handledProps = Object.keys(Alert.propTypes) as any;\n\nAlert.create = createShorthandFactory({\n  Component: Alert,\n});\n\nAlert.DismissAction = AlertDismissAction;\n"],"file":"Alert.js"}