{"version":3,"sources":["components/Embed/Embed.tsx"],"names":["embedBehavior","PropTypes","React","customPropTypes","createShorthandFactory","commonPropTypes","Image","Video","Box","Ref","getElementType","useUnhandledProps","useFluentContext","useAutoControlled","useAccessibility","useTelemetry","useStyles","embedClassName","embedSlotClassNames","control","Embed","props","context","displayName","telemetry","setStart","setEnd","alt","title","iframe","placeholder","video","variables","styles","className","design","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","performClick","event","handleClick","mapPropsToBehavior","rtl","defaultValue","defaultActive","value","active","initialValue","setACtive","useState","iframeLoaded","setIframeLoaded","frameRef","useRef","e","stopPropagation","preventDefault","iframeNil","newActive","handleFrameOverrides","predefinedProps","onLoad","current","contentWindow","focus","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","placeholderElement","image","width","height","hasIframe","hasVideo","controlVisible","placeholderVisible","element","root","onClick","create","defaultProps","autoPlay","controls","loop","muted","poster","as","overrideProps","propTypes","createCommon","children","content","bool","itemShorthand","every","disallow","onActiveChange","func","string","Object","keys","Component"],"mappings":"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","sourcesContent":["import { Accessibility, embedBehavior, EmbedBehaviorProps } from '@fluentui/accessibility';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport { createShorthandFactory, UIComponentProps, commonPropTypes } from '../../utils';\nimport { Image } from '../Image/Image';\nimport { Video, VideoProps } from '../Video/Video';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Ref } from '@fluentui/react-component-ref';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAutoControlled,\n  useAccessibility,\n  useTelemetry,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface EmbedSlotClassNames {\n  control: string;\n}\n\nexport interface EmbedProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<EmbedBehaviorProps>;\n\n  /** Alternative text. */\n  alt?: string;\n\n  /** Corresponds to HTML title attribute. */\n  title?: string;\n\n  /** Whether the embedded object should be active. */\n  active?: boolean;\n\n  /** Whether the embedded object should start active. */\n  defaultActive?: boolean;\n\n  /** Shorthand for an control. */\n  control?: ShorthandValue<BoxProps>;\n\n  /** Shorthand for an embedded iframe. */\n  iframe?: ShorthandValue<BoxProps>;\n\n  /**\n   * Event for request to change 'active' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onActiveChange?: ComponentEventHandler<EmbedProps>;\n\n  /**\n   * Called when is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onClick?: ComponentEventHandler<EmbedProps>;\n\n  /** Image source URL for when video isn't playing. */\n  placeholder?: string;\n\n  /** Shorthand for an embedded video. */\n  video?: ShorthandValue<VideoProps>;\n}\n\nexport const embedClassName = 'ui-embed';\nexport const embedSlotClassNames: EmbedSlotClassNames = {\n  control: `${embedClassName}__control`,\n};\n\nexport type EmbedStylesProps = Required<Pick<EmbedProps, 'active'>> & { iframeLoaded: boolean };\n\n/**\n * An Embed displays content from external websites, like a post from external social network.\n *\n * @accessibility\n * A `placeholder` slot represents an [`Image`](/components/image/definition) component, please follow recommendations from its\n * accessibility section.\n */\nexport const Embed: ComponentWithAs<'span', EmbedProps> & FluentComponentStaticProps<EmbedProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Embed.displayName, context.telemetry);\n  setStart();\n  const { alt, title, control, iframe, placeholder, video, variables, styles, className, design } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Embed.handledProps, props);\n\n  const getA11yProps = useAccessibility<EmbedBehaviorProps>(props.accessibility, {\n    debugName: Embed.displayName,\n    actionHandlers: {\n      performClick: event => handleClick(event),\n    },\n    mapPropsToBehavior: () => ({\n      alt,\n      title,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [active, setACtive] = useAutoControlled({\n    defaultValue: props.defaultActive,\n    value: props.active,\n    initialValue: false,\n  });\n\n  const [iframeLoaded, setIframeLoaded] = React.useState(false);\n  const frameRef = React.useRef<HTMLFrameElement>();\n\n  const handleClick = e => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const iframeNil = _.isNil(props.iframe);\n    const newActive = !active;\n\n    if (iframeNil || (!iframeNil && newActive)) {\n      setACtive(newActive);\n      _.invoke(props, 'onActiveChange', e, { ...props, active: newActive });\n    }\n\n    _.invoke(props, 'onClick', e, { ...props, active: newActive });\n  };\n\n  const handleFrameOverrides = predefinedProps => ({\n    onLoad: (e: React.SyntheticEvent) => {\n      _.invoke(predefinedProps, 'onLoad', e);\n      setIframeLoaded(true);\n      frameRef.current.contentWindow.focus();\n    },\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<EmbedStylesProps>(Embed.displayName, {\n    className: embedClassName,\n    mapPropsToStyles: () => ({\n      iframeLoaded,\n      active,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const placeholderElement = placeholder ? (\n    <Image\n      src={placeholder}\n      styles={resolvedStyles.image}\n      variables={{ width: variables.width, height: variables.height }}\n    />\n  ) : null;\n\n  const hasIframe = !_.isNil(iframe);\n  const hasVideo = !_.isNil(video);\n  const controlVisible = !active || hasVideo;\n  const placeholderVisible = !active || (hasIframe && active && !iframeLoaded);\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ...unhandledProps,\n      })}\n    >\n      {active && (\n        <>\n          {Video.create(video, {\n            defaultProps: () =>\n              getA11yProps('video', {\n                autoPlay: true,\n                controls: false,\n                loop: true,\n                muted: true,\n                poster: placeholder,\n                styles: resolvedStyles.video,\n                variables: {\n                  width: variables.width,\n                  height: variables.height,\n                },\n              }),\n          })}\n          {iframe && (\n            <Ref innerRef={frameRef}>\n              {Box.create(iframe, {\n                defaultProps: () =>\n                  getA11yProps('iframe', {\n                    as: 'iframe',\n                    styles: resolvedStyles.iframe,\n                  }),\n                overrideProps: handleFrameOverrides,\n              })}\n            </Ref>\n          )}\n        </>\n      )}\n\n      {placeholderVisible && placeholderElement}\n      {controlVisible &&\n        Box.create(control, {\n          defaultProps: () =>\n            getA11yProps('control', {\n              className: embedSlotClassNames.control,\n              styles: resolvedStyles.control,\n            }),\n        })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nEmbed.displayName = 'Embed';\n\nEmbed.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  active: PropTypes.bool,\n  defaultActive: PropTypes.bool,\n  control: customPropTypes.itemShorthand,\n  iframe: customPropTypes.every([customPropTypes.disallow(['video']), customPropTypes.itemShorthand]),\n  onActiveChange: PropTypes.func,\n  onClick: PropTypes.func,\n  placeholder: PropTypes.string,\n  video: customPropTypes.every([customPropTypes.disallow(['iframe']), customPropTypes.itemShorthand]),\n};\n\nEmbed.defaultProps = {\n  as: 'span',\n  accessibility: embedBehavior,\n  control: {},\n  variables: {},\n};\n\nEmbed.handledProps = Object.keys(Embed.propTypes) as any;\n\nEmbed.create = createShorthandFactory({ Component: Embed });\n"],"file":"Embed.js"}