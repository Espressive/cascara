{"version":3,"sources":["components/Dropdown/DropdownSelectedItem.tsx"],"names":["dropdownSelectedItemBehavior","getCode","keyboardKey","Ref","customPropTypes","React","PropTypes","CloseIcon","createShorthandFactory","commonPropTypes","Image","Box","useUnhandledProps","useStyles","useFluentContext","useTelemetry","getElementType","useAccessibility","dropdownSelectedItemClassName","dropdownSelectedItemSlotClassNames","header","icon","image","DropdownSelectedItem","props","context","displayName","telemetry","setStart","setEnd","active","className","design","styles","variables","itemRef","useRef","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","mapPropsToBehavior","rtl","useEffect","current","focus","mapPropsToStyles","hasImage","mapPropsToInlineStyles","classes","resolvedStyles","handleClick","e","handleKeyDown","handleIconOverrides","iconProps","onClick","stopPropagation","onKeyDown","Enter","headerElement","create","defaultProps","as","iconElement","overrideProps","imageElement","avatar","element","root","propTypes","createCommon","children","bool","itemShorthand","shorthandAllowingChildren","itemShorthandWithoutJSX","func","onRemove","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  dropdownSelectedItemBehavior,\n  DropdownSelectedItemBehaviorProps,\n  getCode,\n  keyboardKey,\n} from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport { CloseIcon } from '@fluentui/react-icons-northstar';\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  ComponentKeyboardEventHandler,\n  FluentComponentStaticProps,\n} from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport { Image, ImageProps } from '../Image/Image';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  ComponentWithAs,\n  useUnhandledProps,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  getElementType,\n  useAccessibility,\n} from '@fluentui/react-bindings';\n\nexport interface DropdownSelectedItemSlotClassNames {\n  header: string;\n  icon: string;\n  image: string;\n}\n\nexport interface DropdownSelectedItemProps extends UIComponentProps<DropdownSelectedItemProps> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<DropdownSelectedItemBehaviorProps>;\n\n  /** A selected item can be active. */\n  active?: boolean;\n\n  /** Header of the selected item. */\n  header?: ShorthandValue<BoxProps>;\n\n  /** Icon of the selected item. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** Image of the selected item. */\n  image?: ShorthandValue<ImageProps>;\n\n  /**\n   * Called on selected item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onClick?: ComponentEventHandler<DropdownSelectedItemProps>;\n\n  /**\n   * Called on selected item key down.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<DropdownSelectedItemProps>;\n\n  /**\n   * Called when item is removed from the selection list.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onRemove?: ComponentEventHandler<DropdownSelectedItemProps>;\n}\n\nexport const dropdownSelectedItemClassName = 'ui-dropdown__selecteditem';\nexport const dropdownSelectedItemSlotClassNames: DropdownSelectedItemSlotClassNames = {\n  header: `${dropdownSelectedItemClassName}__header`,\n  icon: `${dropdownSelectedItemClassName}__icon`,\n  image: `${dropdownSelectedItemClassName}__image`,\n};\n\nexport type DropdownSelectedItemStylesProps = { hasImage: boolean };\n\n/**\n * A DropdownSelectedItem represents a selected item of 'multiple-selection' Dropdown.\n */\nexport const DropdownSelectedItem: ComponentWithAs<'span', DropdownSelectedItemProps> &\n  FluentComponentStaticProps<DropdownSelectedItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DropdownSelectedItem.displayName, context.telemetry);\n  setStart();\n\n  const { active, header, icon, image, className, design, styles, variables } = props;\n\n  const itemRef = React.useRef<HTMLElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DropdownSelectedItem.handledProps, props);\n\n  const getA11yProps = useAccessibility<DropdownSelectedItemBehaviorProps>(props.accessibility, {\n    debugName: DropdownSelectedItem.displayName,\n    mapPropsToBehavior: () => ({\n      header: header as string,\n      active,\n    }),\n    rtl: context.rtl,\n  });\n\n  React.useEffect(() => {\n    if (active) {\n      itemRef.current.focus();\n    }\n  }, [active]);\n\n  const { classes, styles: resolvedStyles } = useStyles<DropdownSelectedItemStylesProps>(\n    DropdownSelectedItem.displayName,\n    {\n      className: dropdownSelectedItemClassName,\n      mapPropsToStyles: () => ({\n        hasImage: !!image,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    },\n  );\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const handleIconOverrides = iconProps => ({\n    ...iconProps,\n    onClick: (e: React.SyntheticEvent, iconProps: BoxProps) => {\n      e.stopPropagation();\n      _.invoke(props, 'onRemove', e, iconProps);\n      _.invoke(props, 'onClick', e, iconProps);\n    },\n    onKeyDown: (e: React.KeyboardEvent, iconProps: BoxProps) => {\n      e.stopPropagation();\n      if (getCode(e) === keyboardKey.Enter) {\n        _.invoke(props, 'onRemove', e, iconProps);\n      }\n      _.invoke(props, 'onKeyDown', e, iconProps);\n    },\n  });\n\n  const headerElement = Box.create(header, {\n    defaultProps: () =>\n      getA11yProps('header', {\n        as: 'span',\n        className: dropdownSelectedItemSlotClassNames.header,\n        styles: resolvedStyles.header,\n      }),\n  });\n\n  const iconElement = Box.create(icon, {\n    defaultProps: () =>\n      getA11yProps('icon', {\n        className: dropdownSelectedItemSlotClassNames.icon,\n        styles: resolvedStyles.icon,\n      }),\n    overrideProps: handleIconOverrides,\n  });\n\n  const imageElement = Image.create(image, {\n    defaultProps: () =>\n      getA11yProps('image', {\n        avatar: true,\n        className: dropdownSelectedItemSlotClassNames.image,\n        styles: resolvedStyles.image,\n      }),\n  });\n\n  const element = (\n    <Ref innerRef={itemRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          onClick: handleClick,\n          onKeyDown: handleKeyDown,\n          ...unhandledProps,\n        })}\n      >\n        {imageElement}\n        {headerElement}\n        {iconElement}\n      </ElementType>\n    </Ref>\n  );\n\n  setEnd();\n  return element;\n};\n\nDropdownSelectedItem.displayName = 'DropdownSelectedItem';\n\nDropdownSelectedItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n  }),\n  active: PropTypes.bool,\n  header: customPropTypes.itemShorthand,\n  icon: customPropTypes.shorthandAllowingChildren,\n  image: customPropTypes.itemShorthandWithoutJSX,\n  onClick: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onRemove: PropTypes.func,\n};\n\nDropdownSelectedItem.handledProps = Object.keys(DropdownSelectedItem.propTypes) as any;\n\nDropdownSelectedItem.defaultProps = {\n  accessibility: dropdownSelectedItemBehavior,\n  as: 'span',\n  icon: <CloseIcon />,\n};\n\nDropdownSelectedItem.create = createShorthandFactory({\n  Component: DropdownSelectedItem,\n  mappedProp: 'header',\n});\n"],"file":"DropdownSelectedItem.js"}