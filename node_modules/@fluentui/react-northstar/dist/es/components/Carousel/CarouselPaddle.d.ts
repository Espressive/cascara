import { Accessibility, ButtonBehaviorProps } from '@fluentui/accessibility';
import { UIComponentProps, ChildrenComponentProps, ContentComponentProps } from '../../utils';
import { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';
import { ComponentWithAs } from '@fluentui/react-bindings';
import { BoxProps } from '../Box/Box';
export interface CarouselPaddleProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>>, ChildrenComponentProps {
    /** Accessibility behavior if overridden by the user. */
    accessibility?: Accessibility<ButtonBehaviorProps>;
    /** A paddle can show that it cannot be interacted with. */
    disabled?: boolean;
    /** Indicates whether the paddle should be hidden. */
    hidden?: boolean;
    /**
     * Called after a user clicks the paddle.
     * @param event - React's original SyntheticEvent.
     * @param data - All props.
     */
    onClick?: ComponentEventHandler<CarouselPaddleProps>;
    /** A paddle can indicate that it slides to the next item. */
    next?: boolean;
    /** A paddle can indicate that it slides to the previous item. */
    previous?: boolean;
}
export declare type CarouselPaddleSlotClassNames = {
    content: string;
};
export declare type CarouselPaddleStylesProps = Pick<CarouselPaddleProps, 'disabled' | 'next' | 'previous' | 'hidden'>;
export declare const carouselPaddleClassName = "ui-carousel__paddle";
export declare const carouselPaddleSlotClassNames: CarouselPaddleSlotClassNames;
/**
 * A CarouselPaddle allows users to customize the paddles inside the Carousel component.
 *
 * @accessibility
 * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.
 */
export declare const CarouselPaddle: ComponentWithAs<'button', CarouselPaddleProps> & FluentComponentStaticProps<CarouselPaddleProps>;
