{"version":3,"sources":["components/Carousel/CarouselNavigationItem.tsx"],"names":["PropTypes","React","customPropTypes","tabBehavior","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","Box","useTelemetry","getElementType","useFluentContext","useUnhandledProps","useAccessibility","useStyles","carouselNavigationItemClassName","carouselNavigationItemSlotClassNames","indicator","content","CarouselNavigationItem","props","context","displayName","telemetry","setStart","setEnd","children","thumbnails","vertical","active","iconOnly","primary","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","performClick","event","defaultPrevented","handleClick","mapPropsToBehavior","mapPropsToStyles","hasContent","hasIndicator","mapPropsToInlineStyles","rtl","classes","resolvedStyles","renderContent","create","defaultProps","as","e","handleBlur","handleFocus","element","root","onBlur","onFocus","onClick","getAttributes","forElements","propTypes","createCommon","bool","shorthandAllowingChildren","index","number","func","every","disallow","secondary","Object","keys","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport { Accessibility, tabBehavior, TabBehaviorProps } from '@fluentui/accessibility';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n  ChildrenComponentProps,\n} from '../../utils';\n\nimport { ShorthandValue, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface CarouselNavigationItemSlotClassNames {\n  indicator: string;\n  content: string;\n}\n\nexport interface CarouselNavigationItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<TabBehaviorProps>;\n\n  /** A menu item can be active. */\n  active?: boolean;\n\n  /** Indicator for the Carousel Navigation Item. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** A Carousel Navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** CarouselNavigationIntem index inside CarouselNavigation. */\n  index?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation item can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation item can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n\n  thumbnails?: boolean;\n}\n\nexport type CarouselNavigationItemStylesProps = Required<\n  Pick<CarouselNavigationItemProps, 'thumbnails' | 'vertical' | 'active' | 'iconOnly' | 'primary'>\n> & {\n  hasContent: boolean;\n  hasIndicator: boolean;\n};\n\nexport const carouselNavigationItemClassName = 'ui-carousel__navigationitem';\nexport const carouselNavigationItemSlotClassNames: CarouselNavigationItemSlotClassNames = {\n  indicator: `${carouselNavigationItemClassName}__indicator`,\n  content: `${carouselNavigationItemClassName}__content`,\n};\n\n/**\n * A CarouselItem is an actionable item within a Carousel.\n */\nexport const CarouselNavigationItem: ComponentWithAs<'li', CarouselNavigationItemProps> &\n  FluentComponentStaticProps<CarouselNavigationItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselNavigationItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    children,\n    thumbnails,\n    vertical,\n    active,\n    content,\n    iconOnly,\n    primary,\n    indicator,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselNavigationItem.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CarouselNavigationItem.displayName,\n    actionHandlers: {\n      performClick: event => !event.defaultPrevented && handleClick(event),\n    },\n    mapPropsToBehavior: () => ({\n      active,\n    }),\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<CarouselNavigationItemStylesProps>(\n    CarouselNavigationItem.displayName,\n    {\n      className: carouselNavigationItemClassName,\n      mapPropsToStyles: () => ({\n        thumbnails,\n        vertical,\n        active,\n        hasContent: !!content,\n        iconOnly,\n        primary,\n        hasIndicator: !!indicator,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    },\n  );\n  const renderContent = () => {\n    return content\n      ? Box.create(content, {\n          defaultProps: () => ({\n            as: 'span',\n            className: carouselNavigationItemSlotClassNames.content,\n            styles: resolvedStyles.content,\n          }),\n        })\n      : Box.create(indicator, {\n          defaultProps: () => ({\n            className: carouselNavigationItemSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n        });\n  };\n\n  const handleClick = (e: Event | React.SyntheticEvent) => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onClick: handleClick,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n};\n\nCarouselNavigationItem.displayName = 'CarouselNavigationItem';\n\nCarouselNavigationItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n};\n\nCarouselNavigationItem.handledProps = Object.keys(CarouselNavigationItem.propTypes) as any;\n\nCarouselNavigationItem.defaultProps = {\n  accessibility: tabBehavior,\n  as: 'li',\n  indicator: {},\n};\n\nCarouselNavigationItem.create = createShorthandFactory({\n  Component: CarouselNavigationItem,\n  mappedArrayProp: 'content',\n});\n"],"file":"CarouselNavigationItem.js"}