{"version":3,"sources":["components/Carousel/CarouselPaddlesContainer.tsx"],"names":["React","useFluentContext","useTelemetry","useStyles","useAccessibility","getElementType","useUnhandledProps","commonPropTypes","childrenExist","carouselPaddlesContainerClassName","CarouselPaddlesContainer","props","context","displayName","telemetry","setStart","setEnd","className","children","design","styles","variables","content","mapPropsToInlineStyles","rtl","classes","getA11Props","accessibility","debugName","ElementType","unhandledProps","handledProps","element","root","propTypes","createCommon","Object","keys","shorthandConfig","mappedProp"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,gBADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,gBAJF,EAKEC,cALF,EAMEC,iBANF,QAQO,0BARP;AASA,SACEC,eADF,EAKEC,aALF,QAMO,aANP;AAgBA,OAAO,IAAMC,iCAAiC,GAAG,+BAA1C;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,wBAAN;AAAA,MAAMA,wBAC8C,GAAG,SADjDA,wBACiD,CAAAC,KAAK,EAAI;AACrE,QAAMC,OAAO,GAAGX,gBAAgB,EAAhC;;AADqE,wBAExCC,YAAY,CAACQ,wBAAwB,CAACG,WAA1B,EAAuCD,OAAO,CAACE,SAA/C,CAF4B;AAAA,QAE7DC,QAF6D,iBAE7DA,QAF6D;AAAA,QAEnDC,MAFmD,iBAEnDA,MAFmD;;AAGrED,IAAAA,QAAQ;AAH6D,QAK7DE,SAL6D,GAKDN,KALC,CAK7DM,SAL6D;AAAA,QAKlDC,QALkD,GAKDP,KALC,CAKlDO,QALkD;AAAA,QAKxCC,MALwC,GAKDR,KALC,CAKxCQ,MALwC;AAAA,QAKhCC,MALgC,GAKDT,KALC,CAKhCS,MALgC;AAAA,QAKxBC,SALwB,GAKDV,KALC,CAKxBU,SALwB;AAAA,QAKbC,OALa,GAKDX,KALC,CAKbW,OALa;;AAAA,qBAOjDnB,SAAS,CAAsCO,wBAAwB,CAACG,WAA/D,EAA4E;AACvGI,MAAAA,SAAS,EAAER,iCAD4F;AAEvGc,MAAAA,sBAAsB,EAAE;AAAA,eAAO;AAC7BN,UAAAA,SAAS,EAATA,SAD6B;AAE7BE,UAAAA,MAAM,EAANA,MAF6B;AAG7BC,UAAAA,MAAM,EAANA,MAH6B;AAI7BC,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAAA,OAF+E;AAQvGG,MAAAA,GAAG,EAAEZ,OAAO,CAACY;AAR0F,KAA5E,CAPwC;AAAA,QAO7DC,OAP6D,cAO7DA,OAP6D;;AAkBrE,QAAMC,WAAW,GAAGtB,gBAAgB,CAACO,KAAK,CAACgB,aAAP,EAAsB;AACxDC,MAAAA,SAAS,EAAElB,wBAAwB,CAACG,WADoB;AAExDW,MAAAA,GAAG,EAAEZ,OAAO,CAACY;AAF2C,KAAtB,CAApC;AAKA,QAAMK,WAAW,GAAGxB,cAAc,CAACM,KAAD,CAAlC;AACA,QAAMmB,cAAc,GAAGxB,iBAAiB,CAACI,wBAAwB,CAACqB,YAA1B,EAAwCpB,KAAxC,CAAxC;AAEA,QAAMqB,OAAO,gBACX,oBAAC,WAAD,EAAiBN,WAAW,CAAC,MAAD;AAAWT,MAAAA,SAAS,EAAEQ,OAAO,CAACQ;AAA9B,OAAuCH,cAAvC,EAA5B,EACGtB,aAAa,CAACU,QAAD,CAAb,GAA0BA,QAA1B,GAAqCI,OADxC,CADF;AAKAN,IAAAA,MAAM;AAEN,WAAOgB,OAAP;AACD,GAnCM;;AAqCPtB,EAAAA,wBAAwB,CAACG,WAAzB,GAAuC,0BAAvC;AACAH,EAAAA,wBAAwB,CAACwB,SAAzB,qBACK3B,eAAe,CAAC4B,YAAhB,EADL;AAIAzB,EAAAA,wBAAwB,CAACqB,YAAzB,GAAwCK,MAAM,CAACC,IAAP,CAAY3B,wBAAwB,CAACwB,SAArC,CAAxC;AAEAxB,EAAAA,wBAAwB,CAAC4B,eAAzB,GAA2C;AACzCC,IAAAA,UAAU,EAAE;AAD6B,GAA3C;AA5CO,SAAM7B,wBAAN;AAAA","sourcesContent":["import * as React from 'react';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  ComponentWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  childrenExist,\n} from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\n\nexport interface CarouselPaddlesContainerProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n}\n\nexport type CarouselPaddlesContainerStylesProps = never;\nexport const carouselPaddlesContainerClassName = 'ui-carrouselpaddles_container';\n\n/**\n * A CarouselPaddlesContainer is a container for the Carousel Paddles.\n */\nexport const CarouselPaddlesContainer: ComponentWithAs<'div', CarouselPaddlesContainerProps> &\n  FluentComponentStaticProps<CarouselPaddlesContainerProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselPaddlesContainer.displayName, context.telemetry);\n  setStart();\n\n  const { className, children, design, styles, variables, content } = props;\n\n  const { classes } = useStyles<CarouselPaddlesContainerStylesProps>(CarouselPaddlesContainer.displayName, {\n    className: carouselPaddlesContainerClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: CarouselPaddlesContainer.displayName,\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselPaddlesContainer.handledProps, props);\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n};\n\nCarouselPaddlesContainer.displayName = 'CarouselPaddlesContainer';\nCarouselPaddlesContainer.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nCarouselPaddlesContainer.handledProps = Object.keys(CarouselPaddlesContainer.propTypes) as any;\n\nCarouselPaddlesContainer.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"CarouselPaddlesContainer.js"}