import * as React from 'react';
import { useFluentContext, useTelemetry, useStyles, useAccessibility, getElementType, useUnhandledProps } from '@fluentui/react-bindings';
import { commonPropTypes, childrenExist } from '../../utils';
export var carouselPaddlesContainerClassName = 'ui-carrouselpaddles_container';
/**
 * A CarouselPaddlesContainer is a container for the Carousel Paddles.
 */

export var CarouselPaddlesContainer = /*#__PURE__*/function () {
  var CarouselPaddlesContainer = function CarouselPaddlesContainer(props) {
    var context = useFluentContext();

    var _useTelemetry = useTelemetry(CarouselPaddlesContainer.displayName, context.telemetry),
        setStart = _useTelemetry.setStart,
        setEnd = _useTelemetry.setEnd;

    setStart();
    var className = props.className,
        children = props.children,
        design = props.design,
        styles = props.styles,
        variables = props.variables,
        content = props.content;

    var _useStyles = useStyles(CarouselPaddlesContainer.displayName, {
      className: carouselPaddlesContainerClassName,
      mapPropsToInlineStyles: function mapPropsToInlineStyles() {
        return {
          className: className,
          design: design,
          styles: styles,
          variables: variables
        };
      },
      rtl: context.rtl
    }),
        classes = _useStyles.classes;

    var getA11Props = useAccessibility(props.accessibility, {
      debugName: CarouselPaddlesContainer.displayName,
      rtl: context.rtl
    });
    var ElementType = getElementType(props);
    var unhandledProps = useUnhandledProps(CarouselPaddlesContainer.handledProps, props);
    var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
      className: classes.root
    }, unhandledProps)), childrenExist(children) ? children : content);
    setEnd();
    return element;
  };

  CarouselPaddlesContainer.displayName = 'CarouselPaddlesContainer';
  CarouselPaddlesContainer.propTypes = Object.assign({}, commonPropTypes.createCommon());
  CarouselPaddlesContainer.handledProps = Object.keys(CarouselPaddlesContainer.propTypes);
  CarouselPaddlesContainer.shorthandConfig = {
    mappedProp: 'content'
  };
  return CarouselPaddlesContainer;
}();
//# sourceMappingURL=CarouselPaddlesContainer.js.map
