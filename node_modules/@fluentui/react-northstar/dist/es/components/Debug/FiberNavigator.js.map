{"version":3,"sources":["components/Debug/FiberNavigator.ts"],"names":["ForwardRef","getReactFiberFromNode","isDOMNode","e","tagName","nodeType","Node","ELEMENT_NODE","FiberNavigator","__fiber","findDebugHookState","node","memoizedState","current","fluentUIDebug","next","isEqual","fiberNav","instance","find","condition","move","fiber","fromFiber","findOwner","owner","findParent","parent","key","isClassComponent","isFunctionComponent","type","displayName","name","isForwardRef","return","isHostComponent","stateNode","constructor","_debugOwner","child","memoizedProps","elementType","prototype","isReactComponent","$$typeof","isDOMComponent","render","setState","fiberNavigator","Object","defineProperty","value","enumerable","writable","configurable","fromDOMNode","domNode"],"mappings":"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","sourcesContent":["import { ForwardRef } from 'react-is';\nimport { getReactFiberFromNode, Fiber } from '../../utils/getReactFiberFromNode';\n\nconst isDOMNode = e => e && typeof e.tagName === 'string' && e.nodeType === Node.ELEMENT_NODE;\n\nexport class FiberNavigator {\n  __fiber: Fiber;\n\n  // TODO: Fibers can become stale.\n  //      The only current fiber is the one found on the DOM node.\n  //      There is no way to start at a React Component fiber, go the DOM node,\n  //      get the current fiber, and find your way back to the React Component fiber.\n  //      Probably need to remove fromFiber and re-implement using only DOM node weak map.\n  static fromFiber = fiber => {\n    if (!fiber) return null;\n\n    const fiberNavigator = new FiberNavigator();\n\n    Object.defineProperty(fiberNavigator, '__fiber', {\n      value: fiber,\n      enumerable: false,\n      writable: false,\n      configurable: false,\n    });\n\n    return fiberNavigator;\n  };\n\n  static fromDOMNode = domNode => {\n    const fiber = getReactFiberFromNode(domNode);\n\n    if (!fiber) return null;\n\n    const fiberNavigator = new FiberNavigator();\n\n    Object.defineProperty(fiberNavigator, '__fiber', {\n      value: fiber,\n      enumerable: false,\n      writable: false,\n      configurable: false,\n    });\n\n    return fiberNavigator;\n  };\n\n  get key() {\n    return this.__fiber.key;\n  }\n\n  get name() {\n    if (this.isClassComponent || this.isFunctionComponent) {\n      return this.__fiber.type.displayName || this.__fiber.type.name;\n    }\n    if (this.isForwardRef) {\n      return (\n        this.__fiber.type.displayName ||\n        this.__fiber.type.name ||\n        this.__fiber.type.return?.displayName ||\n        this.__fiber.type.return?.name\n      );\n    }\n    if (this.isHostComponent) {\n      return this.__fiber.stateNode.constructor.name;\n    }\n    return null;\n  }\n\n  get parent(): FiberNavigator {\n    return FiberNavigator.fromFiber(this.__fiber.return);\n  }\n\n  get owner() {\n    return FiberNavigator.fromFiber(this.__fiber._debugOwner);\n  }\n\n  get domNode() {\n    let fiber = this.__fiber;\n\n    do {\n      if (isDOMNode(fiber.stateNode)) {\n        return fiber.stateNode;\n      }\n      fiber = fiber.child;\n    } while (fiber);\n\n    return null;\n  }\n\n  get instance() {\n    if (this.isClassComponent) {\n      return this.__fiber.stateNode;\n    }\n\n    if (this.isFunctionComponent || this.isForwardRef) {\n      // assumes functional component w/useRef\n      return this.findDebugHookState(this.__fiber.memoizedState);\n    }\n\n    return null;\n  }\n\n  get props() {\n    return this.__fiber.memoizedProps;\n  }\n\n  get state() {\n    return this.__fiber.memoizedState;\n  }\n\n  /**\n   * Hooks state is represented by a recursive structure where:\n   * - `memoizedState` is a current value if applicable\n   * - `next` is next hook in order\n   * @param node - fiber\n   */\n  findDebugHookState(node) {\n    if (node && node.memoizedState && node.memoizedState.current && node.memoizedState.current.fluentUIDebug) {\n      return node.memoizedState.current;\n    }\n\n    if (node === null || node.next === null) {\n      return null;\n    }\n\n    return this.findDebugHookState(node.next);\n  }\n\n  get reactComponent() {\n    return this.isHostComponent ? this.owner.elementType : this.elementType;\n  }\n\n  get elementType() {\n    return this.__fiber.elementType;\n  }\n\n  get fluentUIDebug() {\n    return this.instance && this.instance.fluentUIDebug ? this.instance.fluentUIDebug : null;\n  }\n\n  get jsxString() {\n    return `<${this.name} />`;\n  }\n\n  //\n  // Methods\n  //\n\n  isEqual(fiberNav: FiberNavigator) {\n    // TODO: do equality check on __fiber instead, however, see fromFiber TODO :/\n    return !!fiberNav && fiberNav.instance === this.instance;\n  }\n\n  find(condition, move) {\n    let fiber: FiberNavigator = FiberNavigator.fromFiber(this.__fiber);\n\n    while (fiber) {\n      if (condition(fiber)) {\n        return fiber;\n      }\n      fiber = move(fiber);\n    }\n\n    return null;\n  }\n\n  findOwner(condition) {\n    return this.find(condition, fiber => fiber.owner);\n  }\n\n  findParent(condition) {\n    return this.find(condition, fiber => fiber.parent);\n  }\n\n  //\n  // Component Types\n  //\n\n  get isClassComponent() {\n    // React.Component subclasses have this flag\n    // https://reactjs.org/docs/implementation-notes.html\n    return typeof this.__fiber.type === 'function' && !!this.__fiber.type.prototype.isReactComponent;\n  }\n\n  get isFunctionComponent() {\n    // React.Component subclasses have this flag\n    // https://reactjs.org/docs/implementation-notes.html\n    return typeof this.__fiber.type === 'function' && !this.__fiber.type.prototype.isReactComponent;\n  }\n\n  get isForwardRef() {\n    return this.__fiber.type?.$$typeof === ForwardRef;\n  }\n\n  get isHostComponent() {\n    // Host components are platform components (i.e. 'div' on web)\n    // https://github.com/acdlite/react-fiber-architecture#type-and-key\n    return typeof this.__fiber.type === 'string';\n  }\n\n  //\n  // What this fiber component renders\n  //\n\n  get isDOMComponent() {\n    return !!this.__fiber.child && FiberNavigator.fromFiber(this.__fiber.child).isHostComponent;\n  }\n\n  // https://github.com/facebook/react/blob/16.8.6/packages/react-dom/src/test-utils/ReactTestUtils.js#L193\n  get isCompositeComponent() {\n    return this.isDOMComponent ? false : !!this.instance && !!this.instance.render && !!this.instance.setState;\n  }\n}\n"],"file":"FiberNavigator.js"}