{"version":3,"sources":["components/Debug/DebugRect.tsx"],"names":["React","cropMarkStyle","position","background","DebugRect","selectorRef","createRef","setDebugSelectorPosition","fiberNav","props","domNode","getBoundingClientRect","current","rect","style","top","left","width","height","requestAnimationFrame","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","showBackground","showClassName","showCropMarks","showElement","renderLabel","label","padding","margin","outline","outlineOffset","zIndex","pointerEvents","userSelect","bottom","color","fontWeight","right","fontSize","tagName","toLowerCase","hasAttribute","getAttribute","replace","Component","defaultProps","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FiberNavigator } from './FiberNavigator';\n\ninterface DebugRectProps {\n  showBackground?: boolean;\n  showClassName?: boolean;\n  showCropMarks?: boolean;\n  showElement?: boolean;\n  fiberNav: FiberNavigator;\n  renderLabel?: (fiberNav: FiberNavigator) => string;\n}\n\nconst cropMarkStyle: React.CSSProperties = {\n  position: 'absolute',\n  background: '#6495ed88',\n};\n\nexport class DebugRect extends React.Component<DebugRectProps> {\n  selectorRef = React.createRef<HTMLPreElement>();\n\n  static defaultProps = {\n    showBackground: true,\n    showClassName: true,\n    showElement: true,\n    renderLabel: fiberNav => `<${fiberNav.name} />`,\n  };\n\n  componentDidMount() {\n    this.setDebugSelectorPosition();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.setDebugSelectorPosition();\n  }\n\n  setDebugSelectorPosition = () => {\n    const { fiberNav } = this.props;\n\n    if (\n      fiberNav &&\n      fiberNav.domNode &&\n      fiberNav.domNode.getBoundingClientRect &&\n      typeof fiberNav.domNode.getBoundingClientRect === 'function' &&\n      this.selectorRef.current\n    ) {\n      const rect = fiberNav.domNode.getBoundingClientRect();\n\n      this.selectorRef.current.style.top = `${rect.top}px`;\n      this.selectorRef.current.style.left = `${rect.left}px`;\n      this.selectorRef.current.style.width = `${rect.width}px`;\n      this.selectorRef.current.style.height = `${rect.height}px`;\n\n      requestAnimationFrame(this.setDebugSelectorPosition);\n    }\n  };\n\n  render() {\n    const { fiberNav, showBackground, showClassName, showCropMarks, showElement, renderLabel } = this.props;\n\n    if (!fiberNav) {\n      return null;\n    }\n\n    const label = renderLabel(fiberNav);\n\n    return (\n      <pre\n        ref={this.selectorRef}\n        style={{\n          position: 'fixed',\n          padding: 0,\n          margin: 0,\n          background: showBackground ? '#6495ed11' : 'none',\n          outline: '2px solid #6495edcc',\n          outlineOffset: '-1px',\n          zIndex: 99999999,\n          pointerEvents: 'none',\n          userSelect: 'none',\n        }}\n      >\n        {label && (\n          <div\n            style={{\n              position: 'absolute',\n              padding: '2px 4px',\n              margin: '-1px 0 0 -1px',\n              bottom: '100%',\n              left: 0,\n              color: '#fff',\n              background: '#6495ed',\n              zIndex: 1, // above crop marks\n            }}\n          >\n            <span style={{ fontWeight: 'bold' }}>{renderLabel(fiberNav)}</span>\n          </div>\n        )}\n        {showCropMarks && (\n          <>\n            {/* Top Left */}\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '12px',\n                height: '1px',\n                top: '0',\n                left: '-20px',\n              }}\n            />\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '1px',\n                height: '12px',\n                top: '-20px',\n                left: '0',\n              }}\n            />\n\n            {/* Top Right */}\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '12px',\n                height: '1px',\n                top: '0',\n                right: '-20px',\n              }}\n            />\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '1px',\n                height: '12px',\n                top: '-20px',\n                right: '0',\n              }}\n            />\n\n            {/* Bottom Left */}\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '12px',\n                height: '1px',\n                bottom: '0',\n                left: '-20px',\n              }}\n            />\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '1px',\n                height: '12px',\n                bottom: '-20px',\n                left: '0',\n              }}\n            />\n\n            {/* Bottom Right */}\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '12px',\n                height: '1px',\n                bottom: '0',\n                right: '-20px',\n              }}\n            />\n            <div\n              style={{\n                ...cropMarkStyle,\n                width: '1px',\n                height: '12px',\n                bottom: '-20px',\n                right: '0',\n              }}\n            />\n          </>\n        )}\n        {fiberNav.domNode && (showElement || showClassName) && (\n          <div\n            style={{\n              fontSize: '0.9em',\n              position: 'absolute',\n              padding: '2px 4px',\n              margin: '0 0 1px -1px',\n              top: '100%',\n              left: 0,\n              background: '#6495ed',\n            }}\n          >\n            {showElement && (\n              <strong style={{ fontWeight: 'bold', color: 'hsl(160, 100%, 80%)' }}>\n                {fiberNav.domNode.tagName && fiberNav.domNode.tagName.toLowerCase()}\n              </strong>\n            )}\n            {showClassName &&\n              fiberNav.domNode.hasAttribute &&\n              typeof fiberNav.domNode.hasAttribute === 'function' &&\n              fiberNav.domNode.hasAttribute('class') && (\n                <span style={{ color: 'rgba(255, 255, 255, 0.75)' }}>\n                  .{(fiberNav.domNode.getAttribute('class') || '').replace(/ +/g, '.')}\n                </span>\n              )}\n          </div>\n        )}\n      </pre>\n    );\n  }\n}\n"],"file":"DebugRect.js"}