{"version":3,"sources":["components/Debug/Debug.tsx"],"names":["getCode","keyboardKey","PropTypes","React","EventListener","isBrowser","isDebugEnabled","DebugPanel","FiberNavigator","DebugRect","INITIAL_STATE","fiberNav","selectedFiberNav","isSelecting","Debug","p","s","state","debugReactComponent","r","console","error","_reactInternalFiber","fluentUIDebug","fromFiber","setState","debugDOMNode","domNode","fromDOMNode","findOwner","fiber","handleKeyDown","e","code","Escape","stopSelecting","d","altKey","shiftKey","startSelecting","handleMouseMove","target","handleDOMNodeClick","preventDefault","stopPropagation","selectFiber","changeFiber","positionRight","debugPanelPosition","positionLeft","close","process","env","NODE_ENV","window","openDebugPanel","$r","render","mountDocument","props","body","instance","Component","defaultProps","document","propTypes","object","isRequired"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,yBAArC;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,0CAA9B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA;;AAcA,IAAMC,aAAyB,GAAG;AAChCC,EAAAA,QAAQ,EAAE,IADsB;AAEhCC,EAAAA,gBAAgB,EAAE,IAFc;AAGhCC,EAAAA,WAAW,EAAE;AAHmB,CAAlC;AAMA,WAAaC,KAAb;AAAA;;AAYE,iBAAYC,CAAZ,EAAeC,CAAf,EAAkB;AAAA;;AAChB,wCAAMD,CAAN,EAASC,CAAT;AADgB,UAXlBC,KAWkB,GAXVP,aAWU;;AAAA,UAWlBQ,mBAXkB,GAWI,UAAAC,CAAC,EAAI;AACzB,UAAI,CAACA,CAAL,EAAQ;AACNC,QAAAA,OAAO,CAACC,KAAR,CACE,oGADF;AAGA;AACD;;AACD,UAAI,CAACF,CAAC,CAACG,mBAAP,EAA4B;AAC1BF,QAAAA,OAAO,CAACC,KAAR,CACE,uGADF;AAGA;AACD;;AACD,UAAI,CAACF,CAAC,CAACI,aAAP,EAAsB;AACpBH,QAAAA,OAAO,CAACC,KAAR,CAAc,qEAAd;AACA;AACD;;AAED,UAAMV,QAAQ,GAAGH,cAAc,CAACgB,SAAf,CAAyBL,CAAC,CAACG,mBAA3B,CAAjB;;AACA,YAAKG,QAAL,CAAc;AAAEd,QAAAA,QAAQ,EAARA,QAAF;AAAYE,QAAAA,WAAW,EAAE,KAAzB;AAAgCD,QAAAA,gBAAgB,EAAE;AAAlD,OAAd;AACD,KA/BiB;;AAAA,UAiClBc,YAjCkB,GAiCH,UAAAC,OAAO,EAAI;AACxB,UAAIhB,QAAQ,GAAGH,cAAc,CAACoB,WAAf,CAA2BD,OAA3B,CAAf;;AAEA,UAAI,CAAChB,QAAL,EAAe;AACbS,QAAAA,OAAO,CAACC,KAAR,CAAc,uBAAd,EAAuCM,OAAvC;AACA;AACD;;AAEDhB,MAAAA,QAAQ,GAAGA,QAAQ,CAACkB,SAAT,CAAmB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACP,aAAV;AAAA,OAAxB,CAAX;;AAEA,UAAIZ,QAAQ,KAAK,MAAKM,KAAL,CAAWN,QAA5B,EAAsC;AACpC,cAAKc,QAAL,CAAc;AAAEd,UAAAA,QAAQ,EAARA;AAAF,SAAd;AACD;AACF,KA9CiB;;AAAA,UAgDlBoB,aAhDkB,GAgDF,UAAAC,CAAC,EAAI;AACnB,UAAMC,IAAI,GAAGjC,OAAO,CAACgC,CAAD,CAApB;;AAEA,cAAQC,IAAR;AACE,aAAKhC,WAAW,CAACiC,MAAjB;AACE,gBAAKC,aAAL;;AACA;;AAEF,aAAKlC,WAAW,CAACmC,CAAjB;AACE,cAAIJ,CAAC,CAACK,MAAF,IAAYL,CAAC,CAACM,QAAlB,EAA4B;AAC1B,kBAAKC,cAAL;AACD;;AACD;AATJ;AAWD,KA9DiB;;AAAA,UAgElBC,eAhEkB,GAgEA,UAAAR,CAAC,EAAI;AACrB,YAAKN,YAAL,CAAkBM,CAAC,CAACS,MAApB;AACD,KAlEiB;;AAAA,UAoElBC,kBApEkB,GAoEG,UAAAV,CAAC,EAAI;AACxBA,MAAAA,CAAC,CAACW,cAAF;AACAX,MAAAA,CAAC,CAACY,eAAF;;AAEA,YAAKnB,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAzEiB;;AAAA,UA2ElB0B,cA3EkB,GA2ED,YAAM;AACrB,UAAM1B,WAAW,GAAG,CAAC,MAAKI,KAAL,CAAWJ,WAAhC;;AAEA,YAAKY,QAAL,mBACM,CAACZ,WAAD,IAAgBH,aADtB;AAEEG,QAAAA,WAAW,EAAXA;AAFF;AAID,KAlFiB;;AAAA,UAoFlBsB,aApFkB,GAoFF,YAAM;AACpB,YAAKV,QAAL,CAAcf,aAAd;AACD,KAtFiB;;AAAA,UAwFlBmC,WAxFkB,GAwFJ,UAAAjC,gBAAgB;AAAA,aAAI,MAAKa,QAAL,CAAc;AAAEb,QAAAA,gBAAgB,EAAhBA;AAAF,OAAd,CAAJ;AAAA,KAxFZ;;AAAA,UA0FlBkC,WA1FkB,GA0FJ,UAAAnC,QAAQ;AAAA,aAAI,MAAKc,QAAL,CAAc;AAAEd,QAAAA,QAAQ,EAARA;AAAF,OAAd,CAAJ;AAAA,KA1FJ;;AAAA,UA4FlBoC,aA5FkB,GA4FF;AAAA,aAAM,MAAKtB,QAAL,CAAc;AAAEuB,QAAAA,kBAAkB,EAAE;AAAtB,OAAd,CAAN;AAAA,KA5FE;;AAAA,UA8FlBC,YA9FkB,GA8FH;AAAA,aAAM,MAAKxB,QAAL,CAAc;AAAEuB,QAAAA,kBAAkB,EAAE;AAAtB,OAAd,CAAN;AAAA,KA9FG;;AAAA,UAgGlBE,KAhGkB,GAgGV;AAAA,aAAM,MAAKzB,QAAL,CAAcf,aAAd,CAAN;AAAA,KAhGU;;AAEhB,QAAIyC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC/C,cAAzC,IAA2DD,SAAS,EAAxE,EAA4E;AAC1E;AACCiD,MAAAA,MAAD,CAAgBC,cAAhB,GAAiC,YAAM;AACrC;AACA,cAAKrC,mBAAL,CAA0BoC,MAAD,CAAgBE,EAAzC;AACD,OAHD;AAID;;AARe;AASjB;;AArBH;;AAAA,SA8GEC,MA9GF,GA8GE,kBAAS;AAAA,QACCC,aADD,GACmB,KAAKC,KADxB,CACCD,aADD;AAAA,sBAEiE,KAAKzC,KAFtE;AAAA,QAECN,QAFD,eAECA,QAFD;AAAA,QAEWC,gBAFX,eAEWA,gBAFX;AAAA,QAE6BC,WAF7B,eAE6BA,WAF7B;AAAA,QAE0CmC,kBAF1C,eAE0CA,kBAF1C;;AAIP,QAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC/C,cAA7C,EAA6D;AAC3D,0BACE,uDACE,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,KAAKyB,aAA9B;AAA6C,QAAA,MAAM,EAAE2B,aAAa,CAACE,IAAnE;AAAyE,QAAA,IAAI,EAAC;AAA9E,QADF,EAEG/C,WAAW,iBACV,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,KAAK2B,eAA9B;AAA+C,QAAA,MAAM,EAAEkB,aAAa,CAACE,IAArE;AAA2E,QAAA,IAAI,EAAC;AAAhF,QAHJ,EAKG/C,WAAW,IAAIF,QAAf,IAA2BA,QAAQ,CAACgB,OAApC,iBACC,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,KAAKe,kBAA9B;AAAkD,QAAA,MAAM,EAAE/B,QAAQ,CAACgB,OAAnE;AAA4E,QAAA,IAAI,EAAC;AAAjF,QANJ,EAQGd,WAAW,IAAIF,QAAf,iBAA2B,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAEA;AAArB,QAR9B,EASGC,gBAAgB,iBAAI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAEA;AAArB,QATvB,EAUG,CAACC,WAAD,IAAgBF,QAAhB,IAA4BA,QAAQ,CAACkD,QAArC,iBACC,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAElD,QADZ;AAEE,QAAA,4BAA4B,EAAE,KAAK4B,cAFrC;AAGE,QAAA,OAAO,EAAE,KAAKW,KAHhB,CAIE;AACA;AALF;AAME,QAAA,SAAS,EAAEvC,QAAQ,CAACY,aANtB;AAOE,QAAA,QAAQ,EAAEyB,kBAAkB,IAAI,OAPlC;AAQE,QAAA,cAAc,EAAE,KAAKC,YARvB;AASE,QAAA,eAAe,EAAE,KAAKF,aATxB;AAUE,QAAA,cAAc,EAAE,KAAKD,WAVvB;AAWE,QAAA,eAAe,EAAE,KAAKD;AAXxB,QAXJ,CADF;AA4BD;;AAED,WAAO,IAAP;AACD,GAlJH;;AAAA;AAAA,EAA2B1C,KAAK,CAAC2D,SAAjC;AAAahD,K,CAGJiD,Y,GAAe;AACpB;AACAL,EAAAA,aAAa,EAAErD,SAAS,KAAKiD,MAAM,CAACU,QAAZ,GAAuB;AAF3B,C;AAHXlD,K,CAQJmD,S,GAAY;AACjBP,EAAAA,aAAa,EAAExD,SAAS,CAACgE,MAAV,CAAiBC;AADf,C","sourcesContent":["import { getCode, keyboardKey } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { EventListener } from '@fluentui/react-component-event-listener';\n\nimport { isBrowser } from '../../utils';\nimport { isDebugEnabled } from '@fluentui/styles';\n\nimport { DebugPanel } from './DebugPanel';\nimport { FiberNavigator } from './FiberNavigator';\nimport { DebugRect } from './DebugRect';\n\n/* eslint-disable no-console */\n\nexport type DebugProps = {\n  /** Existing document the popup should add listeners. */\n  mountDocument?: Document;\n};\n\nexport type DebugState = {\n  debugPanelPosition?: 'left' | 'right';\n  fiberNav: FiberNavigator;\n  selectedFiberNav: FiberNavigator;\n  isSelecting: boolean;\n};\n\nconst INITIAL_STATE: DebugState = {\n  fiberNav: null,\n  selectedFiberNav: null,\n  isSelecting: false,\n};\n\nexport class Debug extends React.Component<DebugProps, DebugState> {\n  state = INITIAL_STATE;\n\n  static defaultProps = {\n    // eslint-disable-next-line no-undef\n    mountDocument: isBrowser() ? window.document : null,\n  };\n\n  static propTypes = {\n    mountDocument: PropTypes.object.isRequired,\n  };\n\n  constructor(p, s) {\n    super(p, s);\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled && isBrowser()) {\n      // eslint-disable-next-line no-undef\n      (window as any).openDebugPanel = () => {\n        // eslint-disable-next-line no-undef\n        this.debugReactComponent((window as any).$r);\n      };\n    }\n  }\n\n  debugReactComponent = r => {\n    if (!r) {\n      console.error(\n        \"No React component selected. Please select a Fluent UI component from the React's Component panel.\",\n      );\n      return;\n    }\n    if (!r._reactInternalFiber) {\n      console.error(\n        'React does not provide data for debugging for this component. Try selecting some Fluent UI component.',\n      );\n      return;\n    }\n    if (!r.fluentUIDebug) {\n      console.error('Not a debuggable component. Try selecting some Fluent UI component.');\n      return;\n    }\n\n    const fiberNav = FiberNavigator.fromFiber(r._reactInternalFiber);\n    this.setState({ fiberNav, isSelecting: false, selectedFiberNav: null });\n  };\n\n  debugDOMNode = domNode => {\n    let fiberNav = FiberNavigator.fromDOMNode(domNode);\n\n    if (!fiberNav) {\n      console.error('No fiber for dom node', domNode);\n      return;\n    }\n\n    fiberNav = fiberNav.findOwner(fiber => fiber.fluentUIDebug);\n\n    if (fiberNav !== this.state.fiberNav) {\n      this.setState({ fiberNav });\n    }\n  };\n\n  handleKeyDown = e => {\n    const code = getCode(e);\n\n    switch (code) {\n      case keyboardKey.Escape:\n        this.stopSelecting();\n        break;\n\n      case keyboardKey.d:\n        if (e.altKey && e.shiftKey) {\n          this.startSelecting();\n        }\n        break;\n    }\n  };\n\n  handleMouseMove = e => {\n    this.debugDOMNode(e.target);\n  };\n\n  handleDOMNodeClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState({ isSelecting: false });\n  };\n\n  startSelecting = () => {\n    const isSelecting = !this.state.isSelecting;\n\n    this.setState({\n      ...(!isSelecting && INITIAL_STATE),\n      isSelecting,\n    });\n  };\n\n  stopSelecting = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  selectFiber = selectedFiberNav => this.setState({ selectedFiberNav });\n\n  changeFiber = fiberNav => this.setState({ fiberNav });\n\n  positionRight = () => this.setState({ debugPanelPosition: 'right' });\n\n  positionLeft = () => this.setState({ debugPanelPosition: 'left' });\n\n  close = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { mountDocument } = this.props;\n    const { fiberNav, selectedFiberNav, isSelecting, debugPanelPosition } = this.state;\n\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n      return (\n        <>\n          <EventListener listener={this.handleKeyDown} target={mountDocument.body} type=\"keydown\" />\n          {isSelecting && (\n            <EventListener listener={this.handleMouseMove} target={mountDocument.body} type=\"mousemove\" />\n          )}\n          {isSelecting && fiberNav && fiberNav.domNode && (\n            <EventListener listener={this.handleDOMNodeClick} target={fiberNav.domNode} type=\"click\" />\n          )}\n          {isSelecting && fiberNav && <DebugRect fiberNav={fiberNav} />}\n          {selectedFiberNav && <DebugRect fiberNav={selectedFiberNav} />}\n          {!isSelecting && fiberNav && fiberNav.instance && (\n            <DebugPanel\n              fiberNav={fiberNav}\n              onActivateDebugSelectorClick={this.startSelecting}\n              onClose={this.close}\n              // TODO: Integrate CSS in JS Styles for Host Components (DOM nodes)\n              // cssStyles={stylesForNode(domNode)}\n              debugData={fiberNav.fluentUIDebug}\n              position={debugPanelPosition || 'right'}\n              onPositionLeft={this.positionLeft}\n              onPositionRight={this.positionRight}\n              onFiberChanged={this.changeFiber}\n              onFiberSelected={this.selectFiber}\n            />\n          )}\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n"],"file":"Debug.js"}