import * as PropTypes from 'prop-types';
import * as React from 'react';
import { FiberNavigator } from './FiberNavigator';
export declare type DebugSelectorProps = {
    /** Existing document the popup should add listeners. */
    mountDocument?: Document;
    onSelect?: (fiberNav: FiberNavigator) => void;
    onHover?: (fiberNav: FiberNavigator) => void;
    renderLabel?: (fiberNav: FiberNavigator) => string;
    showBackground?: boolean;
    showClassName?: boolean;
    showCropMarks?: boolean;
    showElement?: boolean;
    filter?: (fiberNav: FiberNavigator) => FiberNavigator | null;
    active?: boolean;
};
export declare type DebugSelectorState = {
    fiberNav: FiberNavigator;
};
export declare class DebugSelector extends React.Component<DebugSelectorProps, DebugSelectorState> {
    state: DebugSelectorState;
    static defaultProps: {
        active: boolean;
        filter: (fiberNav: any) => any;
        mountDocument: Document;
    };
    static propTypes: {
        mountDocument: PropTypes.Validator<object>;
    };
    debugDOMNode: (domNode: any) => void;
    setCurrentFiberNav: (fiberNav: FiberNavigator | null) => void;
    handleMouseMove: (e: any) => void;
    handleMouseLeave: (e: any) => void;
    handleDOMNodeClick: (e: any) => void;
    render(): JSX.Element;
}
