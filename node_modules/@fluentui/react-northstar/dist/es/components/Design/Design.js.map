{"version":3,"sources":["components/Design/Design.tsx"],"names":["useFluentContext","customPropTypes","React","PropTypes","Design","config","children","context","getConfig","useCallback","styleParam","displayName","disableAnimations","direction","rtl","sanitizeCss","performance","enableSanitizeCssPlugin","className","renderer","renderRule","propTypes","func","isRequired","design"],"mappings":"AAAA,SAA8BA,gBAA9B,QAAsD,0BAAtD;AAEA,OAAO,KAAKC,eAAZ,MAAiC,2BAAjC;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;;AAYA;AACA;AACA;AACA;AACA,WAAgBC,MAAhB;AAAO,WAASA,MAAT,OAAmD;AAAA,QAApBC,MAAoB,QAApBA,MAAoB;AAAA,QAAZC,QAAY,QAAZA,QAAY;AACxD,QAAMC,OAAO,GAAGP,gBAAgB,EAAhC;AACA,QAAMQ,SAAS,GAAGN,KAAK,CAACO,WAAN,CAAkB;AAAA,aAAMJ,MAAN;AAAA,KAAlB,EAAgC,CAACA,MAAD,CAAhC,CAAlB,CAFwD,CAIxD;;AACA,QAAMK,UAAyB,GAAG;AAChCC,MAAAA,WAAW,EAAEP,MAAM,CAACO,WADY;AAEhCC,MAAAA,iBAAiB,EAAEL,OAAO,CAACK,iBAFK;AAGhCC,MAAAA,SAAS,EAAEN,OAAO,CAACO,GAAR,GAAc,KAAd,GAAsB,KAHD;AAIhCC,MAAAA,WAAW,EAAER,OAAO,CAACS,WAAR,CAAoBC;AAJD,KAAlC;AAOA,QAAMC,SAAS,GAAGX,OAAO,CAACY,QAAR,CAAiBC,UAAjB,CAA4BZ,SAA5B,EAAwDE,UAAxD,CAAlB;AAEA,WAAOJ,QAAQ,CAAC;AAAEY,MAAAA,SAAS,EAATA;AAAF,KAAD,CAAf;AACD;;AAEDd,EAAAA,MAAM,CAACO,WAAP,GAAqB,QAArB;AAEAP,EAAAA,MAAM,CAACiB,SAAP,GAAmB;AACjBf,IAAAA,QAAQ,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UADR;AAGjBlB,IAAAA,MAAM,EAAEJ,eAAe,CAACuB,MAAhB,CAAuBD;AAHd,GAAnB;AAnBA,SAAgBnB,MAAhB;AAAA","sourcesContent":["import { ComponentDesignProp, useFluentContext } from '@fluentui/react-bindings';\nimport { RendererParam } from '@fluentui/react-northstar-styles-renderer';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { ICSSInJSStyle } from '@fluentui/styles';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { ReactChildren } from '../../types';\n\nexport type DesignProps = {\n  /** A render function that receives the generated className as its only argument */\n  children: ({ className: string }) => ReactChildren;\n\n  /** Design config takes a limited set of layout and position CSS properties. */\n  config: ComponentDesignProp;\n};\n\n/**\n * The Design component provides a theme safe subset of CSS for designing layouts.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function Design<DesignProps>({ config, children }) {\n  const context = useFluentContext();\n  const getConfig = React.useCallback(() => config, [config]);\n\n  // Heads Up! Keep in sync with renderComponent.tsx\n  const styleParam: RendererParam = {\n    displayName: Design.displayName,\n    disableAnimations: context.disableAnimations,\n    direction: context.rtl ? 'rtl' : 'ltr',\n    sanitizeCss: context.performance.enableSanitizeCssPlugin,\n  };\n\n  const className = context.renderer.renderRule(getConfig as ICSSInJSStyle, styleParam);\n\n  return children({ className });\n}\n\nDesign.displayName = 'Design';\n\nDesign.propTypes = {\n  children: PropTypes.func.isRequired,\n\n  config: customPropTypes.design.isRequired,\n};\n"],"file":"Design.js"}