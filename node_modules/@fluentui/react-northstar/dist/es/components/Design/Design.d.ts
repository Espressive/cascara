import { ComponentDesignProp } from '@fluentui/react-bindings';
import * as PropTypes from 'prop-types';
import { ReactChildren } from '../../types';
export declare type DesignProps = {
    /** A render function that receives the generated className as its only argument */
    children: ({ className: string }: {
        className: any;
    }) => ReactChildren;
    /** Design config takes a limited set of layout and position CSS properties. */
    config: ComponentDesignProp;
};
/**
 * The Design component provides a theme safe subset of CSS for designing layouts.
 */
export declare function Design<DesignProps>({ config, children }: {
    config: any;
    children: any;
}): any;
export declare namespace Design {
    var displayName: string;
    var propTypes: {
        children: PropTypes.Validator<(...args: any[]) => any>;
        config: PropTypes.Validator<PropTypes.InferProps<{
            position: PropTypes.Requireable<any>;
            display: PropTypes.Requireable<any>;
            top: PropTypes.Requireable<string>;
            right: PropTypes.Requireable<string>;
            bottom: PropTypes.Requireable<string>;
            left: PropTypes.Requireable<string>;
            padding: PropTypes.Requireable<string>;
            paddingTop: PropTypes.Requireable<string>;
            paddingRight: PropTypes.Requireable<string>;
            paddingBottom: PropTypes.Requireable<string>;
            paddingLeft: PropTypes.Requireable<string>;
            margin: PropTypes.Requireable<string>;
            marginTop: PropTypes.Requireable<string>;
            marginRight: PropTypes.Requireable<string>;
            marginBottom: PropTypes.Requireable<string>;
            marginLeft: PropTypes.Requireable<string>;
            width: PropTypes.Requireable<string>;
            height: PropTypes.Requireable<string>;
            minWidth: PropTypes.Requireable<string>;
            maxWidth: PropTypes.Requireable<string>;
            minHeight: PropTypes.Requireable<string>;
            maxHeight: PropTypes.Requireable<string>;
        }>>;
    };
}
