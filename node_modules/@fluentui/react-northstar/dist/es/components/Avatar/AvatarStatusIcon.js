import * as React from 'react';
import { useFluentContext, useTelemetry, useStyles, useAccessibility, getElementType, useUnhandledProps } from '@fluentui/react-bindings';
import * as PropTypes from 'prop-types';
import { commonPropTypes, createShorthandFactory } from '../../utils';
export var avatarStatusIconClassName = 'ui-avatar__statusicon';
/**
 * A AvatarStatusIcon provides a status icon for the Avatar.
 */

export var AvatarStatusIcon = /*#__PURE__*/function () {
  var AvatarStatusIcon = function AvatarStatusIcon(props) {
    var context = useFluentContext();

    var _useTelemetry = useTelemetry(AvatarStatusIcon.displayName, context.telemetry),
        setStart = _useTelemetry.setStart,
        setEnd = _useTelemetry.setEnd;

    setStart();
    var className = props.className,
        children = props.children,
        design = props.design,
        styles = props.styles,
        variables = props.variables,
        state = props.state;

    var _useStyles = useStyles(AvatarStatusIcon.displayName, {
      className: avatarStatusIconClassName,
      mapPropsToStyles: function mapPropsToStyles() {
        return {
          state: state
        };
      },
      mapPropsToInlineStyles: function mapPropsToInlineStyles() {
        return {
          className: className,
          design: design,
          styles: styles,
          variables: variables
        };
      },
      rtl: context.rtl
    }),
        classes = _useStyles.classes;

    var getA11Props = useAccessibility(props.accessibility, {
      debugName: AvatarStatusIcon.displayName,
      rtl: context.rtl
    });
    var ElementType = getElementType(props);
    var unhandledProps = useUnhandledProps(AvatarStatusIcon.handledProps, props);
    var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
      className: classes.root
    }, unhandledProps)), children);
    setEnd();
    return element;
  };

  AvatarStatusIcon.displayName = 'AvatarStatusIcon';
  AvatarStatusIcon.propTypes = Object.assign({}, commonPropTypes.createCommon(), {
    state: PropTypes.oneOf(['success', 'info', 'warning', 'error', 'unknown'])
  });
  AvatarStatusIcon.handledProps = Object.keys(AvatarStatusIcon.propTypes);
  AvatarStatusIcon.defaultProps = {
    as: 'span'
  };
  AvatarStatusIcon.create = createShorthandFactory({
    Component: AvatarStatusIcon
  });
  return AvatarStatusIcon;
}();
//# sourceMappingURL=AvatarStatusIcon.js.map
