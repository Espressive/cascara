{"version":3,"sources":["components/Avatar/Avatar.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","mergeVariablesOverrides","customPropTypes","PropTypes","React","createShorthandFactory","commonPropTypes","createShorthand","AvatarStatus","AvatarImage","AvatarIcon","AvatarLabel","avatarClassName","Avatar","props","context","displayName","telemetry","setStart","setEnd","accessibility","className","design","getInitials","label","icon","image","name","square","size","status","styles","variables","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","ElementType","unhandledProps","handledProps","imageElement","defaultProps","fluid","avatar","title","iconElement","labelElement","content","circular","hasGlyph","result","root","overrideProps","predefinedProps","reducedName","replace","initials","split","filter","item","map","charAt","reduce","accumulator","currentValue","length","propTypes","createCommon","children","string","shorthandAllowingChildren","itemShorthandWithoutJSX","itemShorthand","bool","func","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  mergeVariablesOverrides,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { createShorthandFactory, UIComponentProps, commonPropTypes, SizeValue, createShorthand } from '../../utils';\nimport { AvatarStatusProps, AvatarStatus } from './AvatarStatus';\nimport { AvatarImage, AvatarImageProps } from './AvatarImage';\nimport { AvatarIcon, AvatarIconProps } from './AvatarIcon';\nimport { AvatarLabel, AvatarLabelProps } from './AvatarLabel';\n\nexport interface AvatarProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** Avatar can contain icon. It will be rendered only if the image is not present. */\n  icon?: ShorthandValue<AvatarIconProps>;\n\n  /** Shorthand for the image. */\n  image?: ShorthandValue<AvatarImageProps>;\n\n  /** Shorthand for the label. */\n  label?: ShorthandValue<AvatarLabelProps>;\n\n  /** The name used for displaying the initials of the avatar if the image is not provided. */\n  name?: string;\n\n  /** The avatar can have a square shape. */\n  square?: boolean;\n\n  /** Size multiplier. */\n  size?: SizeValue;\n\n  /** Shorthand for the status of the user. */\n  status?: ShorthandValue<AvatarStatusProps>;\n\n  /** Custom method for generating the initials from the name property, which is shown if no image is provided. */\n  getInitials?: (name: string) => string;\n}\n\nexport type AvatarStylesProps = Pick<AvatarProps, 'size' | 'square'>;\nexport const avatarClassName = 'ui-avatar';\n\n/**\n * An Avatar is a graphical representation of a user.\n */\nexport const Avatar: ComponentWithAs<'div', AvatarProps> & FluentComponentStaticProps<AvatarProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Avatar.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    className,\n    design,\n    getInitials,\n    label,\n    icon,\n    image,\n    name,\n    square,\n    size,\n    status,\n    styles,\n    variables,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Avatar.displayName,\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles(Avatar.displayName, {\n    className: avatarClassName,\n    mapPropsToStyles: () => ({ size, square }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Avatar.handledProps, props);\n\n  const imageElement = createShorthand(AvatarImage, image, {\n    defaultProps: () =>\n      getA11Props('image', {\n        fluid: true,\n        avatar: !square,\n        title: name,\n        size,\n        // remove in upcoming breaking change\n        styles: resolvedStyles.image,\n      }),\n  });\n\n  const iconElement = createShorthand(AvatarIcon, icon, {\n    defaultProps: () =>\n      getA11Props('icon', {\n        title: name,\n        styles: resolvedStyles.icon,\n        size,\n        square,\n      }),\n  });\n\n  const labelElement = createShorthand(AvatarLabel, label || {}, {\n    defaultProps: () =>\n      getA11Props('label', {\n        content: getInitials(name),\n        circular: !square,\n        title: name,\n        size,\n        square,\n        styles: resolvedStyles.label,\n      }),\n  });\n\n  const hasGlyph = !!image || !!icon;\n\n  const result = (\n    <ElementType {...getA11Props('root', { className: classes.root, ...unhandledProps })}>\n      {hasGlyph && (imageElement || iconElement)}\n      {!hasGlyph && labelElement}\n      {createShorthand(AvatarStatus, status, {\n        defaultProps: () =>\n          getA11Props('status', {\n            size,\n            // remove in upcoming breaking change\n            styles: resolvedStyles.status,\n          }),\n        overrideProps: (predefinedProps: AvatarStatusProps) => ({\n          variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n        }),\n      })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n};\n\nAvatar.displayName = 'Avatar';\n\nAvatar.defaultProps = {\n  size: 'medium',\n  getInitials(name: string) {\n    if (!name) {\n      return '';\n    }\n\n    const reducedName = name\n      .replace(/\\s+/g, ' ')\n      .replace(/\\s*\\(.*?\\)\\s*/g, ' ')\n      .replace(/\\s*{.*?}\\s*/g, ' ')\n      .replace(/\\s*\\[.*?]\\s*/g, ' ');\n\n    const initials = reducedName\n      .split(' ')\n      .filter(item => item !== '')\n      .map(item => item.charAt(0))\n      .reduce((accumulator, currentValue) => accumulator + currentValue, '');\n\n    if (initials.length > 2) {\n      return initials.charAt(0) + initials.charAt(initials.length - 1);\n    }\n    return initials;\n  },\n};\n\nAvatar.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  name: PropTypes.string,\n  icon: customPropTypes.shorthandAllowingChildren,\n  image: customPropTypes.itemShorthandWithoutJSX,\n  label: customPropTypes.itemShorthand,\n  square: PropTypes.bool,\n  size: customPropTypes.size,\n  status: customPropTypes.itemShorthand,\n  getInitials: PropTypes.func,\n};\n\nAvatar.handledProps = Object.keys(Avatar.propTypes) as any;\n\nAvatar.create = createShorthandFactory({ Component: Avatar, mappedProp: 'name' });\n"],"file":"Avatar.js"}