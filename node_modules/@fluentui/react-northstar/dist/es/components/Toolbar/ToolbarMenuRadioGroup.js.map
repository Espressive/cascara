{"version":3,"sources":["components/Toolbar/ToolbarMenuRadioGroup.tsx"],"names":["toolbarMenuRadioGroupBehavior","toolbarMenuItemRadioBehavior","compose","mergeVariablesOverrides","getElementType","useUnhandledProps","useAccessibility","useStyles","useFluentContext","useTelemetry","customPropTypes","PropTypes","React","createShorthand","commonPropTypes","ToolbarMenuItem","ToolbarMenuRadioGroupWrapper","ToolbarVariablesContext","ToolbarVariablesProvider","toolbarMenuRadioGroupClassName","ToolbarMenuRadioGroup","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","activeIndex","className","design","items","styles","variables","wrapper","slotProps","resolveSlotProps","parentVariables","useContext","mergedVariables","getA11yProps","debugName","rtl","mapPropsToInlineStyles","unstable_props","classes","handleItemOverrides","predefinedProps","onClick","e","itemProps","ElementType","unhandledProps","handledProps","content","root","item","index","defaultProps","as","active","overrideProps","element","slots","children","propTypes","createCommon","number","collectionShorthand","onItemClick","func","itemShorthand"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  toolbarMenuRadioGroupBehavior,\n  toolbarMenuItemRadioBehavior,\n  ToolbarMenuRadioGroupBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  compose,\n  mergeVariablesOverrides,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthand,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  UIComponentProps,\n  commonPropTypes,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandCollection, ShorthandValue } from '../../types';\nimport { ToolbarMenuItem, ToolbarMenuItemProps } from './ToolbarMenuItem';\nimport { ToolbarMenuRadioGroupWrapper, ToolbarMenuRadioGroupWrapperProps } from './ToolbarMenuRadioGroupWrapper';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport interface ToolbarMenuRadioGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuRadioGroupBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /** Shorthand array of props for ToolbarMenuRadioGroup. */\n  items?: ShorthandCollection<ToolbarMenuItemProps>;\n\n  /**\n   * Called on item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<ToolbarMenuRadioGroupWrapperProps>;\n}\n\nexport type ToolbarMenuRadioGroupStylesProps = never;\n\nexport const toolbarMenuRadioGroupClassName = 'ui-toolbars'; // FIXME: required by getComponentInfo/isConformant. But this is group inside a toolbar not a group of toolbars\n\n/**\n * A ToolbarMenuRadioGroup renders ToolbarMenuItem as a group of mutually exclusive options.\n */\nexport const ToolbarMenuRadioGroup = compose<\n  'ul',\n  ToolbarMenuRadioGroupProps,\n  ToolbarMenuRadioGroupStylesProps,\n  {},\n  {}\n>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, activeIndex, className, design, items, styles, variables, wrapper } = props;\n\n    const slotProps = composeOptions.resolveSlotProps<ToolbarMenuRadioGroupProps>(props);\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarMenuRadioGroupStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const handleItemOverrides = (predefinedProps: ToolbarMenuItemProps): ToolbarMenuItemProps => ({\n      onClick: (e, itemProps) => {\n        _.invoke(predefinedProps, 'onClick', e, itemProps);\n        _.invoke(props, 'onItemClick', e, itemProps);\n      },\n      wrapper: null,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const content = (\n      <ElementType {...getA11yProps('root', { ...unhandledProps, className: classes.root, ref })}>\n        <ToolbarVariablesProvider value={mergedVariables}>\n          {_.map(items, (item, index) =>\n            createShorthand(ToolbarMenuItem, item, {\n              defaultProps: () => ({\n                accessibility: toolbarMenuItemRadioBehavior,\n                as: 'li',\n                active: activeIndex === index,\n                index,\n              }),\n              overrideProps: handleItemOverrides,\n            }),\n          )}\n        </ToolbarVariablesProvider>\n      </ElementType>\n    );\n    const element = createShorthand(composeOptions.slots.wrapper, wrapper, {\n      defaultProps: () => getA11yProps('wrapper', slotProps.wrapper || {}),\n      overrideProps: {\n        children: content,\n      },\n    });\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarMenuRadioGroupClassName,\n    displayName: 'ToolbarMenuRadioGroup',\n\n    slots: {\n      wrapper: ToolbarMenuRadioGroupWrapper,\n    },\n\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n\n      'activeIndex',\n      'items',\n      'onItemClick',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarMenuRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  activeIndex: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuRadioGroup.defaultProps = {\n  as: 'ul',\n  accessibility: toolbarMenuRadioGroupBehavior,\n  wrapper: {},\n};\n"],"file":"ToolbarMenuRadioGroup.js"}