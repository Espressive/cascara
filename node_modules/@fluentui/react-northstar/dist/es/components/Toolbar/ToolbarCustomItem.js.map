{"version":3,"sources":["components/Toolbar/ToolbarCustomItem.tsx"],"names":["IS_FOCUSABLE_ATTRIBUTE","compose","getElementType","mergeVariablesOverrides","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","PropTypes","React","childrenExist","commonPropTypes","ToolbarVariablesContext","toolbarCustomItemClassName","ToolbarCustomItem","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","fitted","focusable","styles","variables","parentVariables","useContext","getA11yProps","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","ElementType","unhandledProps","handledProps","handleBlur","e","handleFocus","element","root","onBlur","onFocus","shorthandConfig","mappedProp","propTypes","createCommon","oneOfType","bool","oneOf","func"],"mappings":"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","sourcesContent":["import { Accessibility, IS_FOCUSABLE_ATTRIBUTE } from '@fluentui/accessibility';\nimport {\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ComponentEventHandler } from '../../types';\nimport {\n  ChildrenComponentProps,\n  ContentComponentProps,\n  UIComponentProps,\n  childrenExist,\n  commonPropTypes,\n} from '../../utils';\nimport { ToolbarVariablesContext } from './toolbarVariablesContext';\n\nexport interface ToolbarCustomItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A custom item can remove element padding, vertically or horizontally. */\n  fitted?: boolean | 'horizontally' | 'vertically';\n\n  /** A custom item can be focused. */\n  focusable?: boolean;\n\n  /** A custom item can't be actionable. */\n  onClick?: never;\n\n  /**\n   * Called after user's focus. Will be called only if the item is focusable.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ToolbarCustomItemProps>;\n\n  /**\n   * Called after item blur. Will be called only if the item is focusable.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ToolbarCustomItemProps>;\n}\n\nexport type ToolbarCustomItemStylesProps = Required<Pick<ToolbarCustomItemProps, 'fitted'>>;\nexport const toolbarCustomItemClassName = 'ui-toolbar__customitem';\n\n/**\n * A ToolbarCustomItem renders Toolbar item as a non-actionable `div` with custom content inside.\n */\nexport const ToolbarCustomItem = compose<'div', ToolbarCustomItemProps, ToolbarCustomItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, children, className, content, design, fitted, focusable, styles, variables } = props;\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarCustomItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({ fitted }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergeVariablesOverrides(parentVariables, variables),\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const handleBlur = (e: React.SyntheticEvent) => {\n      if (focusable) {\n        _.invoke(props, 'onBlur', e, props);\n      }\n    };\n\n    const handleFocus = (e: React.SyntheticEvent) => {\n      if (focusable) {\n        _.invoke(props, 'onFocus', e, props);\n      }\n    };\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          [IS_FOCUSABLE_ATTRIBUTE]: focusable,\n          ...unhandledProps,\n          className: classes.root,\n          onBlur: handleBlur,\n          onFocus: handleFocus,\n          ref,\n        })}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarCustomItemClassName,\n    displayName: 'ToolbarCustomItem',\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'fitted',\n      'focusable',\n      'onBlur',\n      'onFocus',\n      'styles',\n      'variables',\n    ],\n  },\n);\n\nToolbarCustomItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'horizontally' | 'vertically'>(['horizontally', 'vertically']),\n  ]),\n  focusable: PropTypes.bool,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n};\n"],"file":"ToolbarCustomItem.js"}