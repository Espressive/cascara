{"version":3,"sources":["components/Toolbar/ToolbarItem.tsx"],"names":["toolbarItemBehavior","compose","getElementType","mergeVariablesOverrides","useUnhandledProps","useFluentContext","useAccessibility","useStyles","useTelemetry","useContextSelectors","handleRef","Ref","EventListener","Unstable_NestingAuto","customPropTypes","PropTypes","React","createShorthand","doesNodeContainClick","commonPropTypes","childrenExist","partitionPopperPropsFromShorthand","Popper","ToolbarMenu","Popup","ToolbarVariablesContext","ToolbarVariablesProvider","ToolbarItemWrapper","ToolbarItemIcon","ToolbarMenuContext","toolbarItemClassName","ToolbarItem","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","active","className","design","icon","children","disabled","popup","menuOpen","wrapper","styles","variables","menu","positioningProps","itemRef","useRef","menuRef","parentVariables","useContext","mergedVariables","menuSlot","v","slots","getA11yProps","debugName","actionHandlers","performClick","event","preventDefault","handleClick","performWrapperClick","handleWrapperClick","closeMenuAndFocusTrigger","trySetMenuOpen","current","doNotNavigateNextToolbarItem","stopPropagation","mapPropsToBehavior","as","String","hasMenu","hasPopup","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","handleBlur","e","handleFocus","nativeEvent","target","handleOutsideClick","getRefs","isItemClick","isNestedClick","childRef","isInside","newValue","handleMenuOverrides","predefinedProps","onBlur","isInsideOrMenuTrigger","contains","relatedTarget","onItemClick","itemProps","ElementType","slotProps","resolveSlotProps","unhandledProps","handledProps","itemElement","node","root","onFocus","onClick","submenuElement","nestingRef","defaultProps","overrideProps","popupElement","trigger","undefined","contentElement","wrapperElement","trapFocus","shorthandConfig","mappedProp","propTypes","createCommon","bool","shorthandAllowingChildren","oneOfType","arrayOf","onMenuOpenChange","func","shape","never","string"],"mappings":"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","sourcesContent":["import { Accessibility, toolbarItemBehavior, ToolbarItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useContextSelectors,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { GetRefs, NodeRef, Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthand,\n  doesNodeContainClick,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection } from '../../types';\nimport { partitionPopperPropsFromShorthand, Popper, PopperShorthandProps } from '../../utils/positioner';\n\nimport { ToolbarMenu, ToolbarMenuProps } from './ToolbarMenu';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { ToolbarMenuItemProps } from '../Toolbar/ToolbarMenuItem';\nimport { ToolbarItemShorthandKinds } from './Toolbar';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarItemWrapper, ToolbarItemWrapperProps } from './ToolbarItemWrapper';\nimport { ToolbarItemIcon, ToolbarItemIconProps } from './ToolbarItemIcon';\nimport { ToolbarItemSubscribedValue, ToolbarMenuContext } from './toolbarMenuContext';\n\nexport interface ToolbarItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ToolbarItemBehaviorProps>;\n\n  /** A toolbar item can be active. */\n  active?: boolean;\n\n  /** A toolbar item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Name or shorthand for Toolbar Item Icon */\n  icon?: ShorthandValue<ToolbarItemIconProps>;\n\n  /**\n   * Shorthand for the submenu.\n   * If submenu is specified, the item is wrapped to group the item and the menu elements together.\n   */\n  menu?:\n    | ShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<ToolbarMenuItemProps, ToolbarItemShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /**\n   * Event for request to change 'menuOpen' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onMenuOpenChange?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called after item blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Attaches a `Popup` component to the ToolbarItem.\n   * Accepts all props as a `Popup`, except `trigger` and `children`.\n   * Traps focus by default.\n   * @see PopupProps\n   */\n  popup?: Omit<PopupProps, 'trigger' | 'children'> | string;\n\n  /** Shorthand for the wrapper component. The item is wrapped only if it contains a menu! */\n  wrapper?: ShorthandValue<ToolbarItemWrapperProps>;\n}\n\nexport type ToolbarItemStylesProps = Required<Pick<ToolbarItemProps, 'active' | 'disabled'>>;\n\nexport const toolbarItemClassName = 'ui-toolbar__item';\n\n/**\n * A ToolbarItem renders Toolbar item as a button with an icon.\n */\nexport const ToolbarItem = compose<'button', ToolbarItemProps, ToolbarItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      active,\n      className,\n      design,\n      icon,\n      children,\n      disabled,\n      popup,\n      menuOpen,\n      wrapper,\n      styles,\n      variables,\n    } = props;\n    const [menu, positioningProps] = partitionPopperPropsFromShorthand(props.menu);\n\n    const itemRef = React.useRef<HTMLElement>();\n    const menuRef = React.useRef<HTMLElement>();\n\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const { menuSlot } = (useContextSelectors(ToolbarMenuContext, {\n      menuSlot: v => v.slots.menu,\n    }) as unknown) as ToolbarItemSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n        performWrapperClick: event => {\n          handleWrapperClick(event);\n        },\n        closeMenuAndFocusTrigger: event => {\n          trySetMenuOpen(false, event);\n          _.invoke(itemRef.current, 'focus');\n        },\n        doNotNavigateNextToolbarItem: event => {\n          event.stopPropagation();\n        },\n      },\n      mapPropsToBehavior: () => ({\n        as: String(props.as),\n        disabled,\n        hasMenu: !!menu,\n        hasPopup: !!popup,\n        menuOpen,\n        active,\n      }),\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({ active, disabled }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const handleBlur = (e: React.SyntheticEvent) => {\n      _.invoke(props, 'onBlur', e, props);\n    };\n\n    const handleFocus = (e: React.SyntheticEvent) => {\n      _.invoke(props, 'onFocus', e, props);\n    };\n\n    const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (menu) {\n        trySetMenuOpen(!menuOpen, e);\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const handleWrapperClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (menu) {\n        if (doesNodeContainClick(menuRef.current, e.nativeEvent as MouseEvent, context.target, false)) {\n          trySetMenuOpen(false, e);\n        }\n      }\n    };\n\n    const handleOutsideClick = (getRefs: GetRefs) => (e: MouseEvent) => {\n      const isItemClick = doesNodeContainClick(itemRef.current, e, context.target);\n      const isNestedClick = _.some(getRefs(), (childRef: NodeRef) => {\n        return doesNodeContainClick(childRef.current as HTMLElement, e, context.target);\n      });\n      const isInside = isItemClick || isNestedClick;\n\n      if (!isInside) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    const trySetMenuOpen = (newValue: boolean, e: Event | React.SyntheticEvent) => {\n      _.invoke(props, 'onMenuOpenChange', e, { ...props, menuOpen: newValue });\n    };\n\n    const handleMenuOverrides = (getRefs: GetRefs) => (predefinedProps: ToolbarMenuProps) => ({\n      onBlur: (e: React.FocusEvent) => {\n        const isInsideOrMenuTrigger = _.some(getRefs(), (childRef: NodeRef) => {\n          return (\n            childRef.current.contains(e.relatedTarget as HTMLElement) ||\n            itemRef.current.contains(e.relatedTarget as HTMLElement)\n          );\n        });\n\n        if (!isInsideOrMenuTrigger) {\n          trySetMenuOpen(false, e);\n        }\n      },\n      onItemClick: (e, itemProps: ToolbarMenuItemProps) => {\n        const { popup, menuOpen } = itemProps;\n        _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n        if (popup) {\n          return;\n        }\n        // TODO: should we pass toolbarMenuItem to the user callback so he can decide if he wants to close the menu?\n        trySetMenuOpen(menuOpen, e);\n      },\n    });\n\n    const ElementType = getElementType(props);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarItemProps>(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const itemElement = (\n      <Ref\n        innerRef={node => {\n          itemRef.current = node;\n          handleRef(ref, node);\n        }}\n      >\n        <ElementType\n          {...getA11yProps('root', {\n            ...unhandledProps,\n            disabled,\n            className: classes.root,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onClick: handleClick,\n          })}\n        >\n          {childrenExist(children) ? children : createShorthand(composeOptions.slots.icon, icon, slotProps.icon)}\n        </ElementType>\n      </Ref>\n    );\n\n    const submenuElement = menuOpen ? (\n      <Unstable_NestingAuto>\n        {(getRefs, nestingRef) => {\n          return (\n            <>\n              <Ref\n                innerRef={(node: HTMLElement) => {\n                  nestingRef.current = node;\n                  menuRef.current = node;\n                }}\n              >\n                <Popper align=\"start\" position=\"above\" targetRef={itemRef} {...positioningProps}>\n                  <ToolbarVariablesProvider value={mergedVariables}>\n                    {createShorthand(composeOptions.slots.menu || menuSlot || ToolbarMenu, menu, {\n                      defaultProps: () => slotProps.menu,\n                      overrideProps: handleMenuOverrides(getRefs),\n                    })}\n                  </ToolbarVariablesProvider>\n                </Popper>\n              </Ref>\n              <EventListener listener={handleOutsideClick(getRefs)} target={context.target} type=\"click\" capture />\n            </>\n          );\n        }}\n      </Unstable_NestingAuto>\n    ) : null;\n\n    if (popup) {\n      const popupElement = createShorthand(composeOptions.slots.popup, popup, {\n        defaultProps: () => slotProps.popup,\n        overrideProps: {\n          trigger: itemElement,\n          children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger`\n        },\n      });\n      setEnd();\n\n      return popupElement;\n    }\n\n    // wrap the item if it has menu (even if it is closed = not rendered)\n    if (menu) {\n      const contentElement = (\n        <>\n          {itemElement}\n          {submenuElement}\n        </>\n      );\n\n      if (wrapper) {\n        const wrapperElement = createShorthand(composeOptions.slots.wrapper, wrapper, {\n          defaultProps: () => getA11yProps('wrapper', slotProps.wrapper || {}),\n          overrideProps: predefinedProps => ({\n            children: contentElement,\n            onClick: e => {\n              handleWrapperClick(e);\n              _.invoke(predefinedProps, 'onClick', e);\n            },\n          }),\n        });\n        setEnd();\n\n        return wrapperElement;\n      }\n\n      setEnd();\n      return contentElement;\n    }\n\n    setEnd();\n\n    return itemElement;\n  },\n  {\n    className: toolbarItemClassName,\n    displayName: 'ToolbarItem',\n\n    slots: {\n      icon: ToolbarItemIcon,\n      wrapper: ToolbarItemWrapper,\n      popup: Popup, // TODO: compose Popup to ToolbarItemPopup once it has compose functionality\n    },\n\n    slotProps: () => ({\n      popup: { trapFocus: true },\n    }),\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n      'active',\n      'disabled',\n      'icon',\n      'menu',\n      'menuOpen',\n      'onMenuOpenChange',\n      'onClick',\n      'onFocus',\n      'onBlur',\n      'popup',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  menu: PropTypes.oneOfType([\n    customPropTypes.shorthandAllowingChildren,\n    PropTypes.arrayOf(customPropTypes.shorthandAllowingChildren),\n  ]),\n  menuOpen: PropTypes.bool,\n  onMenuOpenChange: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  popup: PropTypes.oneOfType([\n    PropTypes.shape({\n      ...Popup.propTypes,\n      trigger: customPropTypes.never,\n      children: customPropTypes.never,\n    }),\n    PropTypes.string,\n  ]),\n  wrapper: customPropTypes.shorthandAllowingChildren,\n};\nToolbarItem.defaultProps = {\n  as: 'button',\n  accessibility: toolbarItemBehavior,\n  wrapper: {},\n};\n"],"file":"ToolbarItem.js"}