{"version":3,"sources":["components/Toolbar/ToolbarMenuItemSubmenuIndicator.tsx"],"names":["compose","commonPropTypes","Box","toolbarMenuItemSubmenuIndicatorClassName","ToolbarMenuItemSubmenuIndicator","className","displayName","mapPropsToStylesProps","props","hasContent","shorthandConfig","mappedProp","overrideStyles","defaultProps","as","propTypes","createCommon"],"mappings":"AAAA,SAASA,OAAT,QAAwB,0BAAxB;AAEA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,GAAT,QAA8C,YAA9C;AAQA,OAAO,IAAMC,wCAAwC,GAAG,sCAAjD;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,+BAAN;AAAA,MAAMA,+BAA+B,GAAGJ,OAAO,CAMpDE,GANoD,EAM/C;AACLG,IAAAA,SAAS,EAAEF,wCADN;AAELG,IAAAA,WAAW,EAAE,iCAFR;AAILC,IAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,aAAK;AAC/BC,QAAAA,UAAU,EAAED,KAAK,CAACC;AADa,OAAL;AAAA,KAJvB;AAOLC,IAAAA,eAAe,EAAE;AACfC,MAAAA,UAAU,EAAE;AADG,KAPZ;AAULC,IAAAA,cAAc,EAAE;AAVX,GAN+C,CAA/C;AAmBPR,EAAAA,+BAA+B,CAACS,YAAhC,GAA+C;AAC7CC,IAAAA,EAAE,EAAE;AADyC,GAA/C;AAGAV,EAAAA,+BAA+B,CAACW,SAAhC,GAA4Cd,eAAe,CAACe,YAAhB,EAA5C;AAtBO,SAAMZ,+BAAN;AAAA","sourcesContent":["import { compose } from '@fluentui/react-bindings';\n\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps, BoxStylesProps } from '../Box/Box';\n\ninterface ToolbarMenuItemSubmenuIndicatorOwnProps {\n  hasContent?: boolean;\n}\nexport interface ToolbarMenuItemSubmenuIndicatorProps extends ToolbarMenuItemSubmenuIndicatorOwnProps, BoxProps {}\n\nexport type ToolbarMenuItemSubmenuIndicatorStylesProps = { hasContent?: boolean };\nexport const toolbarMenuItemSubmenuIndicatorClassName = 'ui-toolbar__menuitemsubmenuindicator';\n\n/**\n * A ToolbarMenuItemSubmenuIndicator allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const ToolbarMenuItemSubmenuIndicator = compose<\n  'span',\n  ToolbarMenuItemSubmenuIndicatorProps,\n  ToolbarMenuItemSubmenuIndicatorStylesProps,\n  BoxProps,\n  BoxStylesProps\n>(Box, {\n  className: toolbarMenuItemSubmenuIndicatorClassName,\n  displayName: 'ToolbarMenuItemSubmenuIndicator',\n\n  mapPropsToStylesProps: props => ({\n    hasContent: props.hasContent,\n  }),\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n  overrideStyles: true,\n});\n\nToolbarMenuItemSubmenuIndicator.defaultProps = {\n  as: 'span',\n};\nToolbarMenuItemSubmenuIndicator.propTypes = commonPropTypes.createCommon();\n"],"file":"ToolbarMenuItemSubmenuIndicator.js"}