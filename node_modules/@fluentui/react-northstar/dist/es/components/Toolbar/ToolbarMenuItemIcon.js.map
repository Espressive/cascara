{"version":3,"sources":["components/Toolbar/ToolbarMenuItemIcon.tsx"],"names":["compose","commonPropTypes","Box","toolbarMenuItemIconClassName","ToolbarMenuItemIcon","className","displayName","mapPropsToStylesProps","props","hasContent","shorthandConfig","mappedProp","handledProps","overrideStyles","defaultProps","as","propTypes","createCommon"],"mappings":"AAAA,SAASA,OAAT,QAAwB,0BAAxB;AAEA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,GAAT,QAA8C,YAA9C;AAQA,OAAO,IAAMC,4BAA4B,GAAG,0BAArC;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,mBAAN;AAAA,MAAMA,mBAAmB,GAAGJ,OAAO,CAMxCE,GANwC,EAMnC;AACLG,IAAAA,SAAS,EAAEF,4BADN;AAELG,IAAAA,WAAW,EAAE,qBAFR;AAILC,IAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,aAAK;AAC/BC,QAAAA,UAAU,EAAED,KAAK,CAACC;AADa,OAAL;AAAA,KAJvB;AAOLC,IAAAA,eAAe,EAAE;AACfC,MAAAA,UAAU,EAAE;AADG,KAPZ;AAULC,IAAAA,YAAY,EAAE,CAAC,YAAD,CAVT;AAWLC,IAAAA,cAAc,EAAE;AAXX,GANmC,CAAnC;AAoBPT,EAAAA,mBAAmB,CAACU,YAApB,GAAmC;AACjCC,IAAAA,EAAE,EAAE;AAD6B,GAAnC;AAGAX,EAAAA,mBAAmB,CAACY,SAApB,GAAgCf,eAAe,CAACgB,YAAhB,EAAhC;AAvBO,SAAMb,mBAAN;AAAA","sourcesContent":["import { compose } from '@fluentui/react-bindings';\n\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps, BoxStylesProps } from '../Box/Box';\n\ninterface ToolbarMenuItemIconOwnProps {\n  hasContent?: boolean;\n}\nexport interface ToolbarMenuItemIconProps extends ToolbarMenuItemIconOwnProps, BoxProps {}\n\nexport type ToolbarMenuItemIconStylesProps = { hasContent?: boolean };\nexport const toolbarMenuItemIconClassName = 'ui-toolbar__menuitemicon';\n\n/**\n * A ToolbarMenuItemIcon allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const ToolbarMenuItemIcon = compose<\n  'span',\n  ToolbarMenuItemIconProps,\n  ToolbarMenuItemIconStylesProps,\n  BoxProps,\n  BoxStylesProps\n>(Box, {\n  className: toolbarMenuItemIconClassName,\n  displayName: 'ToolbarMenuItemIcon',\n\n  mapPropsToStylesProps: props => ({\n    hasContent: props.hasContent,\n  }),\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n  handledProps: ['hasContent'],\n  overrideStyles: true,\n});\n\nToolbarMenuItemIcon.defaultProps = {\n  as: 'span',\n};\nToolbarMenuItemIcon.propTypes = commonPropTypes.createCommon();\n"],"file":"ToolbarMenuItemIcon.js"}