export var extendColorScheme = function extendColorScheme(colorScheme, overrides) {
  var result = colorScheme;
  Object.keys(overrides).forEach(function (color) {
    var _Object$assign;

    result = Object.assign({}, result, (_Object$assign = {}, _Object$assign[color] = Object.assign({}, colorScheme[color], overrides[color]), _Object$assign));
  });
  return result;
};
export function pickValuesFromColorScheme(colorScheme, componentAreas) {
  var result = {};
  Object.keys(colorScheme).forEach(function (color) {
    var _Object$assign3;

    var colorValues = componentAreas.reduce(function (accumulator, area) {
      var _Object$assign2;

      return Object.assign({}, accumulator, (_Object$assign2 = {}, _Object$assign2[area] = colorScheme[color][area], _Object$assign2));
    }, {});
    result = Object.assign({}, result, (_Object$assign3 = {}, _Object$assign3[color] = colorValues, _Object$assign3));
  });
  return result;
}
//# sourceMappingURL=colorUtils.js.map
