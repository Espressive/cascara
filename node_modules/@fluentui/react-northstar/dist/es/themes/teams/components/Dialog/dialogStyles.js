export var dialogStyles = {
  root: function root(_ref) {
    var v = _ref.variables;
    return {
      background: v.rootBackground,
      border: v.border,
      borderRadius: v.rootBorderRadius,
      outline: 'none',
      padding: v.rootPadding,
      position: 'relative',
      width: v.rootWidth,
      display: 'grid',
      gridTemplateColumns: '1fr auto',
      msGridColumns: '1fr auto',
      boxShadow: v.boxShadow,
      color: v.foregroundColor
    };
  },
  footer: function footer() {
    return {
      gridColumn: '1 / -1',
      gridRow: 3,
      msGridRow: 3
    };
  },
  actions: function actions() {
    return {
      display: 'inline-block'
    };
  },
  content: function content(_ref2) {
    var v = _ref2.variables;
    return {
      margin: v.contentMargin,
      gridColumn: '1 / span 2',
      gridRow: 2,
      msGridColumn: 1,
      msGridColumnSpan: 2,
      msGridRow: 2,
      justifySelf: 'left',
      width: '100%'
    };
  },
  header: function header(_ref3) {
    var v = _ref3.variables;
    return {
      margin: v.headerMargin,
      gridRow: 1,
      msGridRow: 1,
      gridColumn: 1,
      msGridColumn: 1,
      justifySelf: 'left',
      fontSize: v.headerFontSize,
      fontWeight: v.headerFontWeight
    };
  },
  headerAction: function headerAction(_ref4) {
    var v = _ref4.variables;
    return {
      gridRow: 1,
      msGridRow: 1,
      gridColumn: 2,
      msGridColumn: 2,
      color: v.foregroundColor,
      margin: v.headerActionMargin
    };
  },
  overlay: function overlay(_ref5) {
    var p = _ref5.props,
        v = _ref5.variables;
    return Object.assign({
      alignItems: 'center',
      background: 'transparent',
      bottom: 0,
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center',
      left: 0,
      overflow: 'auto',
      position: 'fixed',
      right: 0,
      top: 0,
      zIndex: v.overlayZIndex
    }, p.backdrop && {
      background: v.overlayBackground
    });
  }
};
//# sourceMappingURL=dialogStyles.js.map
