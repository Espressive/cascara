import { chatMessageSlotClassNames } from '../../../../components/Chat/ChatMessage';
import { pxToRem } from '../../../../utils';
import { screenReaderContainerStyles } from '../../../../utils/accessibility/Styles/accessibilityStyles';

/** ChatMessage styles specific for the compact density. */
export var chatMessageStylesCompact = {
  root: function root(_ref) {
    var _ref2, _ref3, _hover;

    var p = _ref.props,
        v = _ref.variables;
    return Object.assign({
      border: v.compactBorder,
      padding: v.paddingCompact,
      width: '100%'
    }, (v.hasMention || v.isImportant) && (_ref2 = {}, _ref2["& ." + chatMessageSlotClassNames.bar] = {
      backgroundColor: v.hasMention ? v.hasMentionColor : v.isImportantColor,
      position: 'absolute',
      borderRadius: pxToRem(2),
      height: "calc(100% - " + v.paddingCompact + " - " + v.paddingCompact + ")",
      left: pxToRem(-56),
      top: v.paddingCompact,
      width: pxToRem(2)
    }, _ref2), p.focused && (_ref3 = {
      backgroundColor: v.compactHoverBackground,
      border: v.compactHoverBorder
    }, _ref3["& ." + chatMessageSlotClassNames.timestamp] = {
      opacity: 1
    }, _ref3), {
      '&:hover': (_hover = {
        backgroundColor: v.compactHoverBackground,
        border: v.compactHoverBorder
      }, _hover["& ." + chatMessageSlotClassNames.timestamp] = {
        opacity: 1
      }, _hover)
    });
  },
  author: function author(_ref4) {
    var p = _ref4.props,
        v = _ref4.variables;
    return Object.assign({}, (p.attached === 'bottom' || p.attached === true) && screenReaderContainerStyles, {
      color: p.mine ? v.authorColorMineCompact : v.contentColor,
      float: 'left',
      fontWeight: v.authorFontWeightCompact,
      marginRight: v.authorMarginRightCompact
    });
  },
  badge: function badge(_ref5) {
    var v = _ref5.variables;
    return {
      alignSelf: 'flex-start',
      flexShrink: 0,
      margin: pxToRem(-2) + " " + pxToRem(-2) + " " + pxToRem(-2) + " " + v.compactSpacing
    };
  },
  compactBody: function compactBody() {
    return {
      display: 'flex',
      justifyContent: 'space-between'
    };
  },
  reactionGroup: function reactionGroup() {
    return {
      display: 'flex',
      marginTop: pxToRem(4)
    };
  },
  timestamp: function timestamp(_ref6) {
    var v = _ref6.variables;
    return {
      alignSelf: 'flex-start',
      flexShrink: 0,
      marginLeft: v.compactSpacing,
      marginTop: pxToRem(2),
      opacity: 0
    };
  }
};
//# sourceMappingURL=chatMessageStylesCompact.js.map
