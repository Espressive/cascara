{"version":3,"sources":["themes/teams/components/Chat/chatMessageStylesCompact.ts"],"names":["chatMessageSlotClassNames","pxToRem","screenReaderContainerStyles","chatMessageStylesCompact","root","p","props","v","variables","border","compactBorder","padding","paddingCompact","width","hasMention","isImportant","bar","backgroundColor","hasMentionColor","isImportantColor","position","borderRadius","height","left","top","focused","compactHoverBackground","compactHoverBorder","timestamp","opacity","author","attached","color","mine","authorColorMineCompact","contentColor","float","fontWeight","authorFontWeightCompact","marginRight","authorMarginRightCompact","badge","alignSelf","flexShrink","margin","compactSpacing","compactBody","display","justifyContent","reactionGroup","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\n\nimport { chatMessageSlotClassNames, ChatMessageStylesProps } from '../../../../components/Chat/ChatMessage';\nimport { pxToRem } from '../../../../utils';\nimport { screenReaderContainerStyles } from '../../../../utils/accessibility/Styles/accessibilityStyles';\nimport { ChatMessageVariables } from './chatMessageVariables';\n\n/** ChatMessage styles specific for the compact density. */\nexport const chatMessageStylesCompact: ComponentSlotStylesPrepared<ChatMessageStylesProps, ChatMessageVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    border: v.compactBorder,\n    padding: v.paddingCompact,\n    width: '100%',\n\n    ...((v.hasMention || v.isImportant) && {\n      [`& .${chatMessageSlotClassNames.bar}`]: {\n        backgroundColor: v.hasMention ? v.hasMentionColor : v.isImportantColor,\n        position: 'absolute',\n        borderRadius: pxToRem(2),\n        height: `calc(100% - ${v.paddingCompact} - ${v.paddingCompact})`,\n        left: pxToRem(-56),\n        top: v.paddingCompact,\n        width: pxToRem(2),\n      },\n    }),\n\n    ...(p.focused && {\n      backgroundColor: v.compactHoverBackground,\n      border: v.compactHoverBorder,\n      [`& .${chatMessageSlotClassNames.timestamp}`]: {\n        opacity: 1,\n      },\n    }),\n\n    '&:hover': {\n      backgroundColor: v.compactHoverBackground,\n      border: v.compactHoverBorder,\n      [`& .${chatMessageSlotClassNames.timestamp}`]: {\n        opacity: 1,\n      },\n    },\n  }),\n\n  author: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    ...((p.attached === 'bottom' || p.attached === true) && (screenReaderContainerStyles as ICSSInJSStyle)),\n    color: p.mine ? v.authorColorMineCompact : v.contentColor,\n    float: 'left',\n    fontWeight: v.authorFontWeightCompact,\n    marginRight: v.authorMarginRightCompact,\n  }),\n\n  badge: ({ variables: v }): ICSSInJSStyle => ({\n    alignSelf: 'flex-start',\n    flexShrink: 0,\n    margin: `${pxToRem(-2)} ${pxToRem(-2)} ${pxToRem(-2)} ${v.compactSpacing}`,\n  }),\n\n  compactBody: (): ICSSInJSStyle => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n  }),\n\n  reactionGroup: (): ICSSInJSStyle => ({\n    display: 'flex',\n    marginTop: pxToRem(4),\n  }),\n\n  timestamp: ({ variables: v }): ICSSInJSStyle => ({\n    alignSelf: 'flex-start',\n    flexShrink: 0,\n    marginLeft: v.compactSpacing,\n    marginTop: pxToRem(2),\n    opacity: 0,\n  }),\n};\n"],"file":"chatMessageStylesCompact.js"}