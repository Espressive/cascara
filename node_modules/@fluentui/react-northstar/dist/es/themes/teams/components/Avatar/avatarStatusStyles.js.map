{"version":3,"sources":["themes/teams/components/Avatar/avatarStatusStyles.ts"],"names":["pxToRem","sizeToPxValue","smallest","smaller","small","medium","large","larger","largest","getSizeStyles","sizeInPx","sizeInRem","height","width","avatarStatusStyles","root","v","variables","props","color","size","state","display","alignItems","justifyContent","verticalAlign","borderRadius","position","bottom","right","boxShadow","statusBorderWidth","statusBorderColor","backgroundColor","statusSuccessBackgroundColor","statusInfoBackgroundColor","statusWarningBackgroundColor","statusErrorBackgroundColor","statusBackgroundColor"],"mappings":"AAIA,SAASA,OAAT,QAAmC,mBAAnC;AAEA,IAAMC,aAAwC,GAAG;AAC/CC,EAAAA,QAAQ,EAAE,CADqC;AAE/CC,EAAAA,OAAO,EAAE,EAFsC;AAG/CC,EAAAA,KAAK,EAAE,EAHwC;AAI/CC,EAAAA,MAAM,EAAE,EAJuC;AAK/CC,EAAAA,KAAK,EAAE,EALwC;AAM/CC,EAAAA,MAAM,EAAE,EANuC;AAO/CC,EAAAA,OAAO,EAAE;AAPsC,CAAjD;AAUA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAsB;AACjD,MAAMC,SAAS,GAAGX,OAAO,CAACU,QAAD,CAAzB;AAEA,SAAO;AACLE,IAAAA,MAAM,EAAED,SADH;AAELE,IAAAA,KAAK,EAAEF;AAFF,GAAP;AAID,CAPM;AASP,OAAO,IAAMG,kBAAyF,GAAG;AACvGC,EAAAA,IAAI,EAAE;AAAA,QAAcC,CAAd,QAAGC,SAAH;AAAA,0BAAiBC,KAAjB;AAAA,QAA0BC,KAA1B,cAA0BA,KAA1B;AAAA,QAAiCC,IAAjC,cAAiCA,IAAjC;AAAA,QAAuCC,KAAvC,cAAuCA,KAAvC;AAAA;AACJC,MAAAA,OAAO,EAAE,aADL;AAEJC,MAAAA,UAAU,EAAE,QAFR;AAGJC,MAAAA,cAAc,EAAE;AAHZ,OAIDf,aAAa,CAACR,aAAa,CAACmB,IAAD,CAAd,CAJZ;AAKJK,MAAAA,aAAa,EAAE,QALX;AAMJC,MAAAA,YAAY,EAAE,QANV;AAOJC,MAAAA,QAAQ,EAAE,UAPN;AAQJC,MAAAA,MAAM,EAAE,CARJ;AASJC,MAAAA,KAAK,EAAE,CATH;AAUJC,MAAAA,SAAS,aAAWd,CAAC,CAACe,iBAAb,SAAkCf,CAAC,CAACgB;AAVzC,OAWAX,KAAK,KAAK,SAAV,IAAuB;AACzBY,MAAAA,eAAe,EAAEjB,CAAC,CAACkB;AADM,KAXvB,EAcAb,KAAK,KAAK,MAAV,IAAoB;AACtBY,MAAAA,eAAe,EAAEjB,CAAC,CAACmB;AADG,KAdpB,EAiBAd,KAAK,KAAK,SAAV,IAAuB;AACzBY,MAAAA,eAAe,EAAEjB,CAAC,CAACoB;AADM,KAjBvB,EAoBAf,KAAK,KAAK,OAAV,IAAqB;AACvBY,MAAAA,eAAe,EAAEjB,CAAC,CAACqB;AADI,KApBrB,EAuBAhB,KAAK,KAAK,SAAV,IAAuB;AACzBY,MAAAA,eAAe,EAAEjB,CAAC,CAACsB;AADM,KAvBvB,EA0BA,CAAC,CAACnB,KAAF,IAAW;AACbc,MAAAA,eAAe,EAAEd;AADJ,KA1BX;AAAA;AADiG,CAAlG","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\n\nimport { AvatarStatusStylesProps } from '../../../../components/Avatar/AvatarStatus';\nimport { AvatarVariables } from './avatarVariables';\nimport { pxToRem, SizeValue } from '../../../../utils';\n\nconst sizeToPxValue: Record<SizeValue, number> = {\n  smallest: 6,\n  smaller: 10,\n  small: 10,\n  medium: 10,\n  large: 10,\n  larger: 16,\n  largest: 0,\n};\n\nexport const getSizeStyles = (sizeInPx: number) => {\n  const sizeInRem = pxToRem(sizeInPx);\n\n  return {\n    height: sizeInRem,\n    width: sizeInRem,\n  };\n};\n\nexport const avatarStatusStyles: ComponentSlotStylesPrepared<AvatarStatusStylesProps, AvatarVariables> = {\n  root: ({ variables: v, props: { color, size, state } }): ICSSInJSStyle => ({\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...getSizeStyles(sizeToPxValue[size]),\n    verticalAlign: 'middle',\n    borderRadius: '9999px',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    boxShadow: `0 0 0 ${v.statusBorderWidth} ${v.statusBorderColor}`,\n    ...(state === 'success' && {\n      backgroundColor: v.statusSuccessBackgroundColor,\n    }),\n    ...(state === 'info' && {\n      backgroundColor: v.statusInfoBackgroundColor,\n    }),\n    ...(state === 'warning' && {\n      backgroundColor: v.statusWarningBackgroundColor,\n    }),\n    ...(state === 'error' && {\n      backgroundColor: v.statusErrorBackgroundColor,\n    }),\n    ...(state === 'unknown' && {\n      backgroundColor: v.statusBackgroundColor,\n    }),\n    ...(!!color && {\n      backgroundColor: color,\n    }),\n  }),\n};\n"],"file":"avatarStatusStyles.js"}