var getCSSTemplateValue = function getCSSTemplateValue(template) {
  var templateAsNumber = Number(template);
  return !isNaN(templateAsNumber) && templateAsNumber > 0 ? "repeat(" + template + ", 1fr)" : String(template);
};

export var gridStyles = {
  root: function root(_ref) {
    var props = _ref.props,
        _ref$variables = _ref.variables,
        height = _ref$variables.height,
        width = _ref$variables.width,
        defaultColumnCount = _ref$variables.defaultColumnCount,
        gridGap = _ref$variables.gridGap,
        padding = _ref$variables.padding;
    var rows = props.rows,
        _props$columns = props.columns,
        columns = _props$columns === void 0 ? !props.rows && defaultColumnCount : _props$columns;
    return Object.assign({
      height: height,
      width: width,
      padding: padding,
      gridGap: gridGap,
      display: 'grid',
      justifyContent: 'space-evenly'
    }, rows && !columns && {
      gridAutoFlow: 'column'
    }, rows && {
      gridTemplateRows: getCSSTemplateValue(rows),
      msGridRows: getCSSTemplateValue(rows)
    }, columns && {
      gridTemplateColumns: getCSSTemplateValue(columns),
      msGridColumns: getCSSTemplateValue(columns)
    }, {
      '& > *': {
        outlineOffset: '-3px'
      }
    });
  }
};
//# sourceMappingURL=gridStyles.js.map
