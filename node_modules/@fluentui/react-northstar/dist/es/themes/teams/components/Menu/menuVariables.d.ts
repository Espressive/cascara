import { ItemType } from '../../../types';
import { TeamsSchemeMappingWithAreas } from '../../types';
export declare const menuColorAreas: ("border" | "foregroundHover" | "backgroundHover" | "foregroundActive" | "backgroundActive" | "borderActive" | "foregroundFocus" | "backgroundFocus" | "foregroundDisabled")[];
export declare type MenuColorSchemeMapping = TeamsSchemeMappingWithAreas<ItemType<typeof menuColorAreas>>;
export interface MenuVariables {
    colorScheme: MenuColorSchemeMapping;
    color: string;
    backgroundColor: string;
    backgroundColorFocus: string;
    backgroundColorHover: string;
    backgroundColorActive: string;
    borderColor: string;
    borderColorHover: string;
    borderColorActive: string;
    borderColorFocus: string;
    outlineColorFocus: string;
    colorActive: string;
    iconSize: string;
    iconOnlyColorActive: string;
    iconOnlyColorFocus: string;
    iconOnlyBackgroundColorHover: string;
    iconOnlyColorHover: string;
    iconOnlyWrapperBackgroundColorFocus: string;
    colorFocus: string;
    colorHover: string;
    underlinedBorderColor: string;
    colorDisabled: string;
    lineHeightBase: string;
    horizontalPadding: string;
    activeUnderlinedColor: string;
    activeUnderlinedPrimaryColor: string;
    activeUnderlinedBorderBottomColor: string;
    activeUnderlinedWrapperColor: string;
    activeIconOnlyWrapperBackgroundColor: string;
    verticalBackgroundColor: string;
    verticalItemPadding: string;
    verticalBoxShadow: string;
    verticalDividerMargin: string;
    verticalItemBorderWidth: string;
    verticalItemBorderColor: string;
    verticalPointingBorderColor: string;
    verticalBackgroundColorFocus: string;
    pointingIndicatorBackgroundColor: string;
    activeWrapperBackgroundColorHover: string;
    underlinedBottomBorderWidth: string;
    underlinedColorHover: string;
    underlinedWrapperColorHover: string;
    underlinedWrapperBackgroundHover: string;
    primaryBorderColor: string;
    primaryWrapperColorFocus: string;
    primaryWrapperBackgroundColorFocus: string;
    dividerHeight: string;
    borderWidth: string;
    menuZIndex: number;
    beakZIndex: number;
    wrapperColorActive: string;
    wrapperColorFocus: string;
    wrapperColorHover: string;
    primaryWrapperColorHover: string;
    wrapperBackgroundColorFocus: string;
    activeIndicatorColor: string;
    activePrimaryIndicatorColor: string;
    activePrimaryVerticalIndicatorColor: string;
    indicatorColor: string;
    primaryIndicatorColorHover: string;
    indicatorColorHover: string;
}
export declare const menuVariables: (siteVars: any) => MenuVariables;
