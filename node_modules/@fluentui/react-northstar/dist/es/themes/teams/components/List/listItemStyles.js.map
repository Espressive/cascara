{"version":3,"sources":["themes/teams/components/List/listItemStyles.ts"],"names":["screenReaderContainerStyles","listItemContentClassName","listItemContentMediaClassName","listItemEndMediaClassName","listItemHeaderClassName","listItemHeaderMediaClassName","getBorderFocusStyles","selectableHoverStyle","p","v","background","selectableFocusHoverBackgroundColor","color","selectableFocusHoverColor","cursor","display","selectedStyle","variables","selectedBackgroundColor","selectedColor","listItemStyles","root","props","siteVariables","theme","borderFocusStyles","alignItems","minHeight","padding","rootPadding","selectable","navigable","position","userSelect","zIndex","selected","important","fontWeight","importantFontWeight","headerWrapper","contentWrapper","main","flexDirection","flexGrow","minWidth"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\n\nimport { screenReaderContainerStyles } from '../../../../utils/accessibility/Styles/accessibilityStyles';\nimport { ListItemStylesProps } from '../../../../components/List/ListItem';\nimport { listItemContentClassName } from '../../../../components/List/ListItemContent';\nimport { listItemContentMediaClassName } from '../../../../components/List/ListItemContentMedia';\nimport { listItemEndMediaClassName } from '../../../../components/List/ListItemEndMedia';\nimport { listItemHeaderClassName } from '../../../../components/List/ListItemHeader';\nimport { listItemHeaderMediaClassName } from '../../../../components/List/ListItemHeaderMedia';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { ListItemVariables } from './listItemVariables';\n\nconst selectableHoverStyle = (p: ListItemStylesProps, v): ICSSInJSStyle => ({\n  background: v.selectableFocusHoverBackgroundColor,\n  color: v.selectableFocusHoverColor,\n  cursor: 'pointer',\n\n  [`& .${listItemHeaderClassName}`]: { color: 'inherit' },\n  [`& .${listItemContentClassName}`]: { color: 'inherit' },\n\n  // hide the header media and content media on hover\n  [`& .${listItemHeaderMediaClassName}`]: {\n    ...screenReaderContainerStyles,\n    color: 'inherit',\n  },\n  [`& .${listItemContentMediaClassName}`]: { display: 'none', color: 'inherit' },\n\n  // show the end media on hover\n  [`& .${listItemEndMediaClassName}`]: { display: 'block', color: 'inherit' },\n});\n\nconst selectedStyle = variables => ({\n  background: variables.selectedBackgroundColor,\n  color: variables.selectedColor,\n});\n\nexport const listItemStyles: ComponentSlotStylesPrepared<ListItemStylesProps, ListItemVariables> = {\n  root: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n    });\n\n    return {\n      display: 'flex',\n      alignItems: 'center',\n      minHeight: v.minHeight,\n      padding: v.rootPadding,\n      ...((p.selectable || p.navigable) && {\n        position: 'relative',\n        userSelect: 'none',\n        // hide the end media by default\n        [`& .${listItemEndMediaClassName}`]: { display: 'none' },\n\n        '&:hover': selectableHoverStyle(p, v),\n        ':focus': borderFocusStyles[':focus'],\n        ':focus-visible': {\n          ...borderFocusStyles[':focus-visible'],\n          zIndex: v.zIndex,\n        },\n\n        ...(p.selected && selectedStyle(v)),\n      }),\n      ...(p.important && {\n        fontWeight: v.importantFontWeight,\n      }),\n    };\n  },\n\n  headerWrapper: () => ({\n    display: 'flex',\n  }),\n\n  contentWrapper: () => ({\n    display: 'flex',\n  }),\n\n  main: () => ({\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    minWidth: 0, // needed for the truncate styles to work\n  }),\n};\n"],"file":"listItemStyles.js"}