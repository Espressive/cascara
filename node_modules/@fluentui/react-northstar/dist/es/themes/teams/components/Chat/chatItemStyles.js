import { pxToRem } from '../../../../utils';
export var chatItemStyles = {
  root: function root(_ref) {
    var p = _ref.props,
        v = _ref.variables;
    return Object.assign({
      position: 'relative'
    }, (!p.attached || p.attached === 'top') && {
      paddingTop: p.density === 'compact' ? pxToRem(8) : pxToRem(16)
    }, (p.attached === 'bottom' || p.attached === true) && {
      paddingTop: p.density === 'compact' ? 0 : pxToRem(2)
    }, {
      paddingBottom: 0
    }, p.density === 'compact' && {
      marginTop: pxToRem(-2),
      marginBottom: pxToRem(-2)
    });
  },
  gutter: function gutter(_ref2) {
    var _Object$assign;

    var p = _ref2.props,
        v = _ref2.variables;
    return Object.assign((_Object$assign = {
      position: 'absolute',
      marginTop: p.density === 'compact' ? v.gutterMarginCompact : v.gutterMargin
    }, _Object$assign[p.contentPosition === 'end' ? 'right' : 'left'] = p.density === 'compact' ? pxToRem(28) : 0, _Object$assign), (p.attached === 'bottom' || p.attached === true) && {
      display: 'none'
    });
  },
  message: function message(_ref3) {
    var p = _ref3.props,
        v = _ref3.variables;
    return Object.assign({
      position: 'relative',
      float: p.contentPosition === 'end' ? 'right' : 'left',
      marginLeft: p.density === 'compact' ? v.messageMarginCompact : v.messageMargin,
      marginRight: p.density === 'compact' ? v.messageMarginEndCompact : v.messageMargin
    }, p.density === 'compact' && {
      width: "calc(100% - " + v.messageMarginCompact + " - " + v.messageMarginEndCompact + ")"
    });
  }
};
//# sourceMappingURL=chatItemStyles.js.map
