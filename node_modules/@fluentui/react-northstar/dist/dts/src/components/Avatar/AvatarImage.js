"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AvatarImage = exports.avatarImageClassName = void 0;
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var react_bindings_1 = require("@fluentui/react-bindings");
var PropTypes = require("prop-types");
var React = require("react");
var utils_1 = require("../../utils");
var Image_1 = require("../Image/Image");
exports.avatarImageClassName = Image_1.imageClassName;
/**
 * An AvatarImage is a graphic representation used by Avatar.
 */
var AvatarImage = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.AvatarImage.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var accessibility = props.accessibility, alt = props.alt, ariaLabel = props["aria-label"], avatar = props.avatar, circular = props.circular, className = props.className, design = props.design, fluid = props.fluid, styles = props.styles, variables = props.variables, size = props.size;
    var getA11Props = react_bindings_1.useAccessibility(accessibility, {
        debugName: exports.AvatarImage.displayName,
        mapPropsToBehavior: function () { return ({
            alt: alt,
            'aria-label': ariaLabel,
        }); },
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.AvatarImage.displayName, {
        className: exports.avatarImageClassName,
        mapPropsToStyles: function () { return ({
            avatar: avatar,
            circular: circular,
            fluid: fluid,
            size: size,
        }); },
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.AvatarImage.handledProps, props);
    var result = React.createElement(ElementType, tslib_1.__assign({}, getA11Props('root', tslib_1.__assign({ className: classes.root }, unhandledProps))));
    setEnd();
    return result;
};
exports.AvatarImage = AvatarImage;
exports.AvatarImage.displayName = 'AvatarImage';
exports.AvatarImage.defaultProps = {
    as: 'img',
    accessibility: accessibility_1.imageBehavior,
};
exports.AvatarImage.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({
    children: false,
    content: false,
})), { avatar: PropTypes.bool, circular: PropTypes.bool, fluid: PropTypes.bool });
exports.AvatarImage.shorthandConfig = {
    mappedProp: 'src',
    allowsJSX: false,
};
exports.AvatarImage.handledProps = Object.keys(exports.AvatarImage.propTypes);
exports.AvatarImage.create = utils_1.createShorthandFactory({ Component: exports.AvatarImage, mappedProp: 'src', allowsJSX: false });
