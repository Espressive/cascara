"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CarouselPaddlesContainer = exports.carouselPaddlesContainerClassName = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var react_bindings_1 = require("@fluentui/react-bindings");
var utils_1 = require("../../utils");
exports.carouselPaddlesContainerClassName = 'ui-carrouselpaddles_container';
/**
 * A CarouselPaddlesContainer is a container for the Carousel Paddles.
 */
var CarouselPaddlesContainer = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.CarouselPaddlesContainer.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var className = props.className, children = props.children, design = props.design, styles = props.styles, variables = props.variables, content = props.content;
    var classes = react_bindings_1.useStyles(exports.CarouselPaddlesContainer.displayName, {
        className: exports.carouselPaddlesContainerClassName,
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var getA11Props = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: exports.CarouselPaddlesContainer.displayName,
        rtl: context.rtl,
    });
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.CarouselPaddlesContainer.handledProps, props);
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11Props('root', tslib_1.__assign({ className: classes.root }, unhandledProps))), utils_1.childrenExist(children) ? children : content));
    setEnd();
    return element;
};
exports.CarouselPaddlesContainer = CarouselPaddlesContainer;
exports.CarouselPaddlesContainer.displayName = 'CarouselPaddlesContainer';
exports.CarouselPaddlesContainer.propTypes = tslib_1.__assign({}, utils_1.commonPropTypes.createCommon());
exports.CarouselPaddlesContainer.handledProps = Object.keys(exports.CarouselPaddlesContainer.propTypes);
exports.CarouselPaddlesContainer.shorthandConfig = {
    mappedProp: 'content',
};
