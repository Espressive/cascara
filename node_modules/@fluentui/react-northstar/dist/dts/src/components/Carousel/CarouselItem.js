"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CarouselItem = exports.carouselItemSlotClassNames = exports.carouselItemClassName = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var PropTypes = require("prop-types");
var accessibility_1 = require("@fluentui/accessibility");
var utils_1 = require("../../utils");
var accessibilityStyles_1 = require("../../utils/accessibility/Styles/accessibilityStyles");
var react_bindings_1 = require("@fluentui/react-bindings");
exports.carouselItemClassName = 'ui-carousel__item';
exports.carouselItemSlotClassNames = {
    itemPositionText: exports.carouselItemClassName + "__itemPositionText",
};
/**
 * A Carousel displays data organised as a gallery.
 *
 * @accessibility
 * Implements [ARIA Carousel](https://www.w3.org/WAI/tutorials/carousels/structure/) design pattern.
 */
var CarouselItem = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.CarouselItem.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.CarouselItem.handledProps, props);
    var accessibility = props.accessibility, navigation = props.navigation, active = props.active, children = props.children, itemPositionText = props.itemPositionText, content = props.content, className = props.className, design = props.design, styles = props.styles, variables = props.variables;
    var ElementType = react_bindings_1.getElementType(props);
    var getA11yProps = react_bindings_1.useAccessibility(accessibility, {
        debugName: exports.CarouselItem.displayName,
        actionHandlers: {
            arrowKeysNavigationStopPropagation: function (e) {
                // let event propagate, when it was invoke on the element where arrow keys should rotate carousel
                if (e.currentTarget !== e.target) {
                    e.stopPropagation();
                }
            },
        },
        mapPropsToBehavior: function () { return ({
            navigation: navigation,
            active: active,
        }); },
    });
    var classes = react_bindings_1.useStyles(exports.CarouselItem.displayName, {
        className: exports.carouselItemClassName,
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11yProps('root', tslib_1.__assign({ className: classes.root }, unhandledProps))),
        utils_1.childrenExist(children) ? children : content,
        React.createElement("div", { className: exports.carouselItemSlotClassNames.itemPositionText, style: accessibilityStyles_1.screenReaderContainerStyles }, itemPositionText)));
    setEnd();
    return element;
};
exports.CarouselItem = CarouselItem;
exports.CarouselItem.displayName = 'CarouselItem';
exports.CarouselItem.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon()), { active: PropTypes.bool, navigation: PropTypes.bool, itemPositionText: PropTypes.string });
exports.CarouselItem.defaultProps = {
    accessibility: accessibility_1.carouselItemBehavior,
};
exports.CarouselItem.handledProps = Object.keys(exports.CarouselItem.propTypes);
exports.CarouselItem.create = utils_1.createShorthandFactory({ Component: exports.CarouselItem, mappedProp: 'content' });
