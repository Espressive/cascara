"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.usePortalBox = exports.PortalBoxContext = void 0;
var react_bindings_1 = require("@fluentui/react-bindings");
var React = require("react");
var isBrowser_1 = require("../../utils/isBrowser");
exports.PortalBoxContext = React.createContext(null);
var usePortalBox = function (options) {
    var className = options.className, rtl = options.rtl, target = options.target;
    var element = React.useMemo(function () {
        var newElement = isBrowser_1.isBrowser() ? target.createElement('div') : null;
        // Element should be attached to DOM during render to make elements that will be rendered
        // inside accessible in effects of child components
        if (newElement) {
            target.body.appendChild(newElement);
        }
        return newElement;
    }, [target]);
    react_bindings_1.useIsomorphicLayoutEffect(function () {
        if (element) {
            element.setAttribute('class', className);
            if (rtl) {
                element.setAttribute('dir', 'rtl');
            }
            else {
                element.removeAttribute('dir');
            }
        }
    }, [className, element, rtl]);
    // This effect should always last as it removes element from HTML tree
    react_bindings_1.useIsomorphicLayoutEffect(function () {
        return function () {
            if (element) {
                target.body.removeChild(element);
            }
        };
    }, [element, target]);
    return element;
};
exports.usePortalBox = usePortalBox;
