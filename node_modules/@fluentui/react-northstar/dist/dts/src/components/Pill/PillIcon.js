"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PillIcon = exports.pillIconClassName = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var accessibility_1 = require("@fluentui/accessibility");
var PropTypes = require("prop-types");
var customPropTypes = require("@fluentui/react-proptypes");
var react_bindings_1 = require("@fluentui/react-bindings");
var utils_1 = require("../../utils");
exports.pillIconClassName = 'ui-pill__icon';
/**
 * A PillIcon allows user set an icon.
 */
var PillIcon = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.PillIcon.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var accessibility = props.accessibility, children = props.children, className = props.className, content = props.content, design = props.design, styles = props.styles, variables = props.variables, size = props.size, selectable = props.selectable, image = props.image;
    var getA11Props = react_bindings_1.useAccessibility(accessibility, {
        debugName: exports.PillIcon.displayName,
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.PillIcon.displayName, {
        className: exports.pillIconClassName,
        mapPropsToStyles: function () { return ({ size: size, selectable: selectable, hasImage: !!image }); },
        mapPropsToInlineStyles: function () { return ({ className: className, design: design, styles: styles, variables: variables }); },
        rtl: context.rtl,
    }).classes;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.PillIcon.handledProps, props);
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11Props('root', tslib_1.__assign(tslib_1.__assign({ className: classes.root }, utils_1.rtlTextContainer.getAttributes({ forElements: [children] })), unhandledProps))), utils_1.childrenExist(children) ? children : content));
    setEnd();
    return element;
};
exports.PillIcon = PillIcon;
exports.PillIcon.defaultProps = {
    accessibility: accessibility_1.pillIconBehavior,
    as: 'span',
};
exports.PillIcon.displayName = 'PillIcon';
exports.PillIcon.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon()), { selectable: PropTypes.bool, size: PropTypes.oneOf(['small', 'smaller', 'medium']), image: customPropTypes.shorthandAllowingChildren });
exports.PillIcon.handledProps = Object.keys(exports.PillIcon.propTypes);
exports.PillIcon.shorthandConfig = {
    mappedProp: 'content',
};
