"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormFieldCustom = exports.formFieldCustomClassName = void 0;
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var PropTypes = require("prop-types");
var React = require("react");
var utils_1 = require("../../utils");
var react_bindings_1 = require("@fluentui/react-bindings");
exports.formFieldCustomClassName = 'ui-form__fieldcustom';
/**
 * A FormFieldCustom represents a Form element containing a label and an input.
 */
var FormFieldCustom = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.FormFieldCustom.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var children = props.children, required = props.required, type = props.type, className = props.className, design = props.design, styles = props.styles, variables = props.variables, inline = props.inline;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.FormFieldCustom.handledProps, props);
    var getA11yProps = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: exports.FormFieldCustom.displayName,
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.FormFieldCustom.displayName, {
        className: exports.formFieldCustomClassName,
        mapPropsToStyles: function () { return ({
            type: type,
            inline: inline,
            required: required,
        }); },
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11yProps('root', tslib_1.__assign({ className: classes.root }, unhandledProps))), children));
    setEnd();
    return element;
};
exports.FormFieldCustom = FormFieldCustom;
exports.FormFieldCustom.displayName = 'FormFieldCustom';
exports.FormFieldCustom.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({
    content: false,
    children: false,
})), { id: PropTypes.string, inline: PropTypes.bool, name: PropTypes.string, required: PropTypes.bool, type: PropTypes.string });
exports.FormFieldCustom.handledProps = Object.keys(exports.FormFieldCustom.propTypes);
exports.FormFieldCustom.defaultProps = {
    accessibility: accessibility_1.formFieldBehavior,
};
