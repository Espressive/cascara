"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Form = exports.formClassName = void 0;
var tslib_1 = require("tslib");
var customPropTypes = require("@fluentui/react-proptypes");
var PropTypes = require("prop-types");
var React = require("react");
var _ = require("lodash");
var utils_1 = require("../../utils");
var FormField_1 = require("./FormField");
var react_bindings_1 = require("@fluentui/react-bindings");
exports.formClassName = 'ui-form';
/**
 * A Form is used to collect, oprionally validate, and submit the user input, in a structured way.
 */
var Form = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.Form.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var className = props.className, design = props.design, styles = props.styles, variables = props.variables, action = props.action, children = props.children, accessibility = props.accessibility;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.Form.handledProps, props);
    var classes = react_bindings_1.useStyles(exports.Form.displayName, {
        className: exports.formClassName,
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var getA11yProps = react_bindings_1.useAccessibility(accessibility, {
        debugName: exports.Form.displayName,
        rtl: context.rtl,
    });
    var handleSubmit = function (e) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var action = props.action;
        // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()
        // method.
        if (!action)
            _.invoke(e, 'preventDefault');
        _.invoke.apply(_, tslib_1.__spreadArrays([props, 'onSubmit', e, props], args));
    };
    var renderFields = function () {
        var fields = props.fields;
        return _.map(fields, function (field) { return FormField_1.FormField.create(field); });
    };
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11yProps('root', tslib_1.__assign(tslib_1.__assign({ className: classes.root }, utils_1.rtlTextContainer.getAttributes({ forElements: [children] })), unhandledProps)), { action: action, onSubmit: handleSubmit }), utils_1.childrenExist(children) ? children : renderFields()));
    setEnd();
    return element;
};
exports.Form = Form;
exports.Form.displayName = 'Form';
exports.Form.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({
    content: false,
})), { action: PropTypes.string, fields: customPropTypes.collectionShorthand, onSubmit: PropTypes.func });
exports.Form.defaultProps = {
    as: 'form',
};
exports.Form.handledProps = Object.keys(exports.Form.propTypes);
exports.Form.create = utils_1.createShorthandFactory({
    Component: exports.Form,
});
