"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuItemIcon = exports.menuItemIconClassName = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var react_bindings_1 = require("@fluentui/react-bindings");
var PropTypes = require("prop-types");
var utils_1 = require("../../utils");
exports.menuItemIconClassName = 'ui-menu__itemicon';
/**
 * A MenuItemIcon allows a user to have a dedicated component that can be targeted from the theme.
 */
exports.MenuItemIcon = React.forwardRef(function (props, ref) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.MenuItemIcon.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var className = props.className, children = props.children, design = props.design, styles = props.styles, variables = props.variables, content = props.content, hasContent = props.hasContent, iconOnly = props.iconOnly;
    var classes = react_bindings_1.useStyles(exports.MenuItemIcon.displayName, {
        className: exports.menuItemIconClassName,
        mapPropsToStyles: function () { return ({
            hasContent: hasContent,
            iconOnly: iconOnly,
        }); },
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var getA11Props = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: exports.MenuItemIcon.displayName,
        rtl: context.rtl,
    });
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.MenuItemIcon.handledProps, props);
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11Props('root', tslib_1.__assign({ className: classes.root, ref: ref }, unhandledProps))), react_bindings_1.childrenExist(children) ? children : content));
    setEnd();
    return element;
});
exports.MenuItemIcon.displayName = 'MenuItemIcon';
exports.MenuItemIcon.defaultProps = {
    as: 'span',
};
exports.MenuItemIcon.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon()), { hasContent: PropTypes.bool, iconOnly: PropTypes.bool });
exports.MenuItemIcon.handledProps = Object.keys(exports.MenuItemIcon.propTypes);
exports.MenuItemIcon.shorthandConfig = {
    mappedProp: 'content',
};
