"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatepickerCalendarCell = exports.datepickerCalendarCellClassName = void 0;
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var react_bindings_1 = require("@fluentui/react-bindings");
var PropTypes = require("prop-types");
var React = require("react");
var utils_1 = require("../../utils");
exports.datepickerCalendarCellClassName = 'ui-datepicker__calendarcell';
/**
 * A Datepicker cell is used to display calendar grid cells.
 */
exports.DatepickerCalendarCell = react_bindings_1.compose(function (props, ref, composeOptions) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(composeOptions.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var className = props.className, design = props.design, styles = props.styles, variables = props.variables, disabled = props.disabled, selected = props.selected, quiet = props.quiet, today = props.today, content = props.content;
    var unhandledProps = react_bindings_1.useUnhandledProps(composeOptions.handledProps, props);
    var ElementType = react_bindings_1.getElementType(props);
    var getA11yProps = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: composeOptions.displayName,
        actionHandlers: {},
        mapPropsToBehavior: function () { return ({
            selected: selected,
            disabled: disabled,
            quiet: quiet,
            today: today,
        }); },
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.DatepickerCalendarCell.displayName, {
        className: composeOptions.className,
        mapPropsToStyles: function () { return ({
            disabled: disabled,
            selected: selected,
            quiet: quiet,
            today: today,
        }); },
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
        composeOptions: composeOptions,
        unstable_props: props,
    }).classes;
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11yProps('root', tslib_1.__assign({ className: classes.root, ref: ref }, unhandledProps))), content));
    setEnd();
    return element;
}, {
    className: exports.datepickerCalendarCellClassName,
    displayName: 'DatepickerCalendarCell',
    handledProps: [
        'accessibility',
        'as',
        'className',
        'content',
        'design',
        'disabled',
        'selected',
        'styles',
        'variables',
        'quiet',
        'today',
    ],
});
exports.DatepickerCalendarCell.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({ children: false })), { disabled: PropTypes.bool, selected: PropTypes.bool, quiet: PropTypes.bool, today: PropTypes.bool });
exports.DatepickerCalendarCell.defaultProps = {
    accessibility: accessibility_1.datepickerCalendarCellBehavior,
    as: 'td',
};
