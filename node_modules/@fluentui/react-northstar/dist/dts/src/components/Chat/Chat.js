"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Chat = exports.chatSlotClassNames = exports.chatClassName = void 0;
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var react_bindings_1 = require("@fluentui/react-bindings");
var customPropTypes = require("@fluentui/react-proptypes");
var _ = require("lodash");
var PropTypes = require("prop-types");
var React = require("react");
var utils_1 = require("../../utils");
var chatDensityContext_1 = require("./chatDensityContext");
var ChatItem_1 = require("./ChatItem");
var ChatMessage_1 = require("./ChatMessage");
var ChatMessageDetails_1 = require("./ChatMessageDetails");
var ChatMessageHeader_1 = require("./ChatMessageHeader");
var ChatMessageReadStatus_1 = require("./ChatMessageReadStatus");
exports.chatClassName = 'ui-chat';
exports.chatSlotClassNames = {
    item: exports.chatClassName + "__item",
};
/**
 * A Chat displays messages from a conversation between multiple users.
 */
var Chat = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.Chat.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var accessibility = props.accessibility, children = props.children, className = props.className, density = props.density, design = props.design, items = props.items, styles = props.styles, variables = props.variables;
    var getA11Props = react_bindings_1.useAccessibility(accessibility, {
        debugName: exports.Chat.displayName,
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.Chat.displayName, {
        className: exports.chatClassName,
        mapPropsToStyles: function () { return ({ density: density }); },
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.Chat.handledProps, props);
    var element = getA11Props.unstable_wrapWithFocusZone(React.createElement(ElementType, tslib_1.__assign({}, getA11Props('root', tslib_1.__assign(tslib_1.__assign({ className: classes.root }, utils_1.rtlTextContainer.getAttributes({ forElements: [children] })), unhandledProps))),
        React.createElement(chatDensityContext_1.ChatDensityContextProvider, { value: density }, utils_1.childrenExist(children)
            ? children
            : _.map(items, function (item) {
                return ChatItem_1.ChatItem.create(item, {
                    defaultProps: function () { return ({ className: exports.chatSlotClassNames.item }); },
                });
            }))));
    setEnd();
    return element;
};
exports.Chat = Chat;
exports.Chat.displayName = 'Chat';
exports.Chat.defaultProps = {
    accessibility: accessibility_1.chatBehavior,
    as: 'ul',
    density: chatDensityContext_1.defaultChatDensity,
};
exports.Chat.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({
    content: false,
})), { items: PropTypes.arrayOf(customPropTypes.itemShorthand), density: PropTypes.oneOf(['comfy', 'compact']) });
exports.Chat.handledProps = Object.keys(exports.Chat.propTypes);
exports.Chat.Item = ChatItem_1.ChatItem;
exports.Chat.Message = ChatMessage_1.ChatMessage;
exports.Chat.MessageHeader = ChatMessageHeader_1.ChatMessageHeader;
exports.Chat.MessageDetails = ChatMessageDetails_1.ChatMessageDetails;
exports.Chat.MessageReadStatus = ChatMessageReadStatus_1.ChatMessageReadStatus;
exports.Chat.create = utils_1.createShorthandFactory({ Component: exports.Chat });
