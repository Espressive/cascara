"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebugPanelData = void 0;
var React = require("react");
var utils_1 = require("./utils");
var DebugPanelData = function (props) {
    var data = props.data, _a = props.indent, indent = _a === void 0 ? 2 : _a, highlightKey = props.highlightKey, overrides = props.overrides, comments = props.comments, commentKeyPredicate = props.commentKeyPredicate;
    var isValidComment = typeof comments === 'string' && commentKeyPredicate && commentKeyPredicate(comments);
    if (typeof data === 'undefined') {
        return isValidComment ? React.createElement("abbr", { title: comments }, "undefined") : React.createElement("span", null, "undefined");
    }
    if (data === null || typeof data !== 'object') {
        return isValidComment ? React.createElement("abbr", { title: comments }, JSON.stringify(data)) : React.createElement("span", null, JSON.stringify(data));
    }
    return (React.createElement(React.Fragment, null,
        '{',
        Object.keys(data).map(function (key, idx) {
            var value = data[key];
            var comment = comments && comments[key];
            var highlight = utils_1.find(data, key, highlightKey);
            var overridden = utils_1.isOverridden(data, key, overrides);
            return (React.createElement("div", { key: key },
                React.createElement("span", { style: { background: highlight ? 'rgb(255,255,224)' : '' } },
                    ' '.repeat(indent),
                    React.createElement("span", { style: { textDecoration: overridden ? 'line-through' : 'none' } },
                        React.createElement("span", { style: { color: typeof value === 'object' ? 'grey' : '#b82519' } }, key),
                        ': ',
                        React.createElement(exports.DebugPanelData, { data: value, comments: comment, commentKeyPredicate: commentKeyPredicate, indent: indent + 2, overrides: overrides ? overrides[key] : null, highlightKey: highlightKey })),
                    ',')));
        }), (indent > 2 ? ' '.repeat(indent - 2) : '') + "}"));
};
exports.DebugPanelData = DebugPanelData;
