"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebugPanelItem = void 0;
var React = require("react");
var DebugPanelData_1 = require("./DebugPanelData");
var utils_1 = require("./utils");
var styles_1 = require("@fluentui/styles");
var DebugPanelItem = function (props) {
    var _a = React.useState(''), value = _a[0], setValue = _a[1];
    var propData = props.data, valueKey = props.valueKey, commentKey = props.commentKey, commentKeyPredicate = props.commentKeyPredicate, idKey = props.idKey;
    var reversedData = JSON.parse(JSON.stringify(propData)).reverse();
    var data = valueKey ? reversedData.map(function (v) { return v[valueKey]; }) : reversedData;
    var comments = commentKey ? reversedData.map(function (v) { return v[commentKey]; }) : [];
    var ids = idKey ? reversedData.map(function (v) { return v[idKey]; }) : [];
    var mergedThemes = [];
    mergedThemes.push({}); // init
    for (var i = 1; i < data.length; i++) {
        mergedThemes.push(styles_1.deepmerge(mergedThemes[i - 1], data[i - 1]));
    }
    return (React.createElement(React.Fragment, null,
        React.createElement("input", { onChange: function (e) { return setValue(e.target.value); }, style: {
                padding: '2px 4px',
                marginBottom: '4px',
                width: '100%',
                border: '1px solid #ccc',
                background: 'none',
            }, placeholder: "Filter" }),
        data.map(function (theme, idx) {
            var filteredTheme = value === '' ? theme : utils_1.filter(theme, value);
            return (React.createElement("pre", { key: idx, style: {
                    position: 'relative',
                    marginBottom: '4px',
                    borderTop: idx > 0 ? '1px solid #ddd' : 'none',
                } },
                ids && ids[idx] && React.createElement("div", { style: { position: 'absolute', right: 0, color: '#707070' } }, ids[idx]),
                React.createElement(DebugPanelData_1.DebugPanelData, { data: filteredTheme, comments: comments[idx], commentKeyPredicate: commentKeyPredicate, overrides: mergedThemes[idx], highlightKey: value })));
        })));
};
exports.DebugPanelItem = DebugPanelItem;
