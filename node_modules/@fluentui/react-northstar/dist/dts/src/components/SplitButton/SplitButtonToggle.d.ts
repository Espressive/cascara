import { Accessibility, ButtonBehaviorProps } from '@fluentui/accessibility';
import { UIComponentProps, ChildrenComponentProps, ContentComponentProps, SizeValue } from '../../utils';
import { ComponentEventHandler, FluentComponentStaticProps } from '../../types';
import { ComponentWithAs } from '@fluentui/react-bindings';
export interface SplitButtonToggleProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {
    /** Accessibility behavior if overridden by the user. */
    accessibility?: Accessibility<ButtonBehaviorProps>;
    /** A split button toggle can show that it cannot be interacted with. */
    disabled?: boolean;
    /**
     * Called after a user clicks the button.
     * @param event - React's original SyntheticEvent.
     * @param data - All props.
     */
    onClick?: ComponentEventHandler<SplitButtonToggleProps>;
    /** A split button toggle can emphasize that it represents the primary action. */
    primary?: boolean;
    /** A split button toggle can emphasize that it represents an alternative action. */
    secondary?: boolean;
    /** A split button toggle can be sized */
    size?: SizeValue;
}
export declare type SplitButtonToggleStylesProps = Pick<SplitButtonToggleProps, 'primary' | 'disabled' | 'size'>;
export declare const splitButtonToggleClassName = "ui-splitbutton__toggle";
/**
 * A SplitToggleButton allows users to customize the toggle button inside the SplitButton.
 *
 * @accessibility
 * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.
 */
export declare const SplitButtonToggle: ComponentWithAs<'button', SplitButtonToggleProps> & FluentComponentStaticProps<SplitButtonToggleProps>;
