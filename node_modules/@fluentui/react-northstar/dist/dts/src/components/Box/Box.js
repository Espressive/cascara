"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Box = exports.boxClassName = void 0;
var tslib_1 = require("tslib");
var react_bindings_1 = require("@fluentui/react-bindings");
var React = require("react");
var utils_1 = require("../../utils");
exports.boxClassName = 'ui-box';
/**
 * A Box is a basic component, commonly used for slots in other Fluent UI components.
 * By default it just renders a `div`.
 */
exports.Box = react_bindings_1.compose(function (props, ref, composeOptions) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(composeOptions.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var accessibility = props.accessibility, className = props.className, design = props.design, styles = props.styles, variables = props.variables, children = props.children, content = props.content;
    var getA11yProps = react_bindings_1.useAccessibility(accessibility, {
        debugName: composeOptions.displayName,
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(composeOptions.displayName, {
        className: composeOptions.className,
        composeOptions: composeOptions,
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
        unstable_props: props,
    }).classes;
    var unhandledProps = react_bindings_1.useUnhandledProps(composeOptions.handledProps, props);
    var ElementType = react_bindings_1.getElementType(props);
    var result = getA11yProps.unstable_wrapWithFocusZone(React.createElement(ElementType, tslib_1.__assign({}, getA11yProps('root', tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, utils_1.rtlTextContainer.getAttributes({ forElements: [children, content] })), { className: classes.root, ref: ref }), unhandledProps))), utils_1.childrenExist(children) ? children : content));
    setEnd();
    return result;
}, {
    className: exports.boxClassName,
    displayName: 'Box',
    handledProps: ['accessibility', 'as', 'className', 'children', 'content', 'design', 'styles', 'variables'],
});
exports.Box.propTypes = utils_1.commonPropTypes.createCommon();
exports.Box.create = utils_1.createShorthandFactory({ Component: exports.Box });
