"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttachmentAction = exports.attachmentActionClassName = void 0;
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var customPropTypes = require("@fluentui/react-proptypes");
var PropTypes = require("prop-types");
var react_bindings_1 = require("@fluentui/react-bindings");
var utils_1 = require("../../utils");
var Button_1 = require("../Button/Button");
exports.attachmentActionClassName = 'ui-attachment__action';
/**
 * An AttachmentAction provides a slot for actions in the Attachment.
 */
exports.AttachmentAction = react_bindings_1.compose(Button_1.Button, {
    className: exports.attachmentActionClassName,
    displayName: 'AttachmentAction',
    overrideStyles: true,
    shorthandConfig: {
        mappedProp: 'content',
    },
});
exports.AttachmentAction.defaultProps = {
    accessibility: accessibility_1.buttonBehavior,
    as: 'button',
};
exports.AttachmentAction.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({
    content: 'shorthand',
})), { disabled: PropTypes.bool, icon: customPropTypes.shorthandAllowingChildren, iconPosition: PropTypes.oneOf(['before', 'after']), loader: customPropTypes.itemShorthandWithoutJSX, loading: PropTypes.bool, onClick: PropTypes.func, onFocus: PropTypes.func, primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]), secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]) });
