"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardPreview = exports.cardPreviewClassName = void 0;
var tslib_1 = require("tslib");
var react_bindings_1 = require("@fluentui/react-bindings");
var PropTypes = require("prop-types");
var React = require("react");
var utils_1 = require("../../utils");
exports.cardPreviewClassName = 'ui-card__preview';
/**
 * A CardPreview is used to display data Card preview.
 */
var CardPreview = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.CardPreview.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var className = props.className, design = props.design, styles = props.styles, variables = props.variables, children = props.children, horizontal = props.horizontal, fitted = props.fitted;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.CardPreview.handledProps, props);
    var getA11yProps = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: exports.CardPreview.displayName,
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.CardPreview.displayName, {
        className: exports.cardPreviewClassName,
        mapPropsToStyles: function () { return ({ horizontal: horizontal, fitted: fitted }); },
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11yProps('root', tslib_1.__assign({ className: classes.root }, unhandledProps))), children));
    setEnd();
    return element;
};
exports.CardPreview = CardPreview;
exports.CardPreview.displayName = 'CardPreview';
exports.CardPreview.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon()), { horizontal: PropTypes.bool, fitted: PropTypes.bool });
exports.CardPreview.handledProps = Object.keys(exports.CardPreview.propTypes);
exports.CardPreview.create = utils_1.createShorthandFactory({ Component: exports.CardPreview });
