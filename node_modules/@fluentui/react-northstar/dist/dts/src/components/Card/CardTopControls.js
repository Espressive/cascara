"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardTopControls = exports.cardTopControlsClassName = void 0;
var tslib_1 = require("tslib");
var react_bindings_1 = require("@fluentui/react-bindings");
var React = require("react");
var utils_1 = require("../../utils");
exports.cardTopControlsClassName = 'ui-card__topcontrols';
/**
 * A CardTopControls is used to render control elements in the top of a Card component.
 */
var CardTopControls = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.CardTopControls.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var className = props.className, design = props.design, styles = props.styles, variables = props.variables, children = props.children;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.CardTopControls.handledProps, props);
    var getA11yProps = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: exports.CardTopControls.displayName,
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.CardTopControls.displayName, {
        className: exports.cardTopControlsClassName,
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11yProps('root', tslib_1.__assign({ className: classes.root }, unhandledProps))), children));
    setEnd();
    return element;
};
exports.CardTopControls = CardTopControls;
exports.CardTopControls.displayName = 'CardTopControls';
exports.CardTopControls.propTypes = tslib_1.__assign({}, utils_1.commonPropTypes.createCommon());
exports.CardTopControls.handledProps = Object.keys(exports.CardTopControls.propTypes);
exports.CardTopControls.create = utils_1.createShorthandFactory({ Component: exports.CardTopControls });
