"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DropdownSelectedItem = exports.dropdownSelectedItemSlotClassNames = exports.dropdownSelectedItemClassName = void 0;
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var react_component_ref_1 = require("@fluentui/react-component-ref");
var customPropTypes = require("@fluentui/react-proptypes");
var React = require("react");
var PropTypes = require("prop-types");
var _ = require("lodash");
var react_icons_northstar_1 = require("@fluentui/react-icons-northstar");
var utils_1 = require("../../utils");
var Image_1 = require("../Image/Image");
var Box_1 = require("../Box/Box");
var react_bindings_1 = require("@fluentui/react-bindings");
exports.dropdownSelectedItemClassName = 'ui-dropdown__selecteditem';
exports.dropdownSelectedItemSlotClassNames = {
    header: exports.dropdownSelectedItemClassName + "__header",
    icon: exports.dropdownSelectedItemClassName + "__icon",
    image: exports.dropdownSelectedItemClassName + "__image",
};
/**
 * A DropdownSelectedItem represents a selected item of 'multiple-selection' Dropdown.
 */
var DropdownSelectedItem = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.DropdownSelectedItem.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var active = props.active, header = props.header, icon = props.icon, image = props.image, className = props.className, design = props.design, styles = props.styles, variables = props.variables;
    var itemRef = React.useRef();
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.DropdownSelectedItem.handledProps, props);
    var getA11yProps = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: exports.DropdownSelectedItem.displayName,
        mapPropsToBehavior: function () { return ({
            header: header,
            active: active,
        }); },
        rtl: context.rtl,
    });
    React.useEffect(function () {
        if (active) {
            itemRef.current.focus();
        }
    }, [active]);
    var _b = react_bindings_1.useStyles(exports.DropdownSelectedItem.displayName, {
        className: exports.dropdownSelectedItemClassName,
        mapPropsToStyles: function () { return ({
            hasImage: !!image,
        }); },
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }), classes = _b.classes, resolvedStyles = _b.styles;
    var handleClick = function (e) {
        _.invoke(props, 'onClick', e, props);
    };
    var handleKeyDown = function (e) {
        _.invoke(props, 'onKeyDown', e, props);
    };
    var handleIconOverrides = function (iconProps) { return (tslib_1.__assign(tslib_1.__assign({}, iconProps), { onClick: function (e, iconProps) {
            e.stopPropagation();
            _.invoke(props, 'onRemove', e, iconProps);
            _.invoke(props, 'onClick', e, iconProps);
        }, onKeyDown: function (e, iconProps) {
            e.stopPropagation();
            if (accessibility_1.getCode(e) === accessibility_1.keyboardKey.Enter) {
                _.invoke(props, 'onRemove', e, iconProps);
            }
            _.invoke(props, 'onKeyDown', e, iconProps);
        } })); };
    var headerElement = Box_1.Box.create(header, {
        defaultProps: function () {
            return getA11yProps('header', {
                as: 'span',
                className: exports.dropdownSelectedItemSlotClassNames.header,
                styles: resolvedStyles.header,
            });
        },
    });
    var iconElement = Box_1.Box.create(icon, {
        defaultProps: function () {
            return getA11yProps('icon', {
                className: exports.dropdownSelectedItemSlotClassNames.icon,
                styles: resolvedStyles.icon,
            });
        },
        overrideProps: handleIconOverrides,
    });
    var imageElement = Image_1.Image.create(image, {
        defaultProps: function () {
            return getA11yProps('image', {
                avatar: true,
                className: exports.dropdownSelectedItemSlotClassNames.image,
                styles: resolvedStyles.image,
            });
        },
    });
    var element = (React.createElement(react_component_ref_1.Ref, { innerRef: itemRef },
        React.createElement(ElementType, tslib_1.__assign({}, getA11yProps('root', tslib_1.__assign({ className: classes.root, onClick: handleClick, onKeyDown: handleKeyDown }, unhandledProps))),
            imageElement,
            headerElement,
            iconElement)));
    setEnd();
    return element;
};
exports.DropdownSelectedItem = DropdownSelectedItem;
exports.DropdownSelectedItem.displayName = 'DropdownSelectedItem';
exports.DropdownSelectedItem.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({
    children: false,
})), { active: PropTypes.bool, header: customPropTypes.itemShorthand, icon: customPropTypes.shorthandAllowingChildren, image: customPropTypes.itemShorthandWithoutJSX, onClick: PropTypes.func, onKeyDown: PropTypes.func, onRemove: PropTypes.func });
exports.DropdownSelectedItem.handledProps = Object.keys(exports.DropdownSelectedItem.propTypes);
exports.DropdownSelectedItem.defaultProps = {
    accessibility: accessibility_1.dropdownSelectedItemBehavior,
    as: 'span',
    icon: React.createElement(react_icons_northstar_1.CloseIcon, null),
};
exports.DropdownSelectedItem.create = utils_1.createShorthandFactory({
    Component: exports.DropdownSelectedItem,
    mappedProp: 'header',
});
