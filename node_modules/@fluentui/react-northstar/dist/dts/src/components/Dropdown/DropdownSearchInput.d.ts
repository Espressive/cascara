import * as React from 'react';
import { ComponentEventHandler, FluentComponentStaticProps } from '../../types';
import { UIComponentProps } from '../../utils/commonPropInterfaces';
import { ComponentWithAs } from '@fluentui/react-bindings';
export interface DropdownSearchInputSlotClassNames {
    input: string;
    wrapper: string;
}
export interface DropdownSearchInputProps extends UIComponentProps<DropdownSearchInputProps> {
    /** Accessibility props for combobox slot. */
    accessibilityComboboxProps?: any;
    /** Accessibility props for input slot. */
    accessibilityInputProps?: any;
    /** A dropdown search input can show that it cannot be interacted with. */
    disabled?: boolean;
    /** A dropdown search input can be formatted to appear inline in the context of a Dropdown. */
    inline?: boolean;
    /** Ref for input DOM node. */
    inputRef?: React.Ref<HTMLInputElement>;
    /**
     * Called on input element focus.
     *
     * @param event - React's original SyntheticEvent.
     * @param data - All props and proposed value.
     */
    onFocus?: ComponentEventHandler<DropdownSearchInputProps>;
    /**
     * Called on input element blur.
     *
     * @param event - React's original SyntheticEvent.
     * @param data - All props and proposed value.
     */
    onInputBlur?: ComponentEventHandler<DropdownSearchInputProps>;
    /**
     * Called on input key down event.
     *
     * @param event - React's original SyntheticEvent.
     * @param data - All props and proposed value.
     */
    onInputKeyDown?: ComponentEventHandler<DropdownSearchInputProps>;
    /**
     * Called on input key up event.
     *
     * @param event - React's original SyntheticEvent.
     * @param data - All props and proposed value.
     */
    onKeyUp?: ComponentEventHandler<DropdownSearchInputProps>;
    /** A placeholder message. */
    placeholder?: string;
}
export declare const dropdownSearchInputClassName = "ui-dropdown__searchinput";
export declare const dropdownSearchInputSlotClassNames: DropdownSearchInputSlotClassNames;
export declare type DropdownSearchInputStylesProps = Required<Pick<DropdownSearchInputProps, 'inline'>>;
/**
 * A DropdownSearchInput represents item of 'search' Dropdown.
 * Used to display the search input field.
 */
export declare const DropdownSearchInput: ComponentWithAs<'div', DropdownSearchInputProps> & FluentComponentStaticProps<DropdownSearchInputProps>;
