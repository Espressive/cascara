"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.chatMessageStylesCompact = void 0;
var tslib_1 = require("tslib");
var ChatMessage_1 = require("../../../../components/Chat/ChatMessage");
var utils_1 = require("../../../../utils");
var accessibilityStyles_1 = require("../../../../utils/accessibility/Styles/accessibilityStyles");
/** ChatMessage styles specific for the compact density. */
exports.chatMessageStylesCompact = {
    root: function (_a) {
        var _b, _c, _d;
        var p = _a.props, v = _a.variables;
        return (tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ border: v.compactBorder, padding: v.paddingCompact, width: '100%' }, ((v.hasMention || v.isImportant) && (_b = {},
            _b["& ." + ChatMessage_1.chatMessageSlotClassNames.bar] = {
                backgroundColor: v.hasMention ? v.hasMentionColor : v.isImportantColor,
                position: 'absolute',
                borderRadius: utils_1.pxToRem(2),
                height: "calc(100% - " + v.paddingCompact + " - " + v.paddingCompact + ")",
                left: utils_1.pxToRem(-56),
                top: v.paddingCompact,
                width: utils_1.pxToRem(2),
            },
            _b))), (p.focused && (_c = {
                backgroundColor: v.compactHoverBackground,
                border: v.compactHoverBorder
            },
            _c["& ." + ChatMessage_1.chatMessageSlotClassNames.timestamp] = {
                opacity: 1,
            },
            _c))), { '&:hover': (_d = {
                    backgroundColor: v.compactHoverBackground,
                    border: v.compactHoverBorder
                },
                _d["& ." + ChatMessage_1.chatMessageSlotClassNames.timestamp] = {
                    opacity: 1,
                },
                _d) }));
    },
    author: function (_a) {
        var p = _a.props, v = _a.variables;
        return (tslib_1.__assign(tslib_1.__assign({}, ((p.attached === 'bottom' || p.attached === true) && accessibilityStyles_1.screenReaderContainerStyles)), { color: p.mine ? v.authorColorMineCompact : v.contentColor, float: 'left', fontWeight: v.authorFontWeightCompact, marginRight: v.authorMarginRightCompact }));
    },
    badge: function (_a) {
        var v = _a.variables;
        return ({
            alignSelf: 'flex-start',
            flexShrink: 0,
            margin: utils_1.pxToRem(-2) + " " + utils_1.pxToRem(-2) + " " + utils_1.pxToRem(-2) + " " + v.compactSpacing,
        });
    },
    compactBody: function () { return ({
        display: 'flex',
        justifyContent: 'space-between',
    }); },
    reactionGroup: function () { return ({
        display: 'flex',
        marginTop: utils_1.pxToRem(4),
    }); },
    timestamp: function (_a) {
        var v = _a.variables;
        return ({
            alignSelf: 'flex-start',
            flexShrink: 0,
            marginLeft: v.compactSpacing,
            marginTop: utils_1.pxToRem(2),
            opacity: 0,
        });
    },
};
