"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bodyLineHeight = exports.bodyColor = exports.bodyBackground = exports.bodyFontSize = exports.bodyFontFamily = exports.bodyMargin = exports.bodyPadding = exports.zIndexes = exports.lineHeightLargest = exports.lineHeightLarger = exports.lineHeightLarge = exports.lineHeightMedium = exports.lineHeightSmall = exports.lineHeightSmaller = exports.lineHeightDefault = exports.fontWeightBold = exports.fontWeightSemibold = exports.fontWeightRegular = exports.fontWeightSemilight = exports.fontWeightLight = exports.fontSizes = exports.shadow64 = exports.shadow28 = exports.shadow16 = exports.shadow8 = exports.shadow4 = exports.shadow2 = exports.shadowLevel1Dark = exports.shadowLevel4 = exports.shadowLevel3 = exports.shadowLevel2 = exports.shadowLevel1 = exports.focusOuterBorderColor = exports.focusInnerBorderColor = exports.borderRadiusMedium = exports.borderRadiusSmall = exports.borderWidth = exports.transparentColors = exports.colorScheme = exports.primitiveColors = exports.naturalColors = exports.contextualColors = exports.colors = exports.categoryColorScheme = exports.categoryColors = void 0;
var utils_1 = require("../../utils");
var colors_1 = require("./colors");
//
// COLORS
//
var categoryColors_1 = require("./categoryColors");
Object.defineProperty(exports, "categoryColors", { enumerable: true, get: function () { return categoryColors_1.categoryColors; } });
Object.defineProperty(exports, "categoryColorScheme", { enumerable: true, get: function () { return categoryColors_1.categoryColorScheme; } });
var colors_2 = require("./colors");
Object.defineProperty(exports, "colors", { enumerable: true, get: function () { return colors_2.colors; } });
Object.defineProperty(exports, "contextualColors", { enumerable: true, get: function () { return colors_2.contextualColors; } });
Object.defineProperty(exports, "naturalColors", { enumerable: true, get: function () { return colors_2.naturalColors; } });
Object.defineProperty(exports, "primitiveColors", { enumerable: true, get: function () { return colors_2.primitiveColors; } });
Object.defineProperty(exports, "colorScheme", { enumerable: true, get: function () { return colors_2.colorScheme; } });
Object.defineProperty(exports, "transparentColors", { enumerable: true, get: function () { return colors_2.transparentColors; } });
//
// BORDER STYLES
//
exports.borderWidth = '1px';
exports.borderRadiusSmall = '2px'; // input focus states
exports.borderRadiusMedium = '4px'; // default border radius
exports.focusInnerBorderColor = colors_1.colors.white;
exports.focusOuterBorderColor = colors_1.colors.black;
//
// SHADOW LEVELS
//
exports.shadowLevel1 = '0 .2rem .4rem -.075rem rgba(0, 0, 0, .1)';
exports.shadowLevel2 = '0 .4rem .7rem -.1rem rgba(0, 0, 0, .1)';
exports.shadowLevel3 = '0 .8rem 1rem -.2rem rgba(0, 0, 0, .1)';
exports.shadowLevel4 = '0 1.6rem 1.8rem -.4rem rgba(0, 0, 0, .1)';
exports.shadowLevel1Dark = '0 .2rem .4rem -.075rem rgba(0, 0, 0, .25)';
exports.shadow2 = '0 0 2px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .14)';
exports.shadow4 = '0 0 2px rgba(0, 0, 0, .12), 0 2px 4px rgba(0, 0, 0, .14)';
exports.shadow8 = '0 0 2px rgba(0, 0, 0, .12), 0 4px 8px rgba(0, 0, 0, .14)';
exports.shadow16 = '0 0 2px rgba(0, 0, 0, .12), 0 6px 16px rgba(0, 0, 0, .14)';
exports.shadow28 = '0 0 8px rgba(0, 0, 0, .12), 0 14px 28px rgba(0, 0, 0, .14)';
exports.shadow64 = '0 0 8px rgba(0, 0, 0, .12), 0 32px 64px rgba(0, 0, 0, .14)';
//
// FONT SIZES
//
exports.fontSizes = {
    smaller: utils_1.pxToRem(10),
    small: utils_1.pxToRem(12),
    medium: utils_1.pxToRem(14),
    large: utils_1.pxToRem(18),
    larger: utils_1.pxToRem(24),
    largest: utils_1.pxToRem(28),
};
//
// FONT WEIGHTS
//
exports.fontWeightLight = 200;
exports.fontWeightSemilight = 300;
exports.fontWeightRegular = 400;
exports.fontWeightSemibold = 600;
exports.fontWeightBold = 700;
//
// LINE HEIGHTS
//
exports.lineHeightDefault = 1;
exports.lineHeightSmaller = 1.2;
exports.lineHeightSmall = 1.3333;
exports.lineHeightMedium = 1.4286;
exports.lineHeightLarge = 1.3333;
exports.lineHeightLarger = 1.3333;
exports.lineHeightLargest = 1.3333;
//
// Z-INDEX
// Used to maintain proper stack order of components
//
exports.zIndexes = {
    background: 0,
    foreground: 1,
    menuItem: 2,
    overlay: 1000,
    overlayPriority: 1001,
    debug: 999999999,
};
//
// SEMANTIC ASSIGNMENTS
//
exports.bodyPadding = 0;
exports.bodyMargin = 0;
exports.bodyFontFamily = '"Segoe UI", system-ui, "Apple Color Emoji", "Segoe UI Emoji", sans-serif';
exports.bodyFontSize = exports.fontSizes.medium;
exports.bodyBackground = colors_1.colors.white;
exports.bodyColor = colors_1.colors.grey[750];
exports.bodyLineHeight = exports.lineHeightMedium;
