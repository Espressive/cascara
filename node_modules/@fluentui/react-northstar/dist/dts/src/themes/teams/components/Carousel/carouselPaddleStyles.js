"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.carouselPaddleStyles = void 0;
var tslib_1 = require("tslib");
var CarouselPaddle_1 = require("../../../../components/Carousel/CarouselPaddle");
var getBorderFocusStyles_1 = require("../../getBorderFocusStyles");
var getIconFillOrOutlineStyles_1 = require("../../getIconFillOrOutlineStyles");
var paddleIndicatorUrl_1 = require("./paddleIndicatorUrl");
var durations_1 = require("../../animations/durations");
var utils_1 = require("../../../../utils");
var getIndicatorStyles = function (color, next, size) {
    return {
        width: size,
        height: size,
        backgroundImage: paddleIndicatorUrl_1.paddleIndicatorUrl(color, next),
        backgroundRepeat: 'no-repeat',
    };
};
exports.carouselPaddleStyles = {
    root: function (_a) {
        var _b;
        var p = _a.props, v = _a.variables, theme = _a.theme;
        var siteVariables = theme.siteVariables;
        var borderWidth = siteVariables.borderWidth;
        var borderFocusStyles = getBorderFocusStyles_1.getBorderFocusStyles({
            variables: {
                borderRadius: v.focusBorderRadius,
                borderWidth: v.focusBorderWidth,
                focusInnerBorderColor: v.focusInnerBorderColor,
                focusOuterBorderColor: v.focusOuterBorderColor,
                zIndexes: { foreground: v.focusBorderZIndex },
            },
            borderPadding: borderWidth,
        });
        return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ height: v.paddleHeight, minWidth: v.paddleHeight, color: v.paddleColor, backgroundColor: v.paddleBackgroundColor, borderRadius: v.paddleBorderRadius, border: 0, display: 'inline-flex', justifyContent: 'center', alignItems: 'center', position: 'relative', verticalAlign: 'middle', cursor: 'pointer', marginBottom: utils_1.pxToRem(40), outline: 0, padding: 0, transition: durations_1.faster, zIndex: 1 }, (p.hidden && {
            visibility: 'hidden',
        })), { ':hover': tslib_1.__assign(tslib_1.__assign({}, getIconFillOrOutlineStyles_1.getIconFillOrOutlineStyles({ outline: false })), (_b = {}, _b["& ." + CarouselPaddle_1.carouselPaddleSlotClassNames.content] = tslib_1.__assign({}, getIndicatorStyles(v.paddleColor, p.next, v.paddleIndicatorSize)), _b.background = v.paddleBackgroundColorHover, _b)), ':active': {
                transition: durations_1.ultraFast,
                backgroundColor: v.paddleBackgroundColorActive,
            }, ':focus': borderFocusStyles[':focus'], ':focus-visible': tslib_1.__assign({}, borderFocusStyles[':focus-visible']) }), (p.disabled && {
            cursor: 'default',
            color: v.paddleColorDisabled,
            pointerEvents: 'none',
            ':hover': {
                color: v.paddleColorDisabled,
            },
            backgroundColor: v.paddleBackgroundColorDisabled,
        }));
    },
    content: function (_a) {
        var p = _a.props, v = _a.variables, rtl = _a.rtl;
        return (tslib_1.__assign(tslib_1.__assign({}, getIndicatorStyles(p.disabled ? v.paddleColorDisabled : v.paddleColor, p.next, v.paddleIndicatorSize)), (rtl && {
            transform: 'scaleX(-1)',
        })));
    },
};
