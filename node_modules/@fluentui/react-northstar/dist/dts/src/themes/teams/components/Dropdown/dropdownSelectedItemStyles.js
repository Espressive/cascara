"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dropdownSelectedItemStyles = void 0;
var tslib_1 = require("tslib");
var DropdownSelectedItem_1 = require("../../../../components/Dropdown/DropdownSelectedItem");
var getIconFillOrOutlineStyles_1 = require("../../getIconFillOrOutlineStyles");
var getBorderFocusStyles_1 = require("../../getBorderFocusStyles");
var utils_1 = require("../../../../utils");
exports.dropdownSelectedItemStyles = {
    root: function (_a) {
        var _b;
        var p = _a.props, v = _a.variables, siteVariables = _a.theme.siteVariables;
        var borderFocusStyles = getBorderFocusStyles_1.getBorderFocusStyles({ variables: siteVariables });
        return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ maxWidth: v.selectedItemsMaxWidth, display: 'inline-flex', alignItems: 'center', padding: "0 " + utils_1.pxToRem(8), startPaddingLeft: '0px', lineHeight: utils_1.pxToRem(20), borderRadius: utils_1.pxToRem(9999), fontSize: utils_1.pxToRem(14) }, (p.hasImage && { paddingLeft: '0px' })), { cursor: 'pointer', margin: '.25rem 0 0 .4rem', color: v.selectedItemColor, position: 'relative', border: v.selectedItemBorder, height: utils_1.pxToRem(24), overflow: 'visible', outline: 0, fontWeight: siteVariables.fontWeightSemibold }), (v.selectedItemBackgroundColor && {
            backgroundColor: v.selectedItemBackgroundColor,
        })), { ':focus': {
                color: v.selectedItemColorFocus,
            }, ':hover': (_b = {
                    color: v.selectedItemColorHover,
                    backgroundColor: v.selectedItemBackgroundColorHover
                },
                _b["& ." + DropdownSelectedItem_1.dropdownSelectedItemSlotClassNames.icon] = {
                    color: v.selectedItemIconColorHover,
                },
                _b), ':focus-visible': {
                ':after': borderFocusStyles[':focus-visible'][':after'],
            } });
    },
    image: function () { return ({
        height: utils_1.pxToRem(20),
        width: utils_1.pxToRem(20),
    }); },
    header: function (_a) {
        var p = _a.props, v = _a.variables;
        return tslib_1.__assign(tslib_1.__assign({}, (p.hasImage && { marginLeft: utils_1.pxToRem(3) })), { marginRight: utils_1.pxToRem(3), overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' });
    },
    icon: function (_a) {
        var v = _a.variables;
        return (tslib_1.__assign(tslib_1.__assign({ display: 'inline-flex', alignItems: 'center', justifyContent: 'center', width: utils_1.pxToRem(16), minWidth: utils_1.pxToRem(16), height: utils_1.pxToRem(16), '& > :first-child': {
                width: utils_1.pxToRem(16),
                height: utils_1.pxToRem(16),
                '& svg': {
                    width: utils_1.pxToRem(16),
                    height: utils_1.pxToRem(16),
                },
            }, cursor: 'pointer', color: v.selectedItemIconColor }, getIconFillOrOutlineStyles_1.getIconFillOrOutlineStyles({ outline: true })), { ':hover': tslib_1.__assign({ color: v.selectedItemIconColorHover }, getIconFillOrOutlineStyles_1.getIconFillOrOutlineStyles({ outline: false })) }));
    },
};
