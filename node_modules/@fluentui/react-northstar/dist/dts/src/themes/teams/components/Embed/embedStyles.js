"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.embedStyles = void 0;
var tslib_1 = require("tslib");
var utils_1 = require("../../../../utils");
var Embed_1 = require("../../../../components/Embed/Embed");
var getBorderFocusStyles_1 = require("../../getBorderFocusStyles");
var playIndicatorUrl_1 = require("./playIndicatorUrl");
var pauseIndicatorUrl_1 = require("./pauseIndicatorUrl");
exports.embedStyles = {
    root: function (_a) {
        var _b, _c;
        var v = _a.variables, siteVariables = _a.theme.siteVariables;
        var borderFocusStyles = getBorderFocusStyles_1.getBorderFocusStyles({ variables: siteVariables });
        return tslib_1.__assign(tslib_1.__assign({ display: 'inline-block', verticalAlign: 'middle', position: 'relative', cursor: 'pointer', width: v.width, height: v.height || 'auto', outline: 0 }, borderFocusStyles[':focus']), { ':focus-visible': (_b = {},
                _b["& ." + Embed_1.embedSlotClassNames.control] = tslib_1.__assign({ borderColor: v.focusBorderColor, opacity: 1 }, borderFocusStyles[':focus-visible']),
                _b), ':hover': (_c = {},
                _c["& ." + Embed_1.embedSlotClassNames.control] = {
                    opacity: 1,
                    zIndex: v.zIndex,
                },
                _c) });
    },
    control: function (_a) {
        var p = _a.props, v = _a.variables;
        return (tslib_1.__assign(tslib_1.__assign({ width: utils_1.pxToRem(48), height: utils_1.pxToRem(48), color: v.controlColor, padding: utils_1.pxToRem(4), borderRadius: '50%', backgroundColor: v.controlBackgroundColor, backgroundImage: playIndicatorUrl_1.playIndicatorUrl(v.controlColor), backgroundRepeat: 'no-repeat', backgroundPosition: 'center', backgroundSize: v.controlBackgroundSize, backgroundPositionX: utils_1.pxToRem(12) }, (p.active && {
            backgroundImage: pauseIndicatorUrl_1.pauseIndicatorUrl(v.controlColor),
        })), { opacity: p.active ? 0 : 1, pointerEvents: 'none', transition: 'opacity .22s ease-in-out', left: '50%', position: 'absolute', top: '50%', transform: 'translate(-50%, -50%)' }));
    },
    iframe: function (_a) {
        var p = _a.props;
        return (tslib_1.__assign({ display: 'block' }, (!p.iframeLoaded && { display: 'none' })));
    },
};
