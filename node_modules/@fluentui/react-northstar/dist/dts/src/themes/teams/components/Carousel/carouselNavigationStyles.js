"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.carouselNavigationStyles = void 0;
var tslib_1 = require("tslib");
var utils_1 = require("../../../../utils");
var colors_1 = require("../../colors");
exports.carouselNavigationStyles = {
    root: function (_a) {
        var p = _a.props, v = _a.variables, theme = _a.theme;
        var iconOnly = p.iconOnly, primary = p.primary, vertical = p.vertical, thumbnails = p.thumbnails;
        var colors = colors_1.getColorScheme(v.colorScheme, null, primary);
        var siteVariables = theme.siteVariables;
        return tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ display: 'flex', minHeight: utils_1.pxToRem(24), margin: 0, padding: 0, color: v.color, backgroundColor: v.backgroundColor || 'inherit', listStyleType: 'none', justifyContent: 'center' }, (!vertical &&
            thumbnails && {
            justifyContent: 'start',
            transform: "translateX(" + utils_1.pxToRem(v.width / 2 - v.thumbnailWidth / 2 - +p.activeIndex * v.thumbnailWidth) + ")",
            transition: 'transform .5s ease',
        })), (iconOnly && { alignItems: 'center' })), (vertical && tslib_1.__assign({ flexDirection: 'column', backgroundColor: v.verticalBackgroundColor, width: 'fit-content', padding: utils_1.pxToRem(8) + " 0" }, (iconOnly && {
            display: 'inline-block',
            width: 'auto',
        })))), (!iconOnly &&
            !vertical && {
            // primary has hardcoded grey border color
            border: v.borderWidth + " solid " + (primary ? v.primaryBorderColor : v.borderColor || colors.border),
            borderRadius: siteVariables.borderRadiusMedium,
        }));
    },
};
