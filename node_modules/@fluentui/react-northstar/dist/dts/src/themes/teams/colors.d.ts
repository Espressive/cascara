import { ColorPalette, PrimitiveColors, ColorSchemeMapping, ColorScheme, StrictColorSchemeMapping, StrictColorScheme } from '../types';
import { TeamsColorNames, TeamsContextualColors, TeamsNaturalColors, TeamsTransparentColors } from './types';
export declare const contextualColors: TeamsContextualColors;
export declare const naturalColors: TeamsNaturalColors;
export declare const primitiveColors: PrimitiveColors;
export declare const transparentColors: TeamsTransparentColors;
export declare const colors: ColorPalette<TeamsTransparentColors>;
export declare const createColorScheme: (customValues?: {}) => {
    foreground: any;
    background: any;
    border: any;
    shadow: any;
    foregroundHover: any;
    backgroundHover: any;
    borderHover: any;
    shadowHover: any;
    foregroundActive: any;
    backgroundActive: any;
    borderActive: any;
    shadowActive: any;
    foregroundFocus: any;
    backgroundFocus: any;
    borderFocus: any;
    shadowFocus: any;
    foregroundPressed: any;
    backgroundPressed: any;
    borderPressed: any;
    shadowPressed: any;
    foregroundDisabled: any;
    backgroundDisabled: any;
    borderDisabled: any;
    shadowDisabled: any;
};
export declare const colorScheme: ColorSchemeMapping<ColorScheme, TeamsColorNames>;
export declare const availableColors: string[];
export declare const isValidColor: (color: string) => boolean;
export declare const getColorSchemeKey: (color: string, primary?: boolean) => string;
export declare const getColorScheme: <T extends string>(colorScheme: StrictColorSchemeMapping<Record<T, string>, "ruby" | "black" | "green" | "grey" | "orange" | "pink" | "red" | "silver" | "white" | "yellow" | "brand" | "onyx" | "amethyst">, color?: string, primary?: boolean) => Record<T, string>;
