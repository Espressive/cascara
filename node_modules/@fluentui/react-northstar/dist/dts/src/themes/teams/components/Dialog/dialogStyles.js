"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dialogStyles = void 0;
var tslib_1 = require("tslib");
exports.dialogStyles = {
    root: function (_a) {
        var v = _a.variables;
        return ({
            background: v.rootBackground,
            border: v.border,
            borderRadius: v.rootBorderRadius,
            outline: 'none',
            padding: v.rootPadding,
            position: 'relative',
            width: v.rootWidth,
            display: 'grid',
            gridTemplateColumns: '1fr auto',
            msGridColumns: '1fr auto',
            boxShadow: v.boxShadow,
            color: v.foregroundColor,
        });
    },
    footer: function () { return ({
        gridColumn: '1 / -1',
        gridRow: 3,
        msGridRow: 3,
    }); },
    actions: function () { return ({
        display: 'inline-block',
    }); },
    content: function (_a) {
        var v = _a.variables;
        return ({
            margin: v.contentMargin,
            gridColumn: '1 / span 2',
            gridRow: 2,
            msGridColumn: 1,
            msGridColumnSpan: 2,
            msGridRow: 2,
            justifySelf: 'left',
            width: '100%',
        });
    },
    header: function (_a) {
        var v = _a.variables;
        return ({
            margin: v.headerMargin,
            gridRow: 1,
            msGridRow: 1,
            gridColumn: 1,
            msGridColumn: 1,
            justifySelf: 'left',
            fontSize: v.headerFontSize,
            fontWeight: v.headerFontWeight,
        });
    },
    headerAction: function (_a) {
        var v = _a.variables;
        return ({
            gridRow: 1,
            msGridRow: 1,
            gridColumn: 2,
            msGridColumn: 2,
            color: v.foregroundColor,
            margin: v.headerActionMargin,
        });
    },
    overlay: function (_a) {
        var p = _a.props, v = _a.variables;
        return (tslib_1.__assign({ alignItems: 'center', background: 'transparent', bottom: 0, display: 'flex', flexDirection: 'column', justifyContent: 'center', left: 0, overflow: 'auto', position: 'fixed', right: 0, top: 0, zIndex: v.overlayZIndex }, (p.backdrop && { background: v.overlayBackground })));
    },
};
