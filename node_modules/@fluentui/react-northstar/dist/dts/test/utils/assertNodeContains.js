"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertBodyContains = exports.assertNodeContains = void 0;
/**
 * Assert whether a child selector is or is not present in a parent node.
 *
 * @param parentNode - A parent DOM node
 * @param childSelector - A DOM selector for the child node
 * @param isPresent - Indicating whether to assert is present or is not present
 */
var assertNodeContains = function (parentNode, childSelector, isPresent) {
    if (isPresent === void 0) { isPresent = true; }
    var didFind = parentNode.querySelector(childSelector) !== null;
    try {
        expect(didFind).toEqual(isPresent);
    }
    catch (err) {
        throw new Error((didFind ? 'Found' : 'Did not find') + " \"" + childSelector + "\" in the " + parentNode + ".");
    }
};
exports.assertNodeContains = assertNodeContains;
/**
 * Assert whether node is or is not a child of the document.body.
 *
 * @param selector - A DOM selector for the parent node
 * @param isPresent - Indicating whether to assert is present or is not present
 */
var assertBodyContains = function (selector, isPresent) {
    if (isPresent === void 0) { isPresent = true; }
    return exports.assertNodeContains(document.body, selector, isPresent);
};
exports.assertBodyContains = assertBodyContains;
