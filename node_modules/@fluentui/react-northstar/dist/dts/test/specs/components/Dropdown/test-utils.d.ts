import * as React from 'react';
import { DropdownProps } from 'src/components/Dropdown/Dropdown';
declare const items: string[];
declare const renderDropdown: (props?: DropdownProps) => {
    wrapper: import("enzyme").ReactWrapper<any, Readonly<{}>, React.Component<{}, {}, any>>;
    rerender: (props: any) => import("enzyme").ReactWrapper<any, Readonly<{}>, React.Component<{}, {}, any>>;
    rootNode: HTMLElement;
    triggerButtonNode: HTMLElement;
    toggleIndicatorNode: HTMLElement;
    itemsListNode: HTMLElement;
    searchInputNode: HTMLInputElement;
    getA11yMessageContainerNode: () => Element;
    getItemNodes: () => Element[];
    getItemNodeAtIndex: (index: any) => Element;
    getSelectedItemNodes: () => Element[];
    getSelectedItemNodeAtIndex: (index: any) => Element;
    getClearIndicatorWrapper: () => import("enzyme").CommonWrapper<{}, {}, React.Component<{}, {}, any>>;
    getClearIndicatorNode: () => Element;
    mouseOverItemAtIndex: (index: any) => import("enzyme").CommonWrapper<{}, {}, React.Component<{}, {}, any>>;
    changeSearchInput: (value: any) => void;
    clickOnTriggerButton: () => void;
    clickOnToggleIndicator: () => void;
    clickOnSearchInput: () => void;
    clickOnItemAtIndex: (index: number, optional?: {}) => void;
    clickOnClearIndicator: () => void;
    clickOnSelectedItemAtIndex: (index: number, optional?: {}) => void;
    keyDownOnSearchInput: (key: string, optional?: Object) => import("enzyme").CommonWrapper<{}, {}, React.Component<{}, {}, any>>;
    keyDownOnItemsList: (key: string, optional?: Object) => import("enzyme").CommonWrapper<{}, {}, React.Component<{}, {}, any>>;
    keyDownOnTriggerButton: (key: string, optional?: Object) => import("enzyme").CommonWrapper<{}, {}, React.Component<{}, {}, any>>;
    keyDownOnSelectedItemAtIndex: (index: number, key: string, optional?: Object) => void;
    focusTriggerButton: () => void;
    focusSearchInput: () => void;
    focusItemsList: () => void;
};
declare const getItemIdRegexByIndex: (index: any) => RegExp;
export { getItemIdRegexByIndex, renderDropdown, items };
