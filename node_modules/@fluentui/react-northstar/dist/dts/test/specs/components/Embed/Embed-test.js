"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Embed_1 = require("src/components/Embed/Embed");
var commonTests_1 = require("test/specs/commonTests");
var utils_1 = require("test/utils");
describe('Embed', function () {
    commonTests_1.isConformant(Embed_1.Embed, { testPath: __filename, constructorName: 'Embed', autoControlledProps: ['active'] });
    describe('accessibility', function () {
        commonTests_1.handlesAccessibility(Embed_1.Embed, { defaultRootRole: 'presentation' });
    });
    describe('onClick', function () {
        test('is called with (e, props) on a click', function () {
            var onClick = jest.fn();
            var embed = utils_1.mountWithProviderAndGetComponent(Embed_1.Embed, React.createElement(Embed_1.Embed, { onClick: onClick }));
            embed.simulate('click');
            expect(onClick).toHaveBeenCalledTimes(1);
            expect(onClick).toHaveBeenCalledWith(expect.objectContaining({ type: 'click' }), expect.objectContaining({ onClick: onClick, active: true }));
        });
    });
    describe('onActiveChange', function () {
        test('is called with (e, props) on a click', function () {
            var onActiveChange = jest.fn();
            var embed = utils_1.mountWithProviderAndGetComponent(Embed_1.Embed, React.createElement(Embed_1.Embed, { onActiveChange: onActiveChange }));
            embed.simulate('click');
            expect(onActiveChange).toHaveBeenCalledTimes(1);
            expect(onActiveChange).toHaveBeenCalledWith(expect.objectContaining({ type: 'click' }), expect.objectContaining({ onActiveChange: onActiveChange, active: true }));
        });
    });
    describe('variables', function () {
        it('should be set by default', function () {
            var variables = utils_1.mountWithProviderAndGetComponent(Embed_1.Embed, React.createElement(Embed_1.Embed, null)).prop('variables');
            expect(variables).toEqual({});
        });
    });
});
