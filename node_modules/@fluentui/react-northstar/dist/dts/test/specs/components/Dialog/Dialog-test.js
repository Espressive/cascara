"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Dialog_1 = require("src/components/Dialog/Dialog");
var Button_1 = require("src/components/Button/Button");
var utils_1 = require("test/utils");
describe('Dialog', function () {
    describe('content', function () {
        it('uses "id" if "content" with "id" is passed', function () {
            var contentId = 'element-id';
            var wrapper = utils_1.mountWithProvider(React.createElement(Dialog_1.Dialog, { defaultOpen: true, trigger: React.createElement(Button_1.Button, null), content: { id: contentId } }));
            var content = utils_1.findIntrinsicElement(wrapper, "." + Dialog_1.dialogSlotClassNames.content);
            expect(content.prop('id')).toBe(contentId);
        });
        it('uses computed "id" if "content" is passed without "id"', function () {
            var wrapper = utils_1.mountWithProvider(React.createElement(Dialog_1.Dialog, { defaultOpen: true, trigger: React.createElement(Button_1.Button, null), content: "Welcome" }));
            var content = utils_1.findIntrinsicElement(wrapper, "." + Dialog_1.dialogSlotClassNames.content);
            expect(content.prop('id')).toMatch(/dialog-content-\d+/);
        });
    });
    describe('header', function () {
        it('uses "id" if "header" with "id" is passed', function () {
            var headerId = 'element-id';
            var wrapper = utils_1.mountWithProvider(React.createElement(Dialog_1.Dialog, { defaultOpen: true, trigger: React.createElement(Button_1.Button, null), header: { id: headerId } }));
            var header = utils_1.findIntrinsicElement(wrapper, "." + Dialog_1.dialogSlotClassNames.header);
            expect(header.prop('id')).toBe(headerId);
        });
        it('uses computed "id" if "header" is passed without "id"', function () {
            var wrapper = utils_1.mountWithProvider(React.createElement(Dialog_1.Dialog, { defaultOpen: true, trigger: React.createElement(Button_1.Button, null), header: "Welcome" }));
            var header = utils_1.findIntrinsicElement(wrapper, "." + Dialog_1.dialogSlotClassNames.header);
            expect(header.prop('id')).toMatch(/dialog-header-\d+/);
        });
        it('uses "id" if "header" is React Element with "id" is passed', function () {
            var wrapper = utils_1.mountWithProvider(React.createElement(Dialog_1.Dialog, { defaultOpen: true, trigger: React.createElement(Button_1.Button, null), header: React.createElement("span", { id: "header-id" }) }));
            var header = utils_1.findIntrinsicElement(wrapper, "." + Dialog_1.dialogSlotClassNames.header);
            expect(header.prop('id')).toBe('header-id');
        });
    });
});
