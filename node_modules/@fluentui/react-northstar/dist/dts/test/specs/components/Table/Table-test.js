"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var commonTests_1 = require("test/specs/commonTests");
var utils_1 = require("test/utils");
var TableRow_1 = require("src/components/Table/TableRow");
var Table_1 = require("src/components/Table/Table");
describe('Table', function () {
    commonTests_1.isConformant(Table_1.Table, { testPath: __filename, constructorName: 'Table' });
    describe('accessiblity', function () {
        commonTests_1.handlesAccessibility(Table_1.Table, { defaultRootRole: 'table' });
    });
    var header = {
        key: 'header',
        items: [
            { content: 'id', key: 'id' },
            { content: 'Name', key: 'name' },
            { content: 'Picture', key: 'pic' },
            { content: 'Age', key: 'action' },
        ],
    };
    var rows = [
        {
            key: 1,
            items: [
                { content: '1', key: '1-1' },
                {
                    content: 'Roman van von der Longername',
                    key: '1-2',
                },
                { content: 'None', key: '1-3' },
                { content: '30 years', key: '1-4' },
            ],
        },
        {
            key: 2,
            items: [
                { content: '2', key: '2-1' },
                { content: 'Alex', key: '2-2' },
                { content: 'None', key: '2-3' },
                { content: '1 year', key: '2-4' },
            ],
        },
        {
            key: 3,
            items: [
                { content: '3', key: '3-1' },
                { content: 'Ali', key: '3-2' },
                { content: 'None', key: '3-3' },
                { content: '30000000000000 years', key: '3-4' },
            ],
        },
    ];
    it('renders as `div`', function () {
        var table = utils_1.mountWithProviderAndGetComponent(Table_1.Table, React.createElement(Table_1.Table, { rows: rows }))
            .find('.ui-table')
            .hostNodes();
        expect(table.is('div')).toBe(true);
    });
    describe('header', function () {
        it('render children', function () {
            var table = utils_1.mountWithProviderAndGetComponent(Table_1.Table, React.createElement(Table_1.Table, { header: header }))
                .find('.ui-table')
                .hostNodes();
            var tableHeader = table.find(TableRow_1.TableRow);
            expect(tableHeader.length).toBe(1);
        });
        it('does not render empty children', function () {
            var table = utils_1.mountWithProviderAndGetComponent(Table_1.Table, React.createElement(Table_1.Table, null))
                .find('.ui-table')
                .hostNodes();
            var tableHeader = table.find(TableRow_1.TableRow);
            expect(tableHeader.length).toBe(0);
        });
    });
    describe('rows', function () {
        it('render children', function () {
            var table = utils_1.mountWithProviderAndGetComponent(Table_1.Table, React.createElement(Table_1.Table, { rows: rows }))
                .find('.ui-table')
                .hostNodes();
            var tableRows = table.find(TableRow_1.TableRow);
            expect(tableRows.length).toBe(3);
        });
        it('does not render empty children', function () {
            var table = utils_1.mountWithProviderAndGetComponent(Table_1.Table, React.createElement(Table_1.Table, null))
                .find('.ui-table')
                .hostNodes();
            var tableRows = table.find(TableRow_1.TableRow);
            expect(tableRows.length).toBe(0);
        });
    });
    describe('compact', function () {
        it('render compact rows when enabled', function () {
            var table = utils_1.mountWithProviderAndGetComponent(Table_1.Table, React.createElement(Table_1.Table, { rows: rows, compact: true }))
                .find('.ui-table')
                .hostNodes();
            var tableRows = table.find(TableRow_1.TableRow);
            expect(tableRows.first().props().compact).toBeTruthy();
            expect(tableRows.last().props().compact).toBeTruthy();
        });
        it('does not render compact rows when disabled', function () {
            var table = utils_1.mountWithProviderAndGetComponent(Table_1.Table, React.createElement(Table_1.Table, { rows: rows }))
                .find('.ui-table')
                .hostNodes();
            var tableRows = table.find(TableRow_1.TableRow);
            expect(tableRows.first().props().compact).toBeFalsy();
            expect(tableRows.last().props().compact).toBeFalsy();
        });
    });
    describe('children', function () {
        it('are rendered when specified', function () {
            var table = utils_1.mountWithProviderAndGetComponent(Table_1.Table, React.createElement(Table_1.Table, { "aria-label": "table" },
                React.createElement(Table_1.Table.Row, { header: true },
                    React.createElement(Table_1.Table.Cell, { content: "id", key: "id" }),
                    React.createElement(Table_1.Table.Cell, { content: "Name", key: "name" }),
                    React.createElement(Table_1.Table.Cell, { content: "Picture", key: "pic" }),
                    React.createElement(Table_1.Table.Cell, { content: "Age", key: "age" })),
                React.createElement(Table_1.Table.Row, { key: "1" },
                    React.createElement(Table_1.Table.Cell, { content: "1", key: "1-1" }),
                    React.createElement(Table_1.Table.Cell, { content: "Roman van von der Longername", key: "1-2" }),
                    React.createElement(Table_1.Table.Cell, { content: "None", key: "1-3" }),
                    React.createElement(Table_1.Table.Cell, { content: "30 years", key: "1-4" })),
                React.createElement(Table_1.Table.Row, { key: "2" },
                    React.createElement(Table_1.Table.Cell, { content: "2", key: "1-1" }),
                    React.createElement(Table_1.Table.Cell, { content: "Alex", key: "1-2" }),
                    React.createElement(Table_1.Table.Cell, { content: "None", key: "1-3" }),
                    React.createElement(Table_1.Table.Cell, { content: "1 year", key: "1-4" })),
                React.createElement(Table_1.Table.Row, { key: "3" },
                    React.createElement(Table_1.Table.Cell, { content: "3", key: "1-1" }),
                    React.createElement(Table_1.Table.Cell, { content: "Ali", key: "1-2" }),
                    React.createElement(Table_1.Table.Cell, { content: "None", key: "1-3" }),
                    React.createElement(Table_1.Table.Cell, { content: "30000000000000 years", key: "1-4" }))))
                .find('.ui-table')
                .hostNodes();
            var tableRows = table.find(TableRow_1.TableRow);
            expect(tableRows.length).toBe(4);
        });
    });
});
