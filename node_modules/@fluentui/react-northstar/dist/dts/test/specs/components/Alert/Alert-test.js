"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var commonTests_1 = require("test/specs/commonTests");
var Alert_1 = require("src/components/Alert/Alert");
var Box_1 = require("src/components/Box/Box");
var AlertDismissAction_1 = require("src/components/Alert/AlertDismissAction");
var alertImplementsShorthandProp = commonTests_1.implementsShorthandProp(Alert_1.Alert);
describe('Alert', function () {
    commonTests_1.isConformant(Alert_1.Alert, { testPath: __filename, constructorName: 'Alert', autoControlledProps: ['visible'] });
    commonTests_1.handlesAccessibility(Alert_1.Alert, { defaultRootRole: undefined, requiredProps: { content: 'test' } });
    commonTests_1.handlesAccessibility(Alert_1.Alert, {
        defaultRootRole: undefined,
        partSelector: "." + Alert_1.alertSlotClassNames.body,
        requiredProps: { content: 'test' },
    });
    commonTests_1.handlesAccessibility(Alert_1.Alert, {
        defaultRootRole: 'alert',
        partSelector: "." + Alert_1.alertSlotClassNames.body,
        requiredProps: { content: 'test', warning: true },
    });
    alertImplementsShorthandProp('dismissAction', AlertDismissAction_1.AlertDismissAction, {
        mapsValueToProp: 'content',
        requiredProps: { dismissible: true },
    });
    alertImplementsShorthandProp('content', Box_1.Box, { mapsValueToProp: 'children' });
    describe('compliance', function () {
        test('default', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, commonTests_1.htmlIsAccessibilityCompliant(React.createElement(Alert_1.Alert, { content: "Test" }))];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); });
        test('danger', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, commonTests_1.htmlIsAccessibilityCompliant(React.createElement(Alert_1.Alert, { danger: true, content: "Test" }))];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); });
    });
});
