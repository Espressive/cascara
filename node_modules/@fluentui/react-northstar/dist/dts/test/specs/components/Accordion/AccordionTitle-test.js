"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var accessibility_1 = require("@fluentui/accessibility");
var AccordionTitle_1 = require("src/components/Accordion/AccordionTitle");
var commonTests_1 = require("test/specs/commonTests");
var utils_1 = require("test/utils");
describe('AccordionTitle', function () {
    commonTests_1.isConformant(AccordionTitle_1.AccordionTitle, {
        testPath: __filename,
        constructorName: 'AccordionTitle',
        eventTargets: {
            onClick: "." + AccordionTitle_1.accordionTitleSlotClassNames.contentWrapper,
        },
    });
    describe('accessiblity', function () {
        describe('header', function () {
            commonTests_1.handlesAccessibility(AccordionTitle_1.AccordionTitle, {
                requiredProps: { as: 'h3' },
                defaultRootRole: undefined,
            });
        });
        describe('div header', function () {
            commonTests_1.handlesAccessibility(AccordionTitle_1.AccordionTitle, {
                defaultRootRole: 'heading',
            });
        });
    });
    var getContent = function (wrapper) { return wrapper.find("div." + AccordionTitle_1.accordionTitleSlotClassNames.contentWrapper); };
    describe('click handler', function () {
        it('is called on click', function () {
            var onClick = jest.fn();
            var wrapper = utils_1.mountWithProvider(React.createElement(AccordionTitle_1.AccordionTitle, { onClick: onClick }));
            getContent(wrapper).simulate('click');
            expect(onClick).toHaveBeenCalled();
        });
        it('is not called on click for disabled title', function () {
            var onClick = jest.fn();
            var wrapper = utils_1.mountWithProvider(React.createElement(AccordionTitle_1.AccordionTitle, { onClick: onClick, disabled: true }));
            getContent(wrapper).simulate('click');
            expect(onClick).not.toHaveBeenCalled();
        });
    });
    describe('Enter key', function () {
        it('calls onClick', function () {
            var onClick = jest.fn();
            var wrapper = utils_1.mountWithProvider(React.createElement(AccordionTitle_1.AccordionTitle, { onClick: onClick }));
            getContent(wrapper).simulate('keydown', {
                keyCode: accessibility_1.keyboardKey.Enter,
            });
            expect(onClick).toHaveBeenCalled();
        });
        it('does not call onClick for disabled title', function () {
            var onClick = jest.fn();
            var wrapper = utils_1.mountWithProvider(React.createElement(AccordionTitle_1.AccordionTitle, { onClick: onClick, disabled: true }));
            getContent(wrapper).simulate('keydown', {
                keyCode: accessibility_1.keyboardKey.Enter,
            });
            expect(onClick).not.toHaveBeenCalled();
        });
    });
});
