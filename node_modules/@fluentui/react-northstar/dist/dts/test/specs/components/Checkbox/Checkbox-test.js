"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var Checkbox_1 = require("src/components/Checkbox/Checkbox");
var commonTests_1 = require("test/specs/commonTests");
describe('Checkbox', function () {
    commonTests_1.isConformant(Checkbox_1.Checkbox, {
        testPath: __filename,
        constructorName: 'Checkbox',
        autoControlledProps: ['checked'],
    });
    commonTests_1.handlesAccessibility(Checkbox_1.Checkbox, { defaultRootRole: 'checkbox' });
    describe('HTML accessibility rules validation', function () {
        describe('icon button must have textual representation for screen readers', function () {
            test('base state', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, commonTests_1.htmlIsAccessibilityCompliant(React.createElement(Checkbox_1.Checkbox, { label: "test label" }))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            }); }); });
            test('checked', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, commonTests_1.htmlIsAccessibilityCompliant(React.createElement(Checkbox_1.Checkbox, { label: "test label", checked: true }))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            }); }); });
            test('checked and disabled', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, commonTests_1.htmlIsAccessibilityCompliant(React.createElement(Checkbox_1.Checkbox, { label: "test label", checked: true, disabled: true }))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            }); }); });
        });
    });
});
