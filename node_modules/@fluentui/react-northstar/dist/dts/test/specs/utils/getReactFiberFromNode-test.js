"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ReactDOM = require("react-dom");
var getReactFiberFromNode_1 = require("src/utils/getReactFiberFromNode");
describe('getReactFiberFromNode', function () {
    it('returns a Fiber for DOM node', function () {
        var rootEl = document.createElement('div');
        document.body.appendChild(rootEl);
        ReactDOM.render(React.createElement("div", { id: "foo" }), rootEl);
        var renderedEl = document.querySelector('#foo');
        var fiber = getReactFiberFromNode_1.getReactFiberFromNode(renderedEl);
        expect(renderedEl).toBeInTheDocument();
        expect(fiber).toHaveProperty('tag', 5);
        expect(fiber).toHaveProperty('type', 'div');
        expect(fiber).toHaveProperty('pendingProps', expect.objectContaining({ id: 'foo' }));
        ReactDOM.unmountComponentAtNode(rootEl);
        document.body.removeChild(rootEl);
    });
    it('throws on non-React node', function () {
        expect(function () { return getReactFiberFromNode_1.getReactFiberFromNode(document.createElement('div')); }).toThrow(/Failed to find a React Fiber on a node/);
    });
    it('returns null if nothing was passed', function () {
        expect(getReactFiberFromNode_1.getReactFiberFromNode(undefined)).toBe(null);
    });
});
