"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DateGrid = require("../../../../../src/utils/date-time-utilities/dateGrid/isBeforeMinDate");
var Months;
(function (Months) {
    Months[Months["Jan"] = 0] = "Jan";
    Months[Months["Feb"] = 1] = "Feb";
    Months[Months["Mar"] = 2] = "Mar";
    Months[Months["Apr"] = 3] = "Apr";
    Months[Months["May"] = 4] = "May";
    Months[Months["Jun"] = 5] = "Jun";
    Months[Months["Jul"] = 6] = "Jul";
    Months[Months["Aug"] = 7] = "Aug";
    Months[Months["Sep"] = 8] = "Sep";
    Months[Months["Oct"] = 9] = "Oct";
    Months[Months["Nov"] = 10] = "Nov";
    Months[Months["Dec"] = 11] = "Dec";
})(Months || (Months = {}));
describe('isBeforeMinDate', function () {
    var date = new Date(2016, Months.Apr, 3);
    it('returns false if min date is empty', function () {
        var options = {};
        var result = DateGrid.isBeforeMinDate(date, options);
        expect(result).toBeFalsy();
    });
    it('returns true if min date is greater than date', function () {
        var options = {
            minDate: new Date(2016, Months.Apr, 7),
        };
        var result = DateGrid.isBeforeMinDate(date, options);
        expect(result).toBeTruthy();
    });
    it('returns false if min date is equal to date', function () {
        var options = {
            minDate: new Date(2016, Months.Apr, 3),
        };
        var result = DateGrid.isBeforeMinDate(date, options);
        expect(result).toBeFalsy();
    });
    it('returns false if min date is less than date', function () {
        var options = {
            minDate: new Date(2016, Months.Apr, 1),
        };
        var result = DateGrid.isBeforeMinDate(date, options);
        expect(result).toBeFalsy();
    });
});
