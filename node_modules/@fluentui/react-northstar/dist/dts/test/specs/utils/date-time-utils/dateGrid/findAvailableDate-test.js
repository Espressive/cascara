"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var DateGrid = require("../../../../../src/utils/date-time-utilities/dateGrid/findAvailableDate");
var Months;
(function (Months) {
    Months[Months["Jan"] = 0] = "Jan";
    Months[Months["Feb"] = 1] = "Feb";
    Months[Months["Mar"] = 2] = "Mar";
    Months[Months["Apr"] = 3] = "Apr";
    Months[Months["May"] = 4] = "May";
    Months[Months["Jun"] = 5] = "Jun";
    Months[Months["Jul"] = 6] = "Jul";
    Months[Months["Aug"] = 7] = "Aug";
    Months[Months["Sep"] = 8] = "Sep";
    Months[Months["Oct"] = 9] = "Oct";
    Months[Months["Nov"] = 10] = "Nov";
    Months[Months["Dec"] = 11] = "Dec";
})(Months || (Months = {}));
describe('findAvailableDate', function () {
    var defaultOptions = {
        initialDate: new Date(2016, Months.Apr, 1),
        targetDate: new Date(2016, Months.Apr, 2),
        direction: 1,
    };
    it('returns next available date', function () {
        var result = DateGrid.findAvailableDate(defaultOptions);
        var expected = defaultOptions.targetDate;
        expect(result).toEqual(expected);
    });
    it('returns next available date, within date restrictions', function () {
        var minDateOptions = tslib_1.__assign({}, defaultOptions);
        minDateOptions.restrictedDates = [new Date(2016, Months.Apr, 2), new Date(2016, Months.Apr, 3)];
        var result = DateGrid.findAvailableDate(minDateOptions);
        var expected = new Date(2016, Months.Apr, 4);
        expect(result).toEqual(expected);
    });
    it('returns previous available date', function () {
        var reverseOptions = {
            initialDate: new Date(2016, Months.Apr, 2),
            targetDate: new Date(2016, Months.Apr, 1),
            direction: -1,
        };
        var result = DateGrid.findAvailableDate(reverseOptions);
        var expected = new Date(2016, Months.Apr, 1);
        expect(result).toEqual(expected);
    });
    it('returns previous available date, within date restrictions', function () {
        var reverseOptions = {
            initialDate: new Date(2016, Months.Apr, 2),
            targetDate: new Date(2016, Months.Apr, 1),
            direction: -1,
            restrictedDates: [new Date(2016, Months.Apr, 1), new Date(2016, Months.Apr, 2)],
        };
        var result = DateGrid.findAvailableDate(reverseOptions);
        var expected = new Date(2016, Months.Mar, 31);
        expect(result).toEqual(expected);
    });
});
