"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var dateValues_1 = require("../../../../../src/utils/date-time-utilities/dateValues/dateValues");
var DateGrid = require("../../../../../src/utils/date-time-utilities/dateGrid/getDateRangeTypeToUse");
describe('getDateRangeTypeToUse', function () {
    it('returns incoming range type if working days are empty', function () {
        var resultDay = DateGrid.getDateRangeTypeToUse(dateValues_1.DateRangeType.Day, undefined, dateValues_1.DayOfWeek.Sunday);
        expect(resultDay).toBe(dateValues_1.DateRangeType.Day);
        var resultWeek = DateGrid.getDateRangeTypeToUse(dateValues_1.DateRangeType.Week, undefined, dateValues_1.DayOfWeek.Sunday);
        expect(resultWeek).toBe(dateValues_1.DateRangeType.Week);
        var resultMonth = DateGrid.getDateRangeTypeToUse(dateValues_1.DateRangeType.Month, undefined, dateValues_1.DayOfWeek.Sunday);
        expect(resultMonth).toBe(dateValues_1.DateRangeType.Month);
        var resultWorkWeek = DateGrid.getDateRangeTypeToUse(dateValues_1.DateRangeType.WorkWeek, undefined, dateValues_1.DayOfWeek.Sunday);
        expect(resultWorkWeek).toBe(dateValues_1.DateRangeType.WorkWeek);
    });
    it('returns Week range type if working days are non-contiguous and incoming type is WorkWeek', function () {
        var resultWorkWeek = DateGrid.getDateRangeTypeToUse(dateValues_1.DateRangeType.WorkWeek, [dateValues_1.DayOfWeek.Monday, dateValues_1.DayOfWeek.Wednesday], dateValues_1.DayOfWeek.Sunday);
        expect(resultWorkWeek).toBe(dateValues_1.DateRangeType.Week);
    });
    it('returns WorkWeek range type if working days are contiguous and incoming type is WorkWeek', function () {
        var resultWorkWeek = DateGrid.getDateRangeTypeToUse(dateValues_1.DateRangeType.WorkWeek, [dateValues_1.DayOfWeek.Monday, dateValues_1.DayOfWeek.Tuesday], dateValues_1.DayOfWeek.Sunday);
        expect(resultWorkWeek).toBe(dateValues_1.DateRangeType.WorkWeek);
    });
    it('returns WorkWeek range type if working days are not contiguous from Saturday to Sunday and incoming type is WorkWeek', function () {
        var resultWorkWeek = DateGrid.getDateRangeTypeToUse(dateValues_1.DateRangeType.WorkWeek, [dateValues_1.DayOfWeek.Saturday, dateValues_1.DayOfWeek.Sunday], dateValues_1.DayOfWeek.Sunday);
        expect(resultWorkWeek).toBe(dateValues_1.DateRangeType.Week);
    });
    it('returns WorkWeek range type if working days are contiguous from Saturday to Sunday and incoming type is WorkWeek', function () {
        var resultWorkWeek = DateGrid.getDateRangeTypeToUse(dateValues_1.DateRangeType.WorkWeek, [dateValues_1.DayOfWeek.Saturday, dateValues_1.DayOfWeek.Sunday], dateValues_1.DayOfWeek.Monday);
        expect(resultWorkWeek).toBe(dateValues_1.DateRangeType.WorkWeek);
    });
});
