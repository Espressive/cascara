"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var shouldPreventDefaultOnKeyDown_1 = require("../../../src/utils/shouldPreventDefaultOnKeyDown");
describe('shouldPreventDefaultOnKeyDown', function () {
    it('handles proper keys', function () {
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(new KeyboardEvent('keydown', { key: 'Backspace' }))).toBe(false);
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(new KeyboardEvent('keydown', { key: 'Delete' }))).toBe(false);
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(new KeyboardEvent('keydown', { key: 'Enter' }))).toBe(true);
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(new KeyboardEvent('keydown', { key: ' ' }))).toBe(true);
    });
    it('ignores for field-like targets', function () {
        var divEvent = new KeyboardEvent('keydown', { key: 'Enter' });
        var inputEvent = new KeyboardEvent('keydown', { key: 'Enter' });
        var textareaEvent = new KeyboardEvent('keydown', { key: 'Enter' });
        document.createElement('div').dispatchEvent(divEvent);
        document.createElement('input').dispatchEvent(inputEvent);
        document.createElement('textarea').dispatchEvent(textareaEvent);
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(divEvent)).toBe(true);
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(inputEvent)).toBe(false);
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(textareaEvent)).toBe(false);
    });
    it('handles "Enter" for anchor targets', function () {
        var anchorEvent = new KeyboardEvent('keydown', { key: 'Enter' });
        document.createElement('a').dispatchEvent(anchorEvent);
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(anchorEvent)).toBe(false);
    });
    it('ignores "Space" for anchor targets', function () {
        // 'Space' or 'Spacebar' doesn't work https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values
        var anchorEvent = new KeyboardEvent('keydown', { key: ' ' });
        document.createElement('a').dispatchEvent(anchorEvent);
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(anchorEvent)).toBe(true);
    });
    it('ignores for editable targets', function () {
        var event = new KeyboardEvent('keydown', { key: 'Enter' });
        var element = document.createElement('div');
        // @ts-ignore
        element.isContentEditable = true;
        element.dispatchEvent(event);
        expect(shouldPreventDefaultOnKeyDown_1.shouldPreventDefaultOnKeyDown(event)).toBe(false);
    });
});
