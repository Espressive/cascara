"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var mergeProviderContexts_1 = require("../../../../src/utils/mergeProviderContexts");
describe('mergeBooleanValues', function () {
    test('latest boolean value wins', function () {
        expect(mergeProviderContexts_1.mergeBooleanValues(false, true)).toEqual(true);
        expect(mergeProviderContexts_1.mergeBooleanValues(true, false)).toEqual(false);
        expect(mergeProviderContexts_1.mergeBooleanValues(null, true)).toEqual(true);
        expect(mergeProviderContexts_1.mergeBooleanValues(null, false)).toEqual(false);
        expect(mergeProviderContexts_1.mergeBooleanValues(undefined, true)).toEqual(true);
        expect(mergeProviderContexts_1.mergeBooleanValues(undefined, false)).toEqual(false);
    });
    test('null values do not override boolean values', function () {
        expect(mergeProviderContexts_1.mergeBooleanValues(false, null)).toEqual(false);
        expect(mergeProviderContexts_1.mergeBooleanValues(true, null)).toEqual(true);
    });
    test('undefined values do not override boolean values', function () {
        expect(mergeProviderContexts_1.mergeBooleanValues(false, undefined)).toEqual(false);
        expect(mergeProviderContexts_1.mergeBooleanValues(true, undefined)).toEqual(true);
    });
    test('first value wins if no boolean was provided', function () {
        // if a theme is created using mergeThemes() its rtl or disableAnimations should remain `undefined` to be able to inherit it from parent Provider
        expect(mergeProviderContexts_1.mergeBooleanValues(null, null)).toEqual(null);
        expect(mergeProviderContexts_1.mergeBooleanValues(undefined, null)).toEqual(undefined);
        expect(mergeProviderContexts_1.mergeBooleanValues(null, undefined)).toEqual(null);
        expect(mergeProviderContexts_1.mergeBooleanValues(undefined, undefined)).toEqual(undefined);
    });
});
