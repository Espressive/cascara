{"version":3,"sources":["createFelaRenderer.tsx"],"names":["felaDevMode","window","localStorage","process","env","NODE_ENV","console","warn","join","blacklistedClassNames","filterClassName","className","indexOf","rendererConfig","devMode","enhancers","felaPerformanceEnhancer","felaFocusVisibleEnhancer","felaStylisEnhancer","plugins","felaDisableAnimationsPlugin","felaSanitizeCssPlugin","felaInvokeKeyframesPlugin","felaExpandCssShorthandsPlugin","createFelaRenderer","target","felaRenderer","usedRenderers","Provider","props","rehydrate","targetDocument","children","registerUsage","unregisterUsage","listeners","nodes","updateSubscription","undefined","renderFont","font","name","paths","renderGlobal","renderStatic","renderRule","styles","param","felaParam","theme","direction","getOriginalRenderer","Error"],"mappings":"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","sourcesContent":["import { CreateRenderer } from '@fluentui/react-northstar-styles-renderer';\nimport { createRenderer, IRenderer, IStyle, TPlugin } from 'fela';\nimport felaPluginEmbedded from 'fela-plugin-embedded';\nimport felaPluginFallbackValue from 'fela-plugin-fallback-value';\nimport felaPluginPlaceholderPrefixer from 'fela-plugin-placeholder-prefixer';\nimport felaPluginRtl from 'fela-plugin-rtl';\nimport * as React from 'react';\nimport { RendererProvider } from 'react-fela';\n\nimport { felaDisableAnimationsPlugin } from './felaDisableAnimationsPlugin';\nimport { felaExpandCssShorthandsPlugin } from './felaExpandCssShorthandsPlugin';\nimport { felaFocusVisibleEnhancer } from './felaFocusVisibleEnhancer';\nimport { felaInvokeKeyframesPlugin } from './felaInvokeKeyframesPlugin';\nimport { felaPerformanceEnhancer } from './felaPerformanceEnhancer';\nimport { felaSanitizeCssPlugin } from './felaSanitizeCssPlugin';\nimport { felaStylisEnhancer } from './felaStylisEnhancer';\nimport { FelaRendererParam } from './types';\n\nlet felaDevMode = false;\n\ntry {\n  // eslint-disable-next-line no-undef\n  felaDevMode = !!window.localStorage.felaDevMode;\n} catch {}\n\nif (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n  if (felaDevMode) {\n    /* eslint-disable-next-line no-console */\n    console.warn(\n      [\n        '@fluentui/react-northstar:',\n        'You are running Fela in development mode and this can cause performance degrades.',\n        'To disable it please paste `delete window.localStorage.felaDevMode` to your browsers console and reload current page.',\n      ].join(' '),\n    );\n  } else {\n    /* eslint-disable-next-line no-console */\n    console.warn(\n      [\n        '@fluentui/react-northstar:',\n        'You are running Fela in production mode.',\n        'This limits your ability to edit styles in browsers development tools.',\n        'To enable development mode please paste `window.localStorage.felaDevMode = true` to your browsers console and reload the page.',\n      ].join(' '),\n    );\n  }\n}\n\nconst blacklistedClassNames = [\n  // Blacklist contains a list of classNames that are used by FontAwesome\n  // https://fontawesome.com/how-to-use/on-the-web/referencing-icons/basic-use\n  'fa',\n  'fas',\n  'far',\n  'fal',\n  'fab',\n  // .cke is used by CKEditor\n  'ck',\n  'cke',\n];\n\nconst filterClassName = (className: string): boolean =>\n  className.indexOf('ad') === -1 && blacklistedClassNames.indexOf(className) === -1;\n\nconst rendererConfig = {\n  devMode: felaDevMode,\n  filterClassName,\n  enhancers: [felaPerformanceEnhancer, felaFocusVisibleEnhancer, felaStylisEnhancer],\n  plugins: [\n    felaDisableAnimationsPlugin as TPlugin,\n\n    // is necessary to prevent accidental style typos\n    // from breaking ALL the styles on the page\n    felaSanitizeCssPlugin as TPlugin,\n\n    felaPluginPlaceholderPrefixer(),\n    felaInvokeKeyframesPlugin as TPlugin,\n    felaPluginEmbedded(),\n\n    felaExpandCssShorthandsPlugin as TPlugin,\n\n    // Heads up!\n    // This is required after fela-plugin-prefixer to resolve the array of fallback values prefixer produces.\n    felaPluginFallbackValue(),\n\n    felaPluginRtl(),\n  ],\n};\n\nexport const createFelaRenderer: CreateRenderer = target => {\n  const felaRenderer = createRenderer(rendererConfig) as IRenderer & {\n    listeners: [];\n    nodes: Record<string, HTMLStyleElement>;\n    updateSubscription: Function | undefined;\n  };\n  let usedRenderers: number = 0;\n\n  // rehydration disabled to avoid leaking styles between renderers\n  // https://github.com/rofrischmann/fela/blob/master/docs/api/fela-dom/rehydrate.md\n  const Provider: React.FC = props => (\n    <RendererProvider renderer={felaRenderer} {...{ rehydrate: false, targetDocument: target }}>\n      {props.children}\n    </RendererProvider>\n  );\n\n  return {\n    registerUsage: () => {\n      usedRenderers += 1;\n    },\n    unregisterUsage: () => {\n      usedRenderers -= 1;\n\n      if (usedRenderers === 0) {\n        felaRenderer.listeners = [];\n        felaRenderer.nodes = {};\n        felaRenderer.updateSubscription = undefined;\n      }\n    },\n\n    renderFont: font => {\n      felaRenderer.renderFont(font.name, font.paths, font.props);\n    },\n    renderGlobal: felaRenderer.renderStatic,\n    renderRule: (styles, param) => {\n      const felaParam: FelaRendererParam = {\n        ...param,\n        theme: { direction: param.direction },\n      };\n\n      return felaRenderer.renderRule(() => (styles as unknown) as IStyle, felaParam);\n    },\n\n    // getOriginalRenderer() is implemented only for tests to be compatible with jest-react-fela expectations.\n    getOriginalRenderer: (): IRenderer => {\n      if (process.env.NODE_ENV !== 'test') {\n        throw new Error('This method implements private API and can be used only in tests');\n      }\n\n      return felaRenderer;\n    },\n\n    Provider,\n  };\n};\n"],"file":"createFelaRenderer.js"}