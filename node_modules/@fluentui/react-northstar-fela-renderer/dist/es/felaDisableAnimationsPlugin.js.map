{"version":3,"sources":["felaDisableAnimationsPlugin.ts"],"names":["animationProps","isPlainObject","val","Array","isArray","felaDisableAnimationsPlugin","styles","type","renderer","props","disableAnimations","Object","keys","reduce","acc","cssPropertyName","cssPropertyValue","indexOf"],"mappings":"AAGA,IAAMA,cAAuC,GAAG,CAC9C,WAD8C,EAE9C,eAF8C,EAG9C,mBAH8C,EAI9C,yBAJ8C,EAK9C,gBAL8C,EAM9C,yBAN8C,EAO9C,oBAP8C,EAQ9C,mBAR8C,EAS9C,oBAT8C,CAAhD;;AAYA,SAASC,aAAT,CAAuBC,GAAvB,EAAiC;AAC/B,SAAOA,GAAG,IAAI,IAAP,IAAe,OAAOA,GAAP,KAAe,QAA9B,IAA0CC,KAAK,CAACC,OAAN,CAAcF,GAAd,MAAuB,KAAxE;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA8B,CACzCC,MADyC,EAEzCC,IAFyC,EAGzCC,QAHyC,EAIzCC,KAJyC,EAKvB;AAClB,MAAIA,KAAK,IAAIA,KAAK,CAACC,iBAAf,IAAoCH,IAAI,KAAK,MAAjD,EAAyD;AACvD,WAAOI,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,MAApB,CAA2B,UAACC,GAAD,EAAMC,eAAN,EAA+C;AAAA;;AAC/E,UAAMC,gBAAgB,GAAGV,MAAM,CAACS,eAAD,CAA/B;;AAEA,UAAIf,cAAc,CAACiB,OAAf,CAAuBF,eAAvB,MAA4C,CAAC,CAAjD,EAAoD;AAClD,eAAOD,GAAP;AACD;;AAED,UAAIb,aAAa,CAACe,gBAAD,CAAjB,EAAqC;AAAA;;AACnC,iCACKF,GADL,uCAEGC,eAFH,IAEqBV,2BAA2B,CAACW,gBAAD,EAAoCT,IAApC,EAA0CC,QAA1C,EAAoDC,KAApD,CAFhD;AAID;;AAED,+BAAYK,GAAZ,yCAAkBC,eAAlB,IAAoCT,MAAM,CAACS,eAAD,CAA1C;AACD,KAfM,EAeJ,EAfI,CAAP;AAgBD;;AACD,SAAOT,MAAP;AACD,CAzBM","sourcesContent":["import { ICSSInJSStyle } from '@fluentui/styles';\nimport { FelaRenderer, FelaRendererParam } from './types';\n\nconst animationProps: (keyof ICSSInJSStyle)[] = [\n  'animation',\n  'animationName',\n  'animationDuration',\n  'animationTimingFunction',\n  'animationDelay',\n  'animationIterationCount',\n  'animationDirection',\n  'animationFillMode',\n  'animationPlayState',\n];\n\nfunction isPlainObject(val: any) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n}\n\n/**\n * Fela plugin for disabling animations. The animations are disabled or not based on the\n * props' disableAnimations param. If the value of the prop is true, all animation related\n * styles are removed.\n *\n * Caution! Infinite recursion is possible in case if style object has links to self in the props\n * tree.\n */\nexport const felaDisableAnimationsPlugin = (\n  styles: ICSSInJSStyle,\n  type: string,\n  renderer?: FelaRenderer,\n  props?: Partial<FelaRendererParam>,\n): ICSSInJSStyle => {\n  if (props && props.disableAnimations && type === 'RULE') {\n    return Object.keys(styles).reduce((acc, cssPropertyName: keyof ICSSInJSStyle) => {\n      const cssPropertyValue = styles[cssPropertyName];\n\n      if (animationProps.indexOf(cssPropertyName) !== -1) {\n        return acc;\n      }\n\n      if (isPlainObject(cssPropertyValue)) {\n        return {\n          ...acc,\n          [cssPropertyName]: felaDisableAnimationsPlugin(cssPropertyValue as ICSSInJSStyle, type, renderer, props),\n        };\n      }\n\n      return { ...acc, [cssPropertyName]: styles[cssPropertyName] };\n    }, {});\n  }\n  return styles;\n};\n"],"file":"felaDisableAnimationsPlugin.js"}