"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var felaInvokeKeyframesPlugin_1 = require("../src/felaInvokeKeyframesPlugin");
describe('felaRenderKeyframesPlugin', function () {
    test('does not transform the animationName prop if it is already string', function () {
        var style = {
            animationName: 'k1',
            animationDuration: '2s',
        };
        expect(felaInvokeKeyframesPlugin_1.felaInvokeKeyframesPlugin(style)).toMatchObject(style);
    });
    test('does not transform the animationName prop if it is already object', function () {
        var style = {
            animationName: { from: { rotate: '0deg' }, to: { rotate: '360deg' } },
            animationDuration: '2s',
        };
        expect(felaInvokeKeyframesPlugin_1.felaInvokeKeyframesPlugin(style)).toMatchObject(style);
    });
    test('transforms the animationName prop if it contains keyframe in the definition', function () {
        var style = {
            animationName: {
                keyframe: function () { return ({ from: { rotate: '0deg' }, to: { rotate: '360deg' } }); },
            },
            animationDuration: '2s',
        };
        expect(felaInvokeKeyframesPlugin_1.felaInvokeKeyframesPlugin(style)).toMatchObject({
            animationName: expect.objectContaining({
                from: expect.any(Object),
                to: expect.any(Object),
            }),
            animationDuration: '2s',
        });
    });
    test('transforms the animationName prop with params', function () {
        var style = {
            animationName: {
                keyframe: function (_a) {
                    var from = _a.from;
                    return ({ from: { rotate: from }, to: { rotate: '360deg' } });
                },
                params: { from: '100deg' },
            },
            animationDuration: '2s',
        };
        expect(felaInvokeKeyframesPlugin_1.felaInvokeKeyframesPlugin(style)).toMatchObject({
            animationName: expect.objectContaining({
                from: { rotate: '100deg' },
                to: expect.any(Object),
            }),
            animationDuration: '2s',
        });
    });
    test('does not transform a list of strings', function () {
        var style = {
            display: 'inline-grid',
        };
        expect(felaInvokeKeyframesPlugin_1.felaInvokeKeyframesPlugin(style)).toMatchObject(style);
    });
});
