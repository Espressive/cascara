"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var customPropTypes = require("@fluentui/react-proptypes");
describe('suggest prop type', function () {
    test('should throw error when non-array argument given', function () {
        expect(function () { return customPropTypes.suggest('foo'); }).toThrowError(Error);
    });
    test('should return undefined when prop is valid', function () {
        var propType = customPropTypes.suggest(['foo', 'bar', 'baz']);
        expect(propType({ name: 'bar' }, 'name', 'FooComponent')).toBe(undefined);
    });
    test('should return Error with suggestions when prop is invalid', function () {
        var propType = customPropTypes.suggest(['foo', 'bar', 'baz']);
        var props = { name: 'bad', title: 'bat words' };
        var resultFooComponent = propType(props, 'name', 'FooComponent');
        expect(resultFooComponent).toBeInstanceOf(Error);
        expect(resultFooComponent.message).toBe("Invalid prop `name` of value `bad` supplied to `FooComponent`.\n\nInstead of `bad`, did you mean:\n  - bar\n  - baz\n  - foo\n");
        var resultBarComponent = propType(props, 'title', 'BarComponent');
        expect(resultBarComponent).toBeInstanceOf(Error);
        expect(resultBarComponent.message).toBe("Invalid prop `title` of value `bat words` supplied to `BarComponent`.\n\nInstead of `bat words`, did you mean:\n  - bar\n  - baz\n  - foo\n");
    });
});
