{"version":3,"sources":["leven.ts"],"names":["leven","a","b","process","env","NODE_ENV","arr","charCodeCache","aLen","length","bLen","bCharCode","ret","tmp","tmp2","i","j","charCodeAt"],"mappings":";;;;;AAAA;AACA;;AACA;AAEA,IAAIA,KAAK,GAAG,eAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,CAAV;AAAA,CAAZ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAMC,GAAa,GAAG,EAAtB;AACA,MAAMC,aAAuB,GAAG,EAAhC;;AAEAP,EAAAA,KAAK,GAAG,eAACC,CAAD,EAAIC,CAAJ,EAAU;AAChB,QAAID,CAAC,KAAKC,CAAV,EAAa,OAAO,CAAP;AAEb,QAAMM,IAAI,GAAGP,CAAC,CAACQ,MAAf;AACA,QAAMC,IAAI,GAAGR,CAAC,CAACO,MAAf;AAEA,QAAID,IAAI,KAAK,CAAb,EAAgB,OAAOE,IAAP;AAChB,QAAIA,IAAI,KAAK,CAAb,EAAgB,OAAOF,IAAP;AAEhB,QAAIG,SAAJ;AACA,QAAIC,GAAJ;AACA,QAAIC,GAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,CAAC,GAAG,CAAR;;AAEA,WAAOD,CAAC,GAAGP,IAAX,EAAiB;AACfD,MAAAA,aAAa,CAACQ,CAAD,CAAb,GAAmBd,CAAC,CAACgB,UAAF,CAAaF,CAAb,CAAnB;AACAT,MAAAA,GAAG,CAACS,CAAD,CAAH,GAAS,EAAEA,CAAX;AACD;;AAED,WAAOC,CAAC,GAAGN,IAAX,EAAiB;AACfC,MAAAA,SAAS,GAAGT,CAAC,CAACe,UAAF,CAAaD,CAAb,CAAZ;AACAH,MAAAA,GAAG,GAAGG,CAAC,EAAP;AACAJ,MAAAA,GAAG,GAAGI,CAAN;;AAEA,WAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGP,IAAhB,EAAsBO,CAAC,EAAvB,EAA2B;AACzBD,QAAAA,IAAI,GAAGH,SAAS,KAAKJ,aAAa,CAACQ,CAAD,CAA3B,GAAiCF,GAAjC,GAAuCA,GAAG,GAAG,CAApD;AACAA,QAAAA,GAAG,GAAGP,GAAG,CAACS,CAAD,CAAT;AACAH,QAAAA,GAAG,GAAGN,GAAG,CAACS,CAAD,CAAH,GAASF,GAAG,GAAGD,GAAN,GAAaE,IAAI,GAAGF,GAAP,GAAaA,GAAG,GAAG,CAAnB,GAAuBE,IAApC,GAA4CA,IAAI,GAAGD,GAAP,GAAaA,GAAG,GAAG,CAAnB,GAAuBC,IAAlF;AACD;AACF;;AAED,WAAOF,GAAP;AACD,GAlCD;AAmCD;;eAEcZ,K","sourcesContent":["// Copy of sindre's leven, wrapped in dead code elimination for production\n// https://github.com/sindresorhus/leven/blob/master/index.js\n/* eslint-disable */\n\nlet leven = (a, b) => 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const arr: number[] = [];\n  const charCodeCache: number[] = [];\n\n  leven = (a, b) => {\n    if (a === b) return 0;\n\n    const aLen = a.length;\n    const bLen = b.length;\n\n    if (aLen === 0) return bLen;\n    if (bLen === 0) return aLen;\n\n    let bCharCode;\n    let ret;\n    let tmp;\n    let tmp2;\n    let i = 0;\n    let j = 0;\n\n    while (i < aLen) {\n      charCodeCache[i] = a.charCodeAt(i);\n      arr[i] = ++i;\n    }\n\n    while (j < bLen) {\n      bCharCode = b.charCodeAt(j);\n      tmp = j++;\n      ret = j;\n\n      for (i = 0; i < aLen; i++) {\n        tmp2 = bCharCode === charCodeCache[i] ? tmp : tmp + 1;\n        tmp = arr[i];\n        ret = arr[i] = tmp > ret ? (tmp2 > ret ? ret + 1 : tmp2) : tmp2 > tmp ? tmp + 1 : tmp2;\n      }\n    }\n\n    return ret;\n  };\n}\n\nexport default leven;\n"],"file":"leven.js"}