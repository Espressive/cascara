"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSvgIcon = exports.svgIconHandledProps = exports.svgIconDisplayName = exports.svgIconClassName = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var react_bindings_1 = require("@fluentui/react-bindings");
exports.svgIconClassName = 'ui-icon';
exports.svgIconDisplayName = 'SvgIcon';
exports.svgIconHandledProps = [
    'bordered',
    'className',
    'circular',
    'design',
    'disabled',
    'outline',
    'size',
    'rotate',
    'styles',
    'variables',
    'xSpacing',
];
var createSvgIcon = function (_a) {
    var svg = _a.svg, displayName = _a.displayName, _b = _a.handledProps, handledProps = _b === void 0 ? [] : _b;
    var Component = function (props) {
        var context = react_bindings_1.useFluentContext();
        var alt = props.alt, ariaLabel = props["aria-label"], bordered = props.bordered, circular = props.circular, className = props.className, design = props.design, disabled = props.disabled, outline = props.outline, _a = props.rotate, rotate = _a === void 0 ? 0 : _a, _b = props.size, size = _b === void 0 ? 'medium' : _b, styles = props.styles, variables = props.variables, xSpacing = props.xSpacing;
        var classes = react_bindings_1.useStyles(exports.svgIconDisplayName, {
            className: exports.svgIconClassName,
            mapPropsToStyles: function () { return ({
                bordered: bordered,
                circular: circular,
                disabled: disabled,
                outline: outline,
                rotate: rotate,
                size: size,
                xSpacing: xSpacing,
            }); },
            mapPropsToInlineStyles: function () { return ({ className: className, design: design, styles: styles, variables: variables }); },
            rtl: context.rtl,
        }).classes;
        var unhandledProps = react_bindings_1.getUnhandledProps(tslib_1.__spreadArrays(exports.svgIconHandledProps, handledProps), props);
        return React.createElement('span', tslib_1.__assign({ role: 'img', 'aria-hidden': alt || ariaLabel ? undefined : 'true', 'aria-label': ariaLabel, className: classes.root }, unhandledProps), svg({ classes: classes, rtl: context.rtl, props: props }));
    };
    Component.displayName = displayName;
    Component.handledProps = tslib_1.__spreadArrays(exports.svgIconHandledProps, handledProps);
    return Component;
};
exports.createSvgIcon = createSvgIcon;
