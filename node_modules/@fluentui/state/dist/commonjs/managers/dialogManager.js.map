{"version":3,"sources":["managers/dialogManager.ts"],"names":["createDialogManager","config","state","open","actions","close"],"mappings":";;;;;AAAA;;AAcO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD;AAAA,MAACA,MAAD;AAACA,IAAAA,MAAD,GAA8D,EAA9D;AAAA;;AAAA,SACjC,oDACKA,MADL;AAEEC,IAAAA,KAAK;AACHC,MAAAA,IAAI,EAAE;AADH,OAEAF,MAAM,CAACC,KAFP,CAFP;AAMEE,IAAAA,OAAO;AACLC,MAAAA,KAAK,EAAE;AAAA,eAAM;AAAA,iBAAO;AAAEF,YAAAA,IAAI,EAAE;AAAR,WAAP;AAAA,SAAN;AAAA,OADF;AAELA,MAAAA,IAAI,EAAE;AAAA,eAAM;AAAA,iBAAO;AAAEA,YAAAA,IAAI,EAAE;AAAR,WAAP;AAAA,SAAN;AAAA;AAFD,OAGFF,MAAM,CAACG,OAHL;AANT,KADiC;AAAA,CAA5B","sourcesContent":["import { createManager } from '../createManager';\nimport { Manager, ManagerConfig } from '../types';\n\nexport type DialogActions = {\n  close: () => void;\n  open: () => void;\n};\n\nexport type DialogState = {\n  open: boolean;\n};\n\nexport type DialogManager = Manager<DialogState, DialogActions>;\n\nexport const createDialogManager = (config: Partial<ManagerConfig<DialogState, DialogActions>> = {}): DialogManager =>\n  createManager<DialogState, DialogActions>({\n    ...config,\n    state: {\n      open: false,\n      ...config.state,\n    },\n    actions: {\n      close: () => () => ({ open: false }),\n      open: () => () => ({ open: true }),\n      ...config.actions,\n    },\n  });\n"],"file":"dialogManager.js"}