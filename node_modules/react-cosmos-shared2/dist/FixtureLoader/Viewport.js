"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Viewport = void 0;

var _react = _interopRequireDefault(require("react"));

var _FixtureContext = require("./FixtureContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// This awkward declaration is required because of the cosmosCapture static
// property, which makes TS generate a declaration for Viewport that doesn't
// conform to React's component interface. Without this explicit type TS would
// allow clients to pass any props to Viewport.
var Viewport = function Viewport(_ref) {
  var children = _ref.children,
      width = _ref.width,
      height = _ref.height;

  var _React$useContext = _react.default.useContext(_FixtureContext.FixtureContext),
      setFixtureState = _React$useContext.setFixtureState;

  _react.default.useEffect(function () {
    setFixtureState(function (fixtureState) {
      return _objectSpread(_objectSpread({}, fixtureState), {}, {
        viewport: {
          width: width,
          height: height
        }
      });
    });
  }, [setFixtureState, width, height]); // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051


  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children);
}; // @ts-ignore


exports.Viewport = Viewport;
Viewport.cosmosCapture = false;