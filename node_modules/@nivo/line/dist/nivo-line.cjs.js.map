{"version":3,"file":"nivo-line.cjs.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/PointTooltip.js","../src/SliceTooltip.js","../src/props.js","../src/hooks.js","../src/Areas.js","../src/LinesItem.js","../src/Lines.js","../src/SlicesItem.js","../src/Slices.js","../src/Points.js","../src/Mesh.js","../src/Line.js","../src/ResponsiveLine.js","../src/LineCanvas.js","../src/ResponsiveLineCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TableTooltip } from '@nivo/tooltip'\n\nconst Chip = ({ color }) => (\n    <span style={{ display: 'block', width: '12px', height: '12px', background: color }} />\n)\n\nChip.propTypes = {\n    color: PropTypes.string.isRequired,\n}\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} />,\n                point.serieId,\n                <strong key=\"value\">{point.data[`${otherAxis}Formatted`]}</strong>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { scalePropType } from '@nivo/scales'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: scalePropType.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: scalePropType.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const { xScale, yScale, series: rawSeries } = useMemo(\n        () => computeXYScalesForSeries(data, xScaleSpec, yScaleSpec, width, height),\n        [data, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => ({\n                ...serie,\n                color: getColor(serie),\n            })),\n        [rawSeries, getColor]\n    )\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({ slice, axis, debug, tooltip, isCurrent, setCurrent }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { slice, axis }), event, 'right')\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setCurrent(null)\n    }, [hideTooltip])\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({ slices, axis, debug, height, tooltip, current, setCurrent }) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points.reverse().map(point => {\n        const mappedPoint = {\n            id: point.id,\n            x: point.x,\n            y: point.y,\n            datum: point.data,\n            fill: point.color,\n            stroke: point.borderColor,\n            label: enableLabel ? getLabel(point.data) : null,\n        }\n\n        return mappedPoint\n    })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                React.createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                React.createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useState, useMemo } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, slices, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const legendData = useMemo(\n        () =>\n            series\n                .map(line => ({\n                    id: line.id,\n                    label: line.id,\n                    color: line.color,\n                }))\n                .reverse(),\n        [series]\n    )\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(React.createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","LinePointTooltip","point","React","BasicTooltip","data","xFormatted","yFormatted","serieColor","memo","Chip","color","display","width","height","background","SliceTooltip","slice","axis","otherAxis","TableTooltip","points","map","serieId","commonPropTypes","PropTypes","arrayOf","shape","id","oneOfType","string","number","isRequired","x","instanceOf","Date","y","xScale","scalePropType","xFormat","func","yScale","yFormat","layers","oneOf","curve","lineCurvePropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","bool","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","any","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","value","style","object","colors","ordinalColorsPropType","enableArea","areaOpacity","areaBlendMode","blendModePropType","areaBaselineValue","lineWidth","legends","LegendPropShape","isInteractive","debugMesh","tooltip","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","LinePropTypes","role","useMesh","motionPropTypes","defsPropTypes","LineCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","max","from","theme","scheme","PointTooltip","LineDefaultProps","animate","motionConfig","defs","fill","LineCanvasDefaultProps","global","window","devicePixelRatio","useLineGenerator","useMemo","line","defined","d","curveFromProp","useAreaGenerator","area","y1","y0","usePoints","series","getPointColor","getPointBorderColor","formatX","formatY","reduce","acc","serie","filter","datum","position","i","index","length","borderColor","useSlices","Map","forEach","has","set","get","push","Array","entries","sort","a","b","slices","slicePoints","prevSlice","nextSlice","x0","sliceWidth","reverse","sliceHeight","useLine","xScaleSpec","yScaleSpec","enableSlicesTooltip","useValueFormatter","getColor","useOrdinalColorScale","useTheme","useInheritedColor","computeXYScalesForSeries","rawSeries","lineGenerator","areaGenerator","AreaPath","path","useMotionConfig","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","mixBlendMode","Areas","lines","computedLines","LinesItem","thickness","Lines","SlicesItem","debug","isCurrent","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","createElement","handleMouseMove","handleMouseLeave","Slices","current","Points","symbol","size","borderWidth","enableLabel","label","labelYOffset","getLabel","getLabelGenerator","mappedPoints","mappedPoint","stroke","DotsItem","Mesh","margin","onMouseEnter","onMouseMove","onMouseLeave","onClick","showTooltipAt","left","top","handleClick","BaseMesh","Line","props","partialMargin","pointLabelYOffset","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","useState","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","legendData","layerById","grid","Grid","CartesianMarkers","axes","Axes","areas","crosshair","mesh","legend","BoxLegendSvg","boundDefs","bindDefs","Crosshair","SvgWrapper","layer","Fragment","defaultProps","withContainer","ResponsiveLine","ResponsiveWrapper","LineCanvas","canvasRef","canvasEl","useRef","useVoronoiMesh","delaunay","voronoi","useEffect","ctx","getContext","scale","fillStyle","fillRect","translate","strokeWidth","strokeStyle","renderGridLinesToCanvas","values","renderAxesToCanvas","right","bottom","save","globalAlpha","context","beginPath","restore","arc","Math","PI","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","containerWidth","containerHeight","getPointFromMouseEvent","getRelativeCursor","isCursorInRect","pointIndex","find","handleMouseHover","cursor","undefined","LineCanvasWithContainer","forwardRef","ref","ResponsiveLineCanvas"],"mappings":"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"}