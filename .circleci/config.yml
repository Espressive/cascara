version: 2.1

orbs:
  node: circleci/node@3.0.1
  slack: circleci/slack@3.4.2

jobs:
  install:
    executor:
      name: node/default
      tag: '14.5.0'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - persist_to_workspace:
          root: ~/
          paths:
            - '*'
      - slack/status:
          fail_only: true
          include_project_field: false
          mentions: 'here'

  lint:
    executor:
      name: node/default
      tag: '14.5.0'
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Eslint
          command: yarn lint
      - slack/status:
          fail_only: true
          include_project_field: false
          mentions: 'here'

  test:
    executor:
      name: node/default
      tag: '14.5.0'
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run tests
          command: yarn test --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./coverage/junit/
      - store_test_results:
          path: ./coverage/junit/
      - store_artifacts:
          path: ./coverage
      - slack/status:
          fail_only: true
          include_project_field: false
          mentions: 'here'

  cosmos:
    executor:
      name: node/default
      tag: '14.5.0'
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Build
          command: npx -p react-cosmos cosmos-export
      - slack/status:
          fail_only: true
          include_project_field: false
          mentions: 'here'

  build:
    executor:
      name: node/default
      tag: '14.5.0'
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Build
          command: yarn workspace button run rollup && yarn docz:build
      - slack/status:
          fail_only: true
          include_project_field: false
          mentions: 'here'

workflows:
  build-and-test:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      - cosmos:
          requires:
            - install
      - build:
          requires:
            - install
