version: 2.1

orbs:
  node: circleci/node@4.0.1
  slack: circleci/slack@4.2.1
  ghpr: narrativescience/ghpr@1.1.1

job_executor: &job_executor
  executor:
    name: node/default
    tag: '12.13.0'

# GITHUB_PR_BASE_BRANCH` - The base branch for the PR.
# GITHUB_PR_NUMBER` - The number of the PR.
# GITHUB_PR_TITLE` - The title of the PR.
# GITHUB_PR_COMMIT_MESSAGE` - The current commit's message. (Optional)
# GITHUB_PR_AUTHOR_USERNAME` - The PR author's username.
# GITHUB_PR_AUTHOR_NAME` - The PR author's name. (Optional)
# GITHUB_PR_AUTHOR_EMAIL` - The PR author's email address. (Optional)

post_steps: &post_steps
  post-steps:
    - ghpr/get-pr-info:
        get_pr_author_email: true
        get_pr_author_name: true
    - slack/status:
        custom: |
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": $GITHUB_PR_TITLE,
                  "emoji": true
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "plain_text",
                  "text": "This is a plain text section block.",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Author*"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Username*"
                  },
                  {
                    "type": "plain_text",
                    "text": $GITHUB_PR_AUTHOR_NAME,
                    "emoji": true
                  },
                  {
                    "type": "plain_text",
                    "text": $GITHUB_PR_AUTHOR_USERNAME,
                    "emoji": true
                  }
                ]
              }
            ]
          }
        event: always

jobs:
  install:
    <<: *job_executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - save_cache:
          key: cascara-MONOREPO_INSTALLED-{{ .Revision }}
          paths:
            - ~/

  lint:
    <<: *job_executor
    steps:
      - restore_cache:
          key: cascara-MONOREPO_INSTALLED-{{ .Revision }}
      - run:
          name: Run Eslint
          command: yarn lint --format junit --output-file ./coverage/eslint.xml
      - store_test_results:
          path: ./coverage
      - store_artifacts:
          path: ./coverage

  test:
    <<: *job_executor
    steps:
      - restore_cache:
          key: cascara-MONOREPO_INSTALLED-{{ .Revision }}
      - run:
          name: Run Unit Tests
          command: yarn test --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./coverage/junit/
      - store_test_results:
          path: ./coverage/junit/
      - store_artifacts:
          path: ./coverage

  build-cascara:
    <<: *job_executor
    steps:
      - restore_cache:
          key: cascara-MONOREPO_INSTALLED-{{ .Revision }}
      - run:
          name: Build Cascara Runtimes
          command: make
      - save_cache:
          key: cascara-CASCARA_RUNTIMES-{{ .Revision }}-{{ checksum "yarn.lock" }}
          paths:
            - /home/circleci/project/packages/cascara/dist
      - store_artifacts:
          path: ./packages/cascara/dist
          destination: dist

  build-cosmos:
    <<: *job_executor
    steps:
      - restore_cache:
          key: cascara-MONOREPO_INSTALLED-{{ .Revision }}
      - run:
          name: Build Cosmos
          command: yarn cosmos:build
      - store_artifacts:
          path: ./build/cosmos
          destination: cosmos

workflows:
  build-and-test:
    jobs:
      - install:
          pre-steps:
            - run: echo "//npm.pkg.github.com/:_authToken=${GITHUB_INSTALL_AUTH_TOKEN}" >> ~/.npmrc
            - run: echo "@espressive:registry=https://npm.pkg.github.com" >> ~/.npmrc
          <<: *post_steps
      - lint:
          <<: *post_steps
          requires:
            - install
      - test:
          <<: *post_steps
          requires:
            - install
      - build-cascara:
          <<: *post_steps
          requires:
            - install
      - build-cosmos:
          <<: *post_steps
          requires:
            - lint
            - test
